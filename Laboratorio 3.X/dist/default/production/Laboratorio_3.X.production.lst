

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 13 23:04:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  0105                     	;# 
   147  0107                     	;# 
   148  0108                     	;# 
   149  0109                     	;# 
   150  010C                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0185                     	;# 
   156  0187                     	;# 
   157  0188                     	;# 
   158  0189                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0185                     	;# 
   234  0187                     	;# 
   235  0188                     	;# 
   236  0189                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  008F                     	;# 
   284  0090                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  0105                     	;# 
   303  0107                     	;# 
   304  0108                     	;# 
   305  0109                     	;# 
   306  010C                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  0185                     	;# 
   312  0187                     	;# 
   313  0188                     	;# 
   314  0189                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000E                     	;# 
   333  000F                     	;# 
   334  0010                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0014                     	;# 
   339  0015                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001B                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001D                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  0081                     	;# 
   353  0085                     	;# 
   354  0086                     	;# 
   355  0087                     	;# 
   356  0088                     	;# 
   357  0089                     	;# 
   358  008C                     	;# 
   359  008D                     	;# 
   360  008E                     	;# 
   361  008F                     	;# 
   362  0090                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0097                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009A                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  0105                     	;# 
   381  0107                     	;# 
   382  0108                     	;# 
   383  0109                     	;# 
   384  010C                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  010E                     	;# 
   388  010F                     	;# 
   389  0185                     	;# 
   390  0187                     	;# 
   391  0188                     	;# 
   392  0189                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395                           
   396                           	psect	strings
   397  0800                     __pstrings:	
   398  0800                     stringtab:	
   399  0800                     __stringtab:	
   400                           
   401                           ;	String table - string pointers are 1 byte each
   402  0800  1BFF               	btfsc	btemp+1,7
   403  0801  280A               	ljmp	stringcode
   404  0802  1383               	bcf	3,7
   405  0803  187F               	btfsc	btemp+1,0
   406  0804  1783               	bsf	3,7
   407  0805  0800               	movf	0,w
   408  0806  0A84               	incf	4,f
   409  0807  1903               	skipnz
   410  0808  0AFF               	incf	btemp+1,f
   411  0809  0008               	return
   412  080A                     stringcode:	
   413  080A                     stringdir:	
   414  080A  3008               	movlw	high stringdir
   415  080B  008A               	movwf	10
   416  080C  0804               	movf	4,w
   417  080D  0A84               	incf	4,f
   418  080E  0782               	addwf	2,f
   419  080F                     __stringbase:	
   420  080F  3400               	retlw	0
   421  0810                     __end_of__stringtab:	
   422  0810                     __powers_:	
   423  0810  3400               	retlw	0
   424  0811  3400               	retlw	0
   425  0812  3480               	retlw	128
   426  0813  343F               	retlw	63
   427  0814  3400               	retlw	0
   428  0815  3400               	retlw	0
   429  0816  3420               	retlw	32
   430  0817  3441               	retlw	65
   431  0818  3400               	retlw	0
   432  0819  3400               	retlw	0
   433  081A  34C8               	retlw	200
   434  081B  3442               	retlw	66
   435  081C  3400               	retlw	0
   436  081D  3400               	retlw	0
   437  081E  347A               	retlw	122
   438  081F  3444               	retlw	68
   439  0820  3400               	retlw	0
   440  0821  3440               	retlw	64
   441  0822  341C               	retlw	28
   442  0823  3446               	retlw	70
   443  0824  3400               	retlw	0
   444  0825  3450               	retlw	80
   445  0826  34C3               	retlw	195
   446  0827  3447               	retlw	71
   447  0828  3400               	retlw	0
   448  0829  3424               	retlw	36
   449  082A  3474               	retlw	116
   450  082B  3449               	retlw	73
   451  082C  3480               	retlw	128
   452  082D  3496               	retlw	150
   453  082E  3418               	retlw	24
   454  082F  344B               	retlw	75
   455  0830  3420               	retlw	32
   456  0831  34BC               	retlw	188
   457  0832  34BE               	retlw	190
   458  0833  344C               	retlw	76
   459  0834  3428               	retlw	40
   460  0835  346B               	retlw	107
   461  0836  346E               	retlw	110
   462  0837  344E               	retlw	78
   463  0838  34F9               	retlw	249
   464  0839  3402               	retlw	2
   465  083A  3415               	retlw	21
   466  083B  3450               	retlw	80
   467  083C  34EC               	retlw	236
   468  083D  3478               	retlw	120
   469  083E  34AD               	retlw	173
   470  083F  3460               	retlw	96
   471  0840  34CA               	retlw	202
   472  0841  34F2               	retlw	242
   473  0842  3449               	retlw	73
   474  0843  3471               	retlw	113
   475  0844                     __end_of__powers_:	
   476  0844                     __npowers_:	
   477  0844  3400               	retlw	0
   478  0845  3400               	retlw	0
   479  0846  3480               	retlw	128
   480  0847  343F               	retlw	63
   481  0848  34CD               	retlw	205
   482  0849  34CC               	retlw	204
   483  084A  34CC               	retlw	204
   484  084B  343D               	retlw	61
   485  084C  340A               	retlw	10
   486  084D  34D7               	retlw	215
   487  084E  3423               	retlw	35
   488  084F  343C               	retlw	60
   489  0850  346F               	retlw	111
   490  0851  3412               	retlw	18
   491  0852  3483               	retlw	131
   492  0853  343A               	retlw	58
   493  0854  3417               	retlw	23
   494  0855  34B7               	retlw	183
   495  0856  34D1               	retlw	209
   496  0857  3438               	retlw	56
   497  0858  34AC               	retlw	172
   498  0859  34C5               	retlw	197
   499  085A  3427               	retlw	39
   500  085B  3437               	retlw	55
   501  085C  34BD               	retlw	189
   502  085D  3437               	retlw	55
   503  085E  3486               	retlw	134
   504  085F  3435               	retlw	53
   505  0860  3495               	retlw	149
   506  0861  34BF               	retlw	191
   507  0862  34D6               	retlw	214
   508  0863  3433               	retlw	51
   509  0864  3477               	retlw	119
   510  0865  34CC               	retlw	204
   511  0866  342B               	retlw	43
   512  0867  3432               	retlw	50
   513  0868  345F               	retlw	95
   514  0869  3470               	retlw	112
   515  086A  3489               	retlw	137
   516  086B  3430               	retlw	48
   517  086C  34FF               	retlw	255
   518  086D  34E6               	retlw	230
   519  086E  34DB               	retlw	219
   520  086F  342E               	retlw	46
   521  0870  3408               	retlw	8
   522  0871  34E5               	retlw	229
   523  0872  343C               	retlw	60
   524  0873  341E               	retlw	30
   525  0874  3460               	retlw	96
   526  0875  3442               	retlw	66
   527  0876  34A2               	retlw	162
   528  0877  340D               	retlw	13
   529  0878                     __end_of__npowers_:	
   530  0878                     _dpowers:	
   531  0878  3401               	retlw	1
   532  0879  3400               	retlw	0
   533  087A  3400               	retlw	0
   534  087B  3400               	retlw	0
   535  087C  340A               	retlw	10
   536  087D  3400               	retlw	0
   537  087E  3400               	retlw	0
   538  087F  3400               	retlw	0
   539  0880  3464               	retlw	100
   540  0881  3400               	retlw	0
   541  0882  3400               	retlw	0
   542  0883  3400               	retlw	0
   543  0884  34E8               	retlw	232
   544  0885  3403               	retlw	3
   545  0886  3400               	retlw	0
   546  0887  3400               	retlw	0
   547  0888  3410               	retlw	16
   548  0889  3427               	retlw	39
   549  088A  3400               	retlw	0
   550  088B  3400               	retlw	0
   551  088C  34A0               	retlw	160
   552  088D  3486               	retlw	134
   553  088E  3401               	retlw	1
   554  088F  3400               	retlw	0
   555  0890  3440               	retlw	64
   556  0891  3442               	retlw	66
   557  0892  340F               	retlw	15
   558  0893  3400               	retlw	0
   559  0894  3480               	retlw	128
   560  0895  3496               	retlw	150
   561  0896  3498               	retlw	152
   562  0897  3400               	retlw	0
   563  0898  3400               	retlw	0
   564  0899  34E1               	retlw	225
   565  089A  34F5               	retlw	245
   566  089B  3405               	retlw	5
   567  089C  3400               	retlw	0
   568  089D  34CA               	retlw	202
   569  089E  349A               	retlw	154
   570  089F  343B               	retlw	59
   571  08A0                     __end_of_dpowers:	
   572  000B                     _INTCONbits	set	11
   573  001E                     _ADRESH	set	30
   574  000C                     _PIR1bits	set	12
   575  001F                     _ADCON0bits	set	31
   576  0009                     _PORTE	set	9
   577  0007                     _PORTC	set	7
   578  0006                     _PORTB	set	6
   579  0005                     _PORTA	set	5
   580  008C                     _PIE1bits	set	140
   581  009F                     _ADCON1bits	set	159
   582  009E                     _ADRESL	set	158
   583  0088                     _TRISD	set	136
   584  0087                     _TRISC	set	135
   585  0086                     _TRISB	set	134
   586  0085                     _TRISA	set	133
   587  0189                     _ANSELH	set	393
   588  0188                     _ANSEL	set	392
   589  08A0                     STR_1:	
   590  08A0  3450               	retlw	80	;'P'
   591  08A1  346F               	retlw	111	;'o'
   592  08A2  3474               	retlw	116	;'t'
   593  08A3  3431               	retlw	49	;'1'
   594  08A4  3420               	retlw	32	;' '
   595  08A5  3420               	retlw	32	;' '
   596  08A6  3420               	retlw	32	;' '
   597  08A7  3420               	retlw	32	;' '
   598  08A8  3420               	retlw	32	;' '
   599  08A9  3450               	retlw	80	;'P'
   600  08AA  344F               	retlw	79	;'O'
   601  08AB  3454               	retlw	84	;'T'
   602  08AC  3432               	retlw	50	;'2'
   603  08AD  3420               	retlw	32	;' '
   604  08AE  3420               	retlw	32	;' '
   605  08AF  3420               	retlw	32	;' '
   606  08B0  3420               	retlw	32	;' '
   607  08B1  3443               	retlw	67	;'C'
   608  08B2  344F               	retlw	79	;'O'
   609  08B3  344E               	retlw	78	;'N'
   610  08B4  3454               	retlw	84	;'T'
   611  08B5  3400               	retlw	0
   612  08B6                     STR_2:	
   613  08B6  3425               	retlw	37	;'%'
   614  08B7  3430               	retlw	48	;'0'
   615  08B8  3434               	retlw	52	;'4'
   616  08B9  342E               	retlw	46	;'.'
   617  08BA  3432               	retlw	50	;'2'
   618  08BB  3466               	retlw	102	;'f'
   619  08BC  3420               	retlw	32	;' '
   620  08BD  3425               	retlw	37	;'%'
   621  08BE  3430               	retlw	48	;'0'
   622  08BF  3434               	retlw	52	;'4'
   623  08C0  342E               	retlw	46	;'.'
   624  08C1  3432               	retlw	50	;'2'
   625  08C2  3466               	retlw	102	;'f'
   626  08C3  3400               	retlw	0
   627  08C4                     STR_3:	
   628  08C4  3456               	retlw	86	;'V'
   629  08C5  3400               	retlw	0
   630  08C4                     
   631                           ; #config settings
   632  0000                     
   633                           	psect	cinit
   634  07F3                     start_initialization:	
   635  07F3                     __initialization:	
   636                           
   637                           ; Clear objects allocated to BANK1
   638  07F3  1383               	bcf	3,7	;select IRP bank0
   639  07F4  30C9               	movlw	low __pbssBANK1
   640  07F5  0084               	movwf	4
   641  07F6  30EE               	movlw	low (__pbssBANK1+37)
   642  07F7  160A  158A  20AF  120A  118A  	fcall	clear_ram0
   643  07FC                     end_of_initialization:	
   644                           ;End of C runtime variable initialization code
   645                           
   646  07FC                     __end_of__initialization:	
   647  07FC  0183               	clrf	3
   648  07FD  160A  158A  2E4A   	ljmp	_main	;jump to C main() function
   649                           
   650                           	psect	bssBANK1
   651  00C9                     __pbssBANK1:	
   652  00C9                     _POT2:	
   653  00C9                     	ds	4
   654  00CD                     _POT1:	
   655  00CD                     	ds	4
   656  00D1                     _VAR_LCD:	
   657  00D1                     	ds	2
   658  00D3                     _RW:	
   659  00D3                     	ds	2
   660  00D5                     _RS:	
   661  00D5                     	ds	2
   662  00D7                     _EN:	
   663  00D7                     	ds	2
   664  00D9                     _VAL_ADC2:	
   665  00D9                     	ds	2
   666  00DB                     _VAL_ADC:	
   667  00DB                     	ds	2
   668  00DD                     _cursor:	
   669  00DD                     	ds	1
   670  00DE                     _BUFFER:	
   671  00DE                     	ds	16
   672                           
   673                           	psect	clrtext
   674  18AF                     clear_ram0:	
   675                           ;	Called with FSR containing the base address, and
   676                           ;	W with the last address+1
   677                           
   678  18AF  0064               	clrwdt	;clear the watchdog before getting into this loop
   679  18B0                     clrloop0:	
   680  18B0  0180               	clrf	0	;clear RAM location pointed to by FSR
   681  18B1  0A84               	incf	4,f	;increment pointer
   682  18B2  0604               	xorwf	4,w	;XOR with final address
   683  18B3  1903               	btfsc	3,2	;have we reached the end yet?
   684  18B4  3400               	retlw	0	;all done for this memory range, return
   685  18B5  0604               	xorwf	4,w	;XOR again to restore value
   686  18B6  28B0               	goto	clrloop0	;do the next byte
   687                           
   688                           	psect	cstackBANK1
   689  00A0                     __pcstackBANK1:	
   690  00A0                     ?_sprintf:	
   691  00A0                     sprintf@f:	
   692                           ; 2 bytes @ 0x0
   693                           
   694                           
   695                           ; 1 bytes @ 0x0
   696  00A0                     	ds	9
   697  00A9                     ??_sprintf:	
   698                           
   699                           ; 1 bytes @ 0x9
   700  00A9                     	ds	5
   701  00AE                     _sprintf$977:	
   702                           
   703                           ; 4 bytes @ 0xE
   704  00AE                     	ds	4
   705  00B2                     sprintf@ap:	
   706                           
   707                           ; 1 bytes @ 0x12
   708  00B2                     	ds	1
   709  00B3                     sprintf@val:	
   710                           
   711                           ; 4 bytes @ 0x13
   712  00B3                     	ds	4
   713  00B7                     sprintf@tmpval:	
   714                           
   715                           ; 4 bytes @ 0x17
   716  00B7                     	ds	4
   717  00BB                     sprintf@eexp:	
   718                           
   719                           ; 2 bytes @ 0x1B
   720  00BB                     	ds	2
   721  00BD                     sprintf@flag:	
   722                           
   723                           ; 2 bytes @ 0x1D
   724  00BD                     	ds	2
   725  00BF                     sprintf@width:	
   726                           
   727                           ; 2 bytes @ 0x1F
   728  00BF                     	ds	2
   729  00C1                     sprintf@fval:	
   730                           
   731                           ; 4 bytes @ 0x21
   732  00C1                     	ds	4
   733  00C5                     sprintf@prec:	
   734                           
   735                           ; 2 bytes @ 0x25
   736  00C5                     	ds	2
   737  00C7                     sprintf@sp:	
   738                           
   739                           ; 1 bytes @ 0x27
   740  00C7                     	ds	1
   741  00C8                     sprintf@c:	
   742                           
   743                           ; 1 bytes @ 0x28
   744  00C8                     	ds	1
   745                           
   746                           	psect	cstackCOMMON
   747  0070                     __pcstackCOMMON:	
   748  0070                     ?_isdigit:	
   749  0070                     ?___fleq:	
   750                           ; 1 bit 
   751                           
   752  0070                     ?___flge:	
   753                           ; 1 bit 
   754                           
   755  0070                     ?_LCD_PROG:	
   756                           ; 1 bit 
   757                           
   758  0070                     ?_INTERRUPCIONES:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ??_INTERRUPCIONES:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_LCD_CLR:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_ADC:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ??_ADC:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_ADC1:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ??_ADC1:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ??_isdigit:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_SETUP:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ??_SETUP:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_main:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_LCD_INIT:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_CHAR:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?_delay:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?__Umul8_16:	
   801                           ; 2 bytes @ 0x0
   802                           
   803  0070                     ?___wmul:	
   804                           ; 2 bytes @ 0x0
   805                           
   806  0070                     ?___awmod:	
   807                           ; 2 bytes @ 0x0
   808                           
   809  0070                     ?___lwmod:	
   810                           ; 2 bytes @ 0x0
   811                           
   812  0070                     ?__tdiv_to_l_:	
   813                           ; 2 bytes @ 0x0
   814                           
   815  0070                     ?__div_to_l_:	
   816                           ; 4 bytes @ 0x0
   817                           
   818  0070                     ?___lldiv:	
   819                           ; 4 bytes @ 0x0
   820                           
   821  0070                     ?___flneg:	
   822                           ; 4 bytes @ 0x0
   823                           
   824  0070                     ?___llmod:	
   825                           ; 4 bytes @ 0x0
   826                           
   827  0070                     ?___fldiv:	
   828                           ; 4 bytes @ 0x0
   829                           
   830  0070                     ?___xxtofl:	
   831                           ; 4 bytes @ 0x0
   832                           
   833  0070                     _isdigit$797:	
   834                           ; 4 bytes @ 0x0
   835                           
   836  0070                     __Umul8_16@multiplicand:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ___wmul@multiplier:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ___awmod@divisor:	
   843                           ; 2 bytes @ 0x0
   844                           
   845  0070                     ___lwmod@divisor:	
   846                           ; 2 bytes @ 0x0
   847                           
   848  0070                     ___lldiv@divisor:	
   849                           ; 2 bytes @ 0x0
   850                           
   851  0070                     __div_to_l_@f1:	
   852                           ; 4 bytes @ 0x0
   853                           
   854  0070                     ___fleq@ff1:	
   855                           ; 4 bytes @ 0x0
   856                           
   857  0070                     ___flge@ff1:	
   858                           ; 4 bytes @ 0x0
   859                           
   860  0070                     ___flneg@f1:	
   861                           ; 4 bytes @ 0x0
   862                           
   863  0070                     __tdiv_to_l_@f1:	
   864                           ; 4 bytes @ 0x0
   865                           
   866  0070                     ___llmod@divisor:	
   867                           ; 4 bytes @ 0x0
   868                           
   869  0070                     ___fldiv@a:	
   870                           ; 4 bytes @ 0x0
   871                           
   872  0070                     ___xxtofl@val:	
   873                           ; 4 bytes @ 0x0
   874                           
   875                           
   876                           ; 4 bytes @ 0x0
   877  0070                     	ds	1
   878  0071                     isdigit@c:	
   879                           
   880                           ; 1 bytes @ 0x1
   881  0071                     	ds	1
   882  0072                     ??_delay:	
   883  0072                     ??__Umul8_16:	
   884                           ; 1 bytes @ 0x2
   885                           
   886  0072                     ___wmul@multiplicand:	
   887                           ; 1 bytes @ 0x2
   888                           
   889  0072                     ___awmod@dividend:	
   890                           ; 2 bytes @ 0x2
   891                           
   892  0072                     ___lwmod@dividend:	
   893                           ; 2 bytes @ 0x2
   894                           
   895                           
   896                           ; 2 bytes @ 0x2
   897  0072                     	ds	2
   898  0074                     ??___wmul:	
   899  0074                     ??___awmod:	
   900                           ; 1 bytes @ 0x4
   901                           
   902  0074                     ??___flneg:	
   903                           ; 1 bytes @ 0x4
   904                           
   905  0074                     ??___lwmod:	
   906                           ; 1 bytes @ 0x4
   907                           
   908  0074                     ??___xxtofl:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0074                     delay@d:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0074                     ___wmul@product:	
   915                           ; 2 bytes @ 0x4
   916                           
   917  0074                     __Umul8_16@product:	
   918                           ; 2 bytes @ 0x4
   919                           
   920  0074                     ___lldiv@dividend:	
   921                           ; 2 bytes @ 0x4
   922                           
   923  0074                     __div_to_l_@f2:	
   924                           ; 4 bytes @ 0x4
   925                           
   926  0074                     ___fleq@ff2:	
   927                           ; 4 bytes @ 0x4
   928                           
   929  0074                     ___flge@ff2:	
   930                           ; 4 bytes @ 0x4
   931                           
   932  0074                     __tdiv_to_l_@f2:	
   933                           ; 4 bytes @ 0x4
   934                           
   935  0074                     ___llmod@dividend:	
   936                           ; 4 bytes @ 0x4
   937                           
   938  0074                     ___fldiv@b:	
   939                           ; 4 bytes @ 0x4
   940                           
   941                           
   942                           ; 4 bytes @ 0x4
   943  0074                     	ds	1
   944  0075                     ___awmod@counter:	
   945  0075                     ___lwmod@counter:	
   946                           ; 1 bytes @ 0x5
   947                           
   948                           
   949                           ; 1 bytes @ 0x5
   950  0075                     	ds	1
   951  0076                     ??_LCD_INIT:	
   952  0076                     ??_CHAR:	
   953                           ; 1 bytes @ 0x6
   954                           
   955  0076                     ?___lwdiv:	
   956                           ; 1 bytes @ 0x6
   957                           
   958  0076                     ___awmod@sign:	
   959                           ; 2 bytes @ 0x6
   960                           
   961  0076                     ___lwdiv@divisor:	
   962                           ; 1 bytes @ 0x6
   963                           
   964  0076                     __Umul8_16@word_mpld:	
   965                           ; 2 bytes @ 0x6
   966                           
   967                           
   968                           ; 2 bytes @ 0x6
   969  0076                     	ds	1
   970  0077                     ?___awdiv:	
   971  0077                     ___awdiv@divisor:	
   972                           ; 2 bytes @ 0x7
   973                           
   974                           
   975                           ; 2 bytes @ 0x7
   976  0077                     	ds	1
   977  0078                     ??__tdiv_to_l_:	
   978  0078                     ??__div_to_l_:	
   979                           ; 1 bytes @ 0x8
   980                           
   981  0078                     ??___lldiv:	
   982                           ; 1 bytes @ 0x8
   983                           
   984  0078                     ??___fleq:	
   985                           ; 1 bytes @ 0x8
   986                           
   987  0078                     ??___flge:	
   988                           ; 1 bytes @ 0x8
   989                           
   990  0078                     ??___llmod:	
   991                           ; 1 bytes @ 0x8
   992                           
   993  0078                     ??___fldiv:	
   994                           ; 1 bytes @ 0x8
   995                           
   996  0078                     LCD_INIT@a:	
   997                           ; 1 bytes @ 0x8
   998                           
   999  0078                     CHAR@a:	
  1000                           ; 1 bytes @ 0x8
  1001                           
  1002  0078                     ___xxtofl@sign:	
  1003                           ; 1 bytes @ 0x8
  1004                           
  1005  0078                     __Umul8_16@multiplier:	
  1006                           ; 1 bytes @ 0x8
  1007                           
  1008  0078                     ___lwdiv@dividend:	
  1009                           ; 1 bytes @ 0x8
  1010                           
  1011                           
  1012                           ; 2 bytes @ 0x8
  1013  0078                     	ds	1
  1014  0079                     ??_LCD_PROG:	
  1015  0079                     ??_LCD_CLR:	
  1016                           ; 1 bytes @ 0x9
  1017                           
  1018  0079                     ?_LCD_CURSOR:	
  1019                           ; 1 bytes @ 0x9
  1020                           
  1021  0079                     ?_WRITE:	
  1022                           ; 1 bytes @ 0x9
  1023                           
  1024  0079                     LCD_CURSOR@b:	
  1025                           ; 1 bytes @ 0x9
  1026                           
  1027  0079                     ___llmod@counter:	
  1028                           ; 1 bytes @ 0x9
  1029                           
  1030  0079                     ___xxtofl@exp:	
  1031                           ; 1 bytes @ 0x9
  1032                           
  1033  0079                     WRITE@a:	
  1034                           ; 1 bytes @ 0x9
  1035                           
  1036  0079                     ___awdiv@dividend:	
  1037                           ; 2 bytes @ 0x9
  1038                           
  1039  0079                     ___lldiv@quotient:	
  1040                           ; 2 bytes @ 0x9
  1041                           
  1042                           
  1043                           ; 4 bytes @ 0x9
  1044  0079                     	ds	1
  1045  007A                     ??_LCD_CURSOR:	
  1046  007A                     ??___lwdiv:	
  1047                           ; 1 bytes @ 0xA
  1048                           
  1049  007A                     ___xxtofl@arg:	
  1050                           ; 1 bytes @ 0xA
  1051                           
  1052                           
  1053                           ; 4 bytes @ 0xA
  1054  007A                     	ds	1
  1055  007B                     ??_WRITE:	
  1056  007B                     ??___awdiv:	
  1057                           ; 1 bytes @ 0xB
  1058                           
  1059  007B                     LCD_CURSOR@a:	
  1060                           ; 1 bytes @ 0xB
  1061                           
  1062  007B                     ___lwdiv@quotient:	
  1063                           ; 1 bytes @ 0xB
  1064                           
  1065                           
  1066                           ; 2 bytes @ 0xB
  1067  007B                     	ds	2
  1068  007D                     ___lldiv@counter:	
  1069  007D                     ___lwdiv@counter:	
  1070                           ; 1 bytes @ 0xD
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0xD
  1074  007D                     	ds	1
  1075  007E                     ??___flsub:	
  1076                           
  1077                           	psect	cstackBANK0
  1078  0020                     __pcstackBANK0:	
  1079                           ; 1 bytes @ 0xE
  1080                           
  1081  0020                     ___awdiv@counter:	
  1082  0020                     WRITE@b:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0020                     __div_to_l_@quot:	
  1086                           ; 2 bytes @ 0x0
  1087                           
  1088  0020                     __tdiv_to_l_@quot:	
  1089                           ; 4 bytes @ 0x0
  1090                           
  1091  0020                     ___fldiv@rem:	
  1092                           ; 4 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 4 bytes @ 0x0
  1096  0020                     	ds	1
  1097  0021                     ___awdiv@sign:	
  1098                           
  1099                           ; 1 bytes @ 0x1
  1100  0021                     	ds	1
  1101  0022                     ___awdiv@quotient:	
  1102                           
  1103                           ; 2 bytes @ 0x2
  1104  0022                     	ds	2
  1105  0024                     ?___flmul:	
  1106  0024                     __div_to_l_@cntr:	
  1107                           ; 4 bytes @ 0x4
  1108                           
  1109  0024                     __tdiv_to_l_@cntr:	
  1110                           ; 1 bytes @ 0x4
  1111                           
  1112  0024                     ___fldiv@sign:	
  1113                           ; 1 bytes @ 0x4
  1114                           
  1115  0024                     ___flmul@b:	
  1116                           ; 1 bytes @ 0x4
  1117                           
  1118                           
  1119                           ; 4 bytes @ 0x4
  1120  0024                     	ds	1
  1121  0025                     __div_to_l_@exp1:	
  1122  0025                     __tdiv_to_l_@exp1:	
  1123                           ; 1 bytes @ 0x5
  1124                           
  1125  0025                     ___fldiv@new_exp:	
  1126                           ; 1 bytes @ 0x5
  1127                           
  1128                           
  1129                           ; 2 bytes @ 0x5
  1130  0025                     	ds	2
  1131  0027                     ___fldiv@grs:	
  1132                           
  1133                           ; 4 bytes @ 0x7
  1134  0027                     	ds	1
  1135  0028                     ___flmul@a:	
  1136                           
  1137                           ; 4 bytes @ 0x8
  1138  0028                     	ds	3
  1139  002B                     ___fldiv@bexp:	
  1140                           
  1141                           ; 1 bytes @ 0xB
  1142  002B                     	ds	1
  1143  002C                     ??___flmul:	
  1144  002C                     ___fldiv@aexp:	
  1145                           ; 1 bytes @ 0xC
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0xC
  1149  002C                     	ds	5
  1150  0031                     ___flmul@sign:	
  1151                           
  1152                           ; 1 bytes @ 0x11
  1153  0031                     	ds	1
  1154  0032                     ___flmul@grs:	
  1155                           
  1156                           ; 4 bytes @ 0x12
  1157  0032                     	ds	4
  1158  0036                     ___flmul@aexp:	
  1159                           
  1160                           ; 1 bytes @ 0x16
  1161  0036                     	ds	1
  1162  0037                     ___flmul@bexp:	
  1163                           
  1164                           ; 1 bytes @ 0x17
  1165  0037                     	ds	1
  1166  0038                     ___flmul@prod:	
  1167                           
  1168                           ; 4 bytes @ 0x18
  1169  0038                     	ds	4
  1170  003C                     ___flmul@temp:	
  1171                           
  1172                           ; 2 bytes @ 0x1C
  1173  003C                     	ds	2
  1174  003E                     ?_fround:	
  1175  003E                     ?_scale:	
  1176                           ; 4 bytes @ 0x1E
  1177                           
  1178                           
  1179                           ; 4 bytes @ 0x1E
  1180  003E                     	ds	4
  1181  0042                     ??_fround:	
  1182  0042                     ??_scale:	
  1183                           ; 1 bytes @ 0x22
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x22
  1187  0042                     	ds	7
  1188  0049                     _fround$975:	
  1189                           
  1190                           ; 4 bytes @ 0x29
  1191  0049                     	ds	3
  1192  004C                     _scale$976:	
  1193                           
  1194                           ; 4 bytes @ 0x2C
  1195  004C                     	ds	1
  1196  004D                     _fround$974:	
  1197                           
  1198                           ; 4 bytes @ 0x2D
  1199  004D                     	ds	3
  1200  0050                     scale@scl:	
  1201                           
  1202                           ; 1 bytes @ 0x30
  1203  0050                     	ds	1
  1204  0051                     ?___fltol:	
  1205  0051                     fround@prec:	
  1206                           ; 4 bytes @ 0x31
  1207                           
  1208  0051                     ___fltol@f1:	
  1209                           ; 1 bytes @ 0x31
  1210                           
  1211                           
  1212                           ; 4 bytes @ 0x31
  1213  0051                     	ds	1
  1214  0052                     ?___fladd:	
  1215  0052                     ___fladd@b:	
  1216                           ; 4 bytes @ 0x32
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x32
  1220  0052                     	ds	3
  1221  0055                     ??___fltol:	
  1222                           
  1223                           ; 1 bytes @ 0x35
  1224  0055                     	ds	1
  1225  0056                     ___fladd@a:	
  1226                           
  1227                           ; 4 bytes @ 0x36
  1228  0056                     	ds	4
  1229  005A                     ??___fladd:	
  1230  005A                     ___fltol@sign1:	
  1231                           ; 1 bytes @ 0x3A
  1232                           
  1233                           
  1234                           ; 1 bytes @ 0x3A
  1235  005A                     	ds	1
  1236  005B                     ___fltol@exp1:	
  1237                           
  1238                           ; 1 bytes @ 0x3B
  1239  005B                     	ds	7
  1240  0062                     ___fladd@signs:	
  1241                           
  1242                           ; 1 bytes @ 0x42
  1243  0062                     	ds	1
  1244  0063                     ___fladd@aexp:	
  1245                           
  1246                           ; 1 bytes @ 0x43
  1247  0063                     	ds	1
  1248  0064                     ___fladd@bexp:	
  1249                           
  1250                           ; 1 bytes @ 0x44
  1251  0064                     	ds	1
  1252  0065                     ___fladd@grs:	
  1253                           
  1254                           ; 1 bytes @ 0x45
  1255  0065                     	ds	1
  1256  0066                     ?___flsub:	
  1257  0066                     ___flsub@a:	
  1258                           ; 4 bytes @ 0x46
  1259                           
  1260                           
  1261                           ; 4 bytes @ 0x46
  1262  0066                     	ds	4
  1263  006A                     ___flsub@b:	
  1264                           
  1265                           ; 4 bytes @ 0x4A
  1266  006A                     	ds	4
  1267  006E                     ??_main:	
  1268                           
  1269                           ; 1 bytes @ 0x4E
  1270  006E                     	ds	2
  1271                           
  1272                           	psect	maintext
  1273  1E4A                     __pmaintext:	
  1274 ;;
  1275 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1276 ;;
  1277 ;; *************** function _main *****************
  1278 ;; Defined at:
  1279 ;;		line 59 in file "Lab3.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : B00/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0
  1295 ;;      Temps:          0       2       0       0       0
  1296 ;;      Totals:         0       2       0       0       0
  1297 ;;Total ram usage:        2 bytes
  1298 ;; Hardware stack levels required when called:    4
  1299 ;; This function calls:
  1300 ;;		_ADC
  1301 ;;		_ADC1
  1302 ;;		_INTERRUPCIONES
  1303 ;;		_LCD_CLR
  1304 ;;		_LCD_CURSOR
  1305 ;;		_LCD_PROG
  1306 ;;		_SETUP
  1307 ;;		_WRITE
  1308 ;;		___fldiv
  1309 ;;		___flmul
  1310 ;;		___xxtofl
  1311 ;;		_sprintf
  1312 ;; This function is called by:
  1313 ;;		Startup code after reset
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           
  1318                           ;psect for function _main
  1319  1E4A                     _main:	
  1320  1E4A                     l3751:	
  1321                           ;incstack = 0
  1322                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1323                           
  1324                           
  1325                           ;Lab3.c: 60:     SETUP();
  1326  1E4A  120A  118A  200E  160A  158A  	fcall	_SETUP
  1327                           
  1328                           ;Lab3.c: 61:     LCD_PROG();
  1329  1E4F  160A  158A  2284  160A  158A  	fcall	_LCD_PROG
  1330  1E54                     l3753:	
  1331                           
  1332                           ;Lab3.c: 62:     INTERRUPCIONES();
  1333  1E54  160A  158A  20C3  160A  158A  	fcall	_INTERRUPCIONES
  1334  1E59                     l3755:	
  1335                           
  1336                           ;Lab3.c: 63:     LCD_CLR();
  1337  1E59  120A  158A  20CA  160A  158A  	fcall	_LCD_CLR
  1338  1E5E                     l3757:	
  1339                           
  1340                           ;Lab3.c: 64:     LCD_CURSOR(1,1);
  1341  1E5E  01F9               	clrf	LCD_CURSOR@b
  1342  1E5F  0AF9               	incf	LCD_CURSOR@b,f
  1343  1E60  3001               	movlw	1
  1344  1E61  160A  158A  2172  160A  158A  	fcall	_LCD_CURSOR
  1345  1E66                     l3759:	
  1346                           
  1347                           ;Lab3.c: 65:     WRITE("Pot1     POT2    CONT");
  1348  1E66  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1349  1E67  00F9               	movwf	WRITE@a
  1350  1E68  3080               	movlw	128
  1351  1E69  00FA               	movwf	WRITE@a+1
  1352  1E6A  160A  158A  223E  160A  158A  	fcall	_WRITE
  1353  1E6F                     l3761:	
  1354                           
  1355                           ;Lab3.c: 67:         ADC();
  1356  1E6F  160A  158A  20A7  160A  158A  	fcall	_ADC
  1357  1E74                     l3763:	
  1358                           
  1359                           ;Lab3.c: 68:         ADCON0bits.GO_DONE=1;
  1360  1E74  1283               	bcf	3,5	;RP0=0, select bank0
  1361  1E75  1303               	bcf	3,6	;RP1=0, select bank0
  1362  1E76  149F               	bsf	31,1	;volatile
  1363  1E77                     l3765:	
  1364                           
  1365                           ;Lab3.c: 69:         PIR1bits.ADIF=0;
  1366  1E77  130C               	bcf	12,6	;volatile
  1367  1E78                     l3767:	
  1368                           
  1369                           ;Lab3.c: 71:         VAL_ADC=ADRESH;
  1370  1E78  081E               	movf	30,w	;volatile
  1371  1E79  00EE               	movwf	??_main
  1372  1E7A  01EF               	clrf	??_main+1
  1373  1E7B  086E               	movf	??_main,w
  1374  1E7C  1683               	bsf	3,5	;RP0=1, select bank1
  1375  1E7D  1303               	bcf	3,6	;RP1=0, select bank1
  1376  1E7E  00DB               	movwf	_VAL_ADC^(0+128)
  1377  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
  1378  1E80  1303               	bcf	3,6	;RP1=0, select bank0
  1379  1E81  086F               	movf	??_main+1,w
  1380  1E82  1683               	bsf	3,5	;RP0=1, select bank1
  1381  1E83  1303               	bcf	3,6	;RP1=0, select bank1
  1382  1E84  00DC               	movwf	(_VAL_ADC+1)^(0+128)
  1383  1E85                     l3769:	
  1384                           
  1385                           ;Lab3.c: 72:         VAL_ADC=VAL_ADC<<8;
  1386  1E85  085B               	movf	_VAL_ADC^(0+128),w
  1387  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  1388  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  1389  1E88  00EF               	movwf	??_main+1
  1390  1E89  01EE               	clrf	??_main
  1391  1E8A  086E               	movf	??_main,w
  1392  1E8B  1683               	bsf	3,5	;RP0=1, select bank1
  1393  1E8C  1303               	bcf	3,6	;RP1=0, select bank1
  1394  1E8D  00DB               	movwf	_VAL_ADC^(0+128)
  1395  1E8E  1283               	bcf	3,5	;RP0=0, select bank0
  1396  1E8F  1303               	bcf	3,6	;RP1=0, select bank0
  1397  1E90  086F               	movf	??_main+1,w
  1398  1E91  1683               	bsf	3,5	;RP0=1, select bank1
  1399  1E92  1303               	bcf	3,6	;RP1=0, select bank1
  1400  1E93  00DC               	movwf	(_VAL_ADC+1)^(0+128)
  1401  1E94                     l3771:	
  1402                           
  1403                           ;Lab3.c: 73:         VAL_ADC=VAL_ADC + ADRESL;
  1404  1E94  081E               	movf	30,w	;volatile
  1405  1E95  075B               	addwf	_VAL_ADC^(0+128),w
  1406  1E96  1283               	bcf	3,5	;RP0=0, select bank0
  1407  1E97  1303               	bcf	3,6	;RP1=0, select bank0
  1408  1E98  00EE               	movwf	??_main
  1409  1E99  1683               	bsf	3,5	;RP0=1, select bank1
  1410  1E9A  1303               	bcf	3,6	;RP1=0, select bank1
  1411  1E9B  085C               	movf	(_VAL_ADC+1)^(0+128),w
  1412  1E9C  1803               	skipnc
  1413  1E9D  0A5C               	incf	(_VAL_ADC+1)^(0+128),w
  1414  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  1415  1E9F  1303               	bcf	3,6	;RP1=0, select bank0
  1416  1EA0  00EF               	movwf	??_main+1
  1417  1EA1  086E               	movf	??_main,w
  1418  1EA2  1683               	bsf	3,5	;RP0=1, select bank1
  1419  1EA3  1303               	bcf	3,6	;RP1=0, select bank1
  1420  1EA4  00DB               	movwf	_VAL_ADC^(0+128)
  1421  1EA5  1283               	bcf	3,5	;RP0=0, select bank0
  1422  1EA6  1303               	bcf	3,6	;RP1=0, select bank0
  1423  1EA7  086F               	movf	??_main+1,w
  1424  1EA8  1683               	bsf	3,5	;RP0=1, select bank1
  1425  1EA9  1303               	bcf	3,6	;RP1=0, select bank1
  1426  1EAA  00DC               	movwf	(_VAL_ADC+1)^(0+128)
  1427  1EAB                     l3773:	
  1428                           
  1429                           ;Lab3.c: 74:         POT1=VAL_ADC*5.0;
  1430  1EAB  3040               	movlw	64
  1431  1EAC  1283               	bcf	3,5	;RP0=0, select bank0
  1432  1EAD  1303               	bcf	3,6	;RP1=0, select bank0
  1433  1EAE  00A7               	movwf	___flmul@b+3
  1434  1EAF  30A0               	movlw	160
  1435  1EB0  00A6               	movwf	___flmul@b+2
  1436  1EB1  3000               	movlw	0
  1437  1EB2  00A5               	movwf	___flmul@b+1
  1438  1EB3  3000               	movlw	0
  1439  1EB4  00A4               	movwf	___flmul@b
  1440  1EB5  1683               	bsf	3,5	;RP0=1, select bank1
  1441  1EB6  1303               	bcf	3,6	;RP1=0, select bank1
  1442  1EB7  085B               	movf	_VAL_ADC^(0+128),w
  1443  1EB8  00F0               	movwf	___xxtofl@val
  1444  1EB9  085C               	movf	(_VAL_ADC+1)^(0+128),w
  1445  1EBA  00F1               	movwf	___xxtofl@val+1
  1446  1EBB  01F2               	clrf	___xxtofl@val+2
  1447  1EBC  01F3               	clrf	___xxtofl@val+3
  1448  1EBD  3000               	movlw	0
  1449  1EBE  160A  158A  24D3  160A  158A  	fcall	___xxtofl
  1450  1EC3  0873               	movf	?___xxtofl+3,w
  1451  1EC4  1283               	bcf	3,5	;RP0=0, select bank0
  1452  1EC5  1303               	bcf	3,6	;RP1=0, select bank0
  1453  1EC6  00AB               	movwf	___flmul@a+3
  1454  1EC7  0872               	movf	?___xxtofl+2,w
  1455  1EC8  00AA               	movwf	___flmul@a+2
  1456  1EC9  0871               	movf	?___xxtofl+1,w
  1457  1ECA  00A9               	movwf	___flmul@a+1
  1458  1ECB  0870               	movf	?___xxtofl,w
  1459  1ECC  00A8               	movwf	___flmul@a
  1460  1ECD  120A  158A  249F  160A  158A  	fcall	___flmul
  1461  1ED2  1283               	bcf	3,5	;RP0=0, select bank0
  1462  1ED3  1303               	bcf	3,6	;RP1=0, select bank0
  1463  1ED4  0827               	movf	?___flmul+3,w
  1464  1ED5  1683               	bsf	3,5	;RP0=1, select bank1
  1465  1ED6  1303               	bcf	3,6	;RP1=0, select bank1
  1466  1ED7  00D0               	movwf	(_POT1+3)^(0+128)
  1467  1ED8  1283               	bcf	3,5	;RP0=0, select bank0
  1468  1ED9  1303               	bcf	3,6	;RP1=0, select bank0
  1469  1EDA  0826               	movf	?___flmul+2,w
  1470  1EDB  1683               	bsf	3,5	;RP0=1, select bank1
  1471  1EDC  1303               	bcf	3,6	;RP1=0, select bank1
  1472  1EDD  00CF               	movwf	(_POT1+2)^(0+128)
  1473  1EDE  1283               	bcf	3,5	;RP0=0, select bank0
  1474  1EDF  1303               	bcf	3,6	;RP1=0, select bank0
  1475  1EE0  0825               	movf	?___flmul+1,w
  1476  1EE1  1683               	bsf	3,5	;RP0=1, select bank1
  1477  1EE2  1303               	bcf	3,6	;RP1=0, select bank1
  1478  1EE3  00CE               	movwf	(_POT1+1)^(0+128)
  1479  1EE4  1283               	bcf	3,5	;RP0=0, select bank0
  1480  1EE5  1303               	bcf	3,6	;RP1=0, select bank0
  1481  1EE6  0824               	movf	?___flmul,w
  1482  1EE7  1683               	bsf	3,5	;RP0=1, select bank1
  1483  1EE8  1303               	bcf	3,6	;RP1=0, select bank1
  1484  1EE9  00CD               	movwf	_POT1^(0+128)
  1485  1EEA                     l3775:	
  1486                           
  1487                           ;Lab3.c: 75:         POT1=POT1/1024.0;
  1488  1EEA  3044               	movlw	68
  1489  1EEB  00F3               	movwf	___fldiv@a+3
  1490  1EEC  3080               	movlw	128
  1491  1EED  00F2               	movwf	___fldiv@a+2
  1492  1EEE  3000               	movlw	0
  1493  1EEF  00F1               	movwf	___fldiv@a+1
  1494  1EF0  3000               	movlw	0
  1495  1EF1  00F0               	movwf	___fldiv@a
  1496  1EF2  0850               	movf	(_POT1+3)^(0+128),w
  1497  1EF3  00F7               	movwf	___fldiv@b+3
  1498  1EF4  084F               	movf	(_POT1+2)^(0+128),w
  1499  1EF5  00F6               	movwf	___fldiv@b+2
  1500  1EF6  084E               	movf	(_POT1+1)^(0+128),w
  1501  1EF7  00F5               	movwf	___fldiv@b+1
  1502  1EF8  084D               	movf	_POT1^(0+128),w
  1503  1EF9  00F4               	movwf	___fldiv@b
  1504  1EFA  160A  118A  213D  160A  158A  	fcall	___fldiv
  1505  1EFF  0873               	movf	?___fldiv+3,w
  1506  1F00  1683               	bsf	3,5	;RP0=1, select bank1
  1507  1F01  1303               	bcf	3,6	;RP1=0, select bank1
  1508  1F02  00D0               	movwf	(_POT1+3)^(0+128)
  1509  1F03  0872               	movf	?___fldiv+2,w
  1510  1F04  00CF               	movwf	(_POT1+2)^(0+128)
  1511  1F05  0871               	movf	?___fldiv+1,w
  1512  1F06  00CE               	movwf	(_POT1+1)^(0+128)
  1513  1F07  0870               	movf	?___fldiv,w
  1514  1F08  00CD               	movwf	_POT1^(0+128)
  1515  1F09                     l3777:	
  1516                           
  1517                           ;Lab3.c: 77:         ADC1();
  1518  1F09  160A  158A  20A0  160A  158A  	fcall	_ADC1
  1519  1F0E                     l3779:	
  1520                           
  1521                           ;Lab3.c: 78:         ADCON0bits.GO_DONE=1;
  1522  1F0E  1283               	bcf	3,5	;RP0=0, select bank0
  1523  1F0F  1303               	bcf	3,6	;RP1=0, select bank0
  1524  1F10  149F               	bsf	31,1	;volatile
  1525  1F11                     l3781:	
  1526                           
  1527                           ;Lab3.c: 79:         PIR1bits.ADIF=0;
  1528  1F11  130C               	bcf	12,6	;volatile
  1529  1F12                     l3783:	
  1530                           
  1531                           ;Lab3.c: 81:         VAL_ADC2=ADRESH;
  1532  1F12  081E               	movf	30,w	;volatile
  1533  1F13  00EE               	movwf	??_main
  1534  1F14  01EF               	clrf	??_main+1
  1535  1F15  086E               	movf	??_main,w
  1536  1F16  1683               	bsf	3,5	;RP0=1, select bank1
  1537  1F17  1303               	bcf	3,6	;RP1=0, select bank1
  1538  1F18  00D9               	movwf	_VAL_ADC2^(0+128)
  1539  1F19  1283               	bcf	3,5	;RP0=0, select bank0
  1540  1F1A  1303               	bcf	3,6	;RP1=0, select bank0
  1541  1F1B  086F               	movf	??_main+1,w
  1542  1F1C  1683               	bsf	3,5	;RP0=1, select bank1
  1543  1F1D  1303               	bcf	3,6	;RP1=0, select bank1
  1544  1F1E  00DA               	movwf	(_VAL_ADC2+1)^(0+128)
  1545  1F1F                     l3785:	
  1546                           
  1547                           ;Lab3.c: 82:         VAL_ADC2=VAL_ADC2<<8;
  1548  1F1F  0859               	movf	_VAL_ADC2^(0+128),w
  1549  1F20  1283               	bcf	3,5	;RP0=0, select bank0
  1550  1F21  1303               	bcf	3,6	;RP1=0, select bank0
  1551  1F22  00EF               	movwf	??_main+1
  1552  1F23  01EE               	clrf	??_main
  1553  1F24  086E               	movf	??_main,w
  1554  1F25  1683               	bsf	3,5	;RP0=1, select bank1
  1555  1F26  1303               	bcf	3,6	;RP1=0, select bank1
  1556  1F27  00D9               	movwf	_VAL_ADC2^(0+128)
  1557  1F28  1283               	bcf	3,5	;RP0=0, select bank0
  1558  1F29  1303               	bcf	3,6	;RP1=0, select bank0
  1559  1F2A  086F               	movf	??_main+1,w
  1560  1F2B  1683               	bsf	3,5	;RP0=1, select bank1
  1561  1F2C  1303               	bcf	3,6	;RP1=0, select bank1
  1562  1F2D  00DA               	movwf	(_VAL_ADC2+1)^(0+128)
  1563  1F2E                     l3787:	
  1564                           
  1565                           ;Lab3.c: 83:         VAL_ADC2=VAL_ADC2+ADRESL;
  1566  1F2E  081E               	movf	30,w	;volatile
  1567  1F2F  0759               	addwf	_VAL_ADC2^(0+128),w
  1568  1F30  1283               	bcf	3,5	;RP0=0, select bank0
  1569  1F31  1303               	bcf	3,6	;RP1=0, select bank0
  1570  1F32  00EE               	movwf	??_main
  1571  1F33  1683               	bsf	3,5	;RP0=1, select bank1
  1572  1F34  1303               	bcf	3,6	;RP1=0, select bank1
  1573  1F35  085A               	movf	(_VAL_ADC2+1)^(0+128),w
  1574  1F36  1803               	skipnc
  1575  1F37  0A5A               	incf	(_VAL_ADC2+1)^(0+128),w
  1576  1F38  1283               	bcf	3,5	;RP0=0, select bank0
  1577  1F39  1303               	bcf	3,6	;RP1=0, select bank0
  1578  1F3A  00EF               	movwf	??_main+1
  1579  1F3B  086E               	movf	??_main,w
  1580  1F3C  1683               	bsf	3,5	;RP0=1, select bank1
  1581  1F3D  1303               	bcf	3,6	;RP1=0, select bank1
  1582  1F3E  00D9               	movwf	_VAL_ADC2^(0+128)
  1583  1F3F  1283               	bcf	3,5	;RP0=0, select bank0
  1584  1F40  1303               	bcf	3,6	;RP1=0, select bank0
  1585  1F41  086F               	movf	??_main+1,w
  1586  1F42  1683               	bsf	3,5	;RP0=1, select bank1
  1587  1F43  1303               	bcf	3,6	;RP1=0, select bank1
  1588  1F44  00DA               	movwf	(_VAL_ADC2+1)^(0+128)
  1589  1F45                     l3789:	
  1590                           
  1591                           ;Lab3.c: 84:         POT2=(VAL_ADC2*5.0);
  1592  1F45  3040               	movlw	64
  1593  1F46  1283               	bcf	3,5	;RP0=0, select bank0
  1594  1F47  1303               	bcf	3,6	;RP1=0, select bank0
  1595  1F48  00A7               	movwf	___flmul@b+3
  1596  1F49  30A0               	movlw	160
  1597  1F4A  00A6               	movwf	___flmul@b+2
  1598  1F4B  3000               	movlw	0
  1599  1F4C  00A5               	movwf	___flmul@b+1
  1600  1F4D  3000               	movlw	0
  1601  1F4E  00A4               	movwf	___flmul@b
  1602  1F4F  1683               	bsf	3,5	;RP0=1, select bank1
  1603  1F50  1303               	bcf	3,6	;RP1=0, select bank1
  1604  1F51  0859               	movf	_VAL_ADC2^(0+128),w
  1605  1F52  00F0               	movwf	___xxtofl@val
  1606  1F53  085A               	movf	(_VAL_ADC2+1)^(0+128),w
  1607  1F54  00F1               	movwf	___xxtofl@val+1
  1608  1F55  01F2               	clrf	___xxtofl@val+2
  1609  1F56  01F3               	clrf	___xxtofl@val+3
  1610  1F57  3000               	movlw	0
  1611  1F58  160A  158A  24D3  160A  158A  	fcall	___xxtofl
  1612  1F5D  0873               	movf	?___xxtofl+3,w
  1613  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  1614  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  1615  1F60  00AB               	movwf	___flmul@a+3
  1616  1F61  0872               	movf	?___xxtofl+2,w
  1617  1F62  00AA               	movwf	___flmul@a+2
  1618  1F63  0871               	movf	?___xxtofl+1,w
  1619  1F64  00A9               	movwf	___flmul@a+1
  1620  1F65  0870               	movf	?___xxtofl,w
  1621  1F66  00A8               	movwf	___flmul@a
  1622  1F67  120A  158A  249F  160A  158A  	fcall	___flmul
  1623  1F6C  1283               	bcf	3,5	;RP0=0, select bank0
  1624  1F6D  1303               	bcf	3,6	;RP1=0, select bank0
  1625  1F6E  0827               	movf	?___flmul+3,w
  1626  1F6F  1683               	bsf	3,5	;RP0=1, select bank1
  1627  1F70  1303               	bcf	3,6	;RP1=0, select bank1
  1628  1F71  00CC               	movwf	(_POT2+3)^(0+128)
  1629  1F72  1283               	bcf	3,5	;RP0=0, select bank0
  1630  1F73  1303               	bcf	3,6	;RP1=0, select bank0
  1631  1F74  0826               	movf	?___flmul+2,w
  1632  1F75  1683               	bsf	3,5	;RP0=1, select bank1
  1633  1F76  1303               	bcf	3,6	;RP1=0, select bank1
  1634  1F77  00CB               	movwf	(_POT2+2)^(0+128)
  1635  1F78  1283               	bcf	3,5	;RP0=0, select bank0
  1636  1F79  1303               	bcf	3,6	;RP1=0, select bank0
  1637  1F7A  0825               	movf	?___flmul+1,w
  1638  1F7B  1683               	bsf	3,5	;RP0=1, select bank1
  1639  1F7C  1303               	bcf	3,6	;RP1=0, select bank1
  1640  1F7D  00CA               	movwf	(_POT2+1)^(0+128)
  1641  1F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1642  1F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1643  1F80  0824               	movf	?___flmul,w
  1644  1F81  1683               	bsf	3,5	;RP0=1, select bank1
  1645  1F82  1303               	bcf	3,6	;RP1=0, select bank1
  1646  1F83  00C9               	movwf	_POT2^(0+128)
  1647  1F84                     l3791:	
  1648                           
  1649                           ;Lab3.c: 85:         POT2=POT2/1024.0;
  1650  1F84  3044               	movlw	68
  1651  1F85  00F3               	movwf	___fldiv@a+3
  1652  1F86  3080               	movlw	128
  1653  1F87  00F2               	movwf	___fldiv@a+2
  1654  1F88  3000               	movlw	0
  1655  1F89  00F1               	movwf	___fldiv@a+1
  1656  1F8A  3000               	movlw	0
  1657  1F8B  00F0               	movwf	___fldiv@a
  1658  1F8C  084C               	movf	(_POT2+3)^(0+128),w
  1659  1F8D  00F7               	movwf	___fldiv@b+3
  1660  1F8E  084B               	movf	(_POT2+2)^(0+128),w
  1661  1F8F  00F6               	movwf	___fldiv@b+2
  1662  1F90  084A               	movf	(_POT2+1)^(0+128),w
  1663  1F91  00F5               	movwf	___fldiv@b+1
  1664  1F92  0849               	movf	_POT2^(0+128),w
  1665  1F93  00F4               	movwf	___fldiv@b
  1666  1F94  160A  118A  213D  160A  158A  	fcall	___fldiv
  1667  1F99  0873               	movf	?___fldiv+3,w
  1668  1F9A  1683               	bsf	3,5	;RP0=1, select bank1
  1669  1F9B  1303               	bcf	3,6	;RP1=0, select bank1
  1670  1F9C  00CC               	movwf	(_POT2+3)^(0+128)
  1671  1F9D  0872               	movf	?___fldiv+2,w
  1672  1F9E  00CB               	movwf	(_POT2+2)^(0+128)
  1673  1F9F  0871               	movf	?___fldiv+1,w
  1674  1FA0  00CA               	movwf	(_POT2+1)^(0+128)
  1675  1FA1  0870               	movf	?___fldiv,w
  1676  1FA2  00C9               	movwf	_POT2^(0+128)
  1677  1FA3                     l3793:	
  1678                           
  1679                           ;Lab3.c: 87:         sprintf(BUFFER,"%04.2f %04.2f",POT1,POT2);
  1680  1FA3  30A7               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1681  1FA4  1283               	bcf	3,5	;RP0=0, select bank0
  1682  1FA5  1303               	bcf	3,6	;RP1=0, select bank0
  1683  1FA6  00EE               	movwf	??_main
  1684  1FA7  086E               	movf	??_main,w
  1685  1FA8  1683               	bsf	3,5	;RP0=1, select bank1
  1686  1FA9  1303               	bcf	3,6	;RP1=0, select bank1
  1687  1FAA  00A0               	movwf	sprintf@f^(0+128)
  1688  1FAB  0850               	movf	(_POT1+3)^(0+128),w
  1689  1FAC  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1690  1FAD  084F               	movf	(_POT1+2)^(0+128),w
  1691  1FAE  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1692  1FAF  084E               	movf	(_POT1+1)^(0+128),w
  1693  1FB0  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1694  1FB1  084D               	movf	_POT1^(0+128),w
  1695  1FB2  00A1               	movwf	(?_sprintf^(0+128)+1)
  1696  1FB3  084C               	movf	(_POT2+3)^(0+128),w
  1697  1FB4  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1698  1FB5  084B               	movf	(_POT2+2)^(0+128),w
  1699  1FB6  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1700  1FB7  084A               	movf	(_POT2+1)^(0+128),w
  1701  1FB8  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1702  1FB9  0849               	movf	_POT2^(0+128),w
  1703  1FBA  00A5               	movwf	(?_sprintf^(0+128)+5)
  1704  1FBB  30DE               	movlw	(low (_BUFFER| 0))& (0+255)
  1705  1FBC  160A  118A  252B  160A  158A  	fcall	_sprintf
  1706  1FC1                     l3795:	
  1707                           
  1708                           ;Lab3.c: 88:         LCD_CURSOR(2,1);
  1709  1FC1  01F9               	clrf	LCD_CURSOR@b
  1710  1FC2  0AF9               	incf	LCD_CURSOR@b,f
  1711  1FC3  3002               	movlw	2
  1712  1FC4  160A  158A  2172  160A  158A  	fcall	_LCD_CURSOR
  1713  1FC9                     l3797:	
  1714                           
  1715                           ;Lab3.c: 89:         WRITE(BUFFER);
  1716  1FC9  30DE               	movlw	(low (_BUFFER| 0))& (0+255)
  1717  1FCA  00F9               	movwf	WRITE@a
  1718  1FCB  3000               	movlw	0
  1719  1FCC  00FA               	movwf	WRITE@a+1
  1720  1FCD  160A  158A  223E  160A  158A  	fcall	_WRITE
  1721  1FD2                     l3799:	
  1722                           
  1723                           ;Lab3.c: 90:         LCD_CURSOR(2,5);
  1724  1FD2  3005               	movlw	5
  1725  1FD3  1283               	bcf	3,5	;RP0=0, select bank0
  1726  1FD4  1303               	bcf	3,6	;RP1=0, select bank0
  1727  1FD5  00EE               	movwf	??_main
  1728  1FD6  086E               	movf	??_main,w
  1729  1FD7  00F9               	movwf	LCD_CURSOR@b
  1730  1FD8  3002               	movlw	2
  1731  1FD9  160A  158A  2172  160A  158A  	fcall	_LCD_CURSOR
  1732  1FDE                     l3801:	
  1733                           
  1734                           ;Lab3.c: 91:         WRITE("V");
  1735  1FDE  30B5               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1736  1FDF  00F9               	movwf	WRITE@a
  1737  1FE0  3080               	movlw	128
  1738  1FE1  00FA               	movwf	WRITE@a+1
  1739  1FE2  160A  158A  223E  160A  158A  	fcall	_WRITE
  1740  1FE7                     l3803:	
  1741                           
  1742                           ;Lab3.c: 92:         LCD_CURSOR(2,11);
  1743  1FE7  300B               	movlw	11
  1744  1FE8  1283               	bcf	3,5	;RP0=0, select bank0
  1745  1FE9  1303               	bcf	3,6	;RP1=0, select bank0
  1746  1FEA  00EE               	movwf	??_main
  1747  1FEB  086E               	movf	??_main,w
  1748  1FEC  00F9               	movwf	LCD_CURSOR@b
  1749  1FED  3002               	movlw	2
  1750  1FEE  160A  158A  2172  160A  158A  	fcall	_LCD_CURSOR
  1751  1FF3                     l3805:	
  1752                           
  1753                           ;Lab3.c: 93:         WRITE("V");
  1754  1FF3  30B5               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1755  1FF4  00F9               	movwf	WRITE@a
  1756  1FF5  3080               	movlw	128
  1757  1FF6  00FA               	movwf	WRITE@a+1
  1758  1FF7  160A  158A  223E  160A  158A  	fcall	_WRITE
  1759  1FFC  2E6F               	goto	l3761
  1760  1FFD  120A  118A  2800   	ljmp	start
  1761  2000                     __end_of_main:	
  1762                           
  1763                           	psect	text1
  1764  152B                     __ptext1:	
  1765 ;; *************** function _sprintf *****************
  1766 ;; Defined at:
  1767 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  sp              1    wreg     PTR unsigned char 
  1770 ;;		 -> BUFFER(16), 
  1771 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1772 ;;		 -> STR_2(14), 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  sp              1   39[BANK1 ] PTR unsigned char 
  1775 ;;		 -> BUFFER(16), 
  1776 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1777 ;;  tmpval          4   23[BANK1 ] struct .
  1778 ;;  val             4   19[BANK1 ] unsigned long 
  1779 ;;  prec            2   37[BANK1 ] int 
  1780 ;;  width           2   31[BANK1 ] int 
  1781 ;;  flag            2   29[BANK1 ] unsigned short 
  1782 ;;  eexp            2   27[BANK1 ] int 
  1783 ;;  cp              2    0        PTR const unsigned char 
  1784 ;;  len             2    0        unsigned int 
  1785 ;;  c               1   40[BANK1 ] unsigned char 
  1786 ;;  ap              1   18[BANK1 ] PTR void [1]
  1787 ;;		 -> ?_sprintf(2), 
  1788 ;;  d               1    0        unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  2    0[BANK1 ] int 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       9       0       0
  1799 ;;      Locals:         0       0      27       0       0
  1800 ;;      Temps:          0       0       5       0       0
  1801 ;;      Totals:         0       0      41       0       0
  1802 ;;Total ram usage:       41 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    3
  1805 ;; This function calls:
  1806 ;;		___awdiv
  1807 ;;		___fladd
  1808 ;;		___fleq
  1809 ;;		___flge
  1810 ;;		___flmul
  1811 ;;		___flneg
  1812 ;;		___flsub
  1813 ;;		___fltol
  1814 ;;		___lldiv
  1815 ;;		___llmod
  1816 ;;		___wmul
  1817 ;;		___xxtofl
  1818 ;;		__div_to_l_
  1819 ;;		__tdiv_to_l_
  1820 ;;		_fround
  1821 ;;		_isdigit
  1822 ;;		_scale
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _sprintf
  1830  152B                     _sprintf:	
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1834                           ;sprintf@sp stored from wreg
  1835  152B  1683               	bsf	3,5	;RP0=1, select bank1
  1836  152C  1303               	bcf	3,6	;RP1=0, select bank1
  1837  152D  00C7               	movwf	sprintf@sp^(0+128)
  1838  152E                     l3303:	
  1839                           
  1840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1841  152E  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1842  152F  00A9               	movwf	??_sprintf^(0+128)
  1843  1530  0829               	movf	??_sprintf^(0+128),w
  1844  1531  00B2               	movwf	sprintf@ap^(0+128)
  1845  1532                     L1:	
  1846                           
  1847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1848  1532  120A  118A  2FDA   	goto	l3591
  1849  1535                     l3305:	
  1850                           
  1851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1852  1535  3025               	movlw	37
  1853  1536  0648               	xorwf	sprintf@c^(0+128),w
  1854  1537  1903               	btfsc	3,2
  1855  1538  2D3A               	goto	u5411
  1856  1539  2D3B               	goto	u5410
  1857  153A                     u5411:	
  1858  153A  2D47               	goto	l3311
  1859  153B                     u5410:	
  1860  153B                     l3307:	
  1861                           
  1862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1863  153B  0848               	movf	sprintf@c^(0+128),w
  1864  153C  00A9               	movwf	??_sprintf^(0+128)
  1865  153D  0847               	movf	sprintf@sp^(0+128),w
  1866  153E  0084               	movwf	4
  1867  153F  0829               	movf	??_sprintf^(0+128),w
  1868  1540  1383               	bcf	3,7	;select IRP bank0
  1869  1541  0080               	movwf	0
  1870  1542                     l3309:	
  1871  1542  3001               	movlw	1
  1872  1543  00A9               	movwf	??_sprintf^(0+128)
  1873  1544  0829               	movf	??_sprintf^(0+128),w
  1874  1545  07C7               	addwf	sprintf@sp^(0+128),f
  1875                           
  1876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1877  1546  2D32               	goto	L1
  1878  1547                     l3311:	
  1879                           
  1880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  1881  1547  01BF               	clrf	sprintf@width^(0+128)
  1882  1548  01C0               	clrf	(sprintf@width+1)^(0+128)
  1883                           
  1884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1885  1549  01BD               	clrf	sprintf@flag^(0+128)
  1886  154A  01BE               	clrf	(sprintf@flag+1)^(0+128)
  1887  154B  2D51               	goto	l3317
  1888  154C                     l246:	
  1889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 596:    cas
      +                          e '0':
  1890                           
  1891                           
  1892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 597:     fl
      +                          ag |= 0x04;
  1893  154C  153D               	bsf	sprintf@flag^(0+128),2
  1894  154D                     l3313:	
  1895                           
  1896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 598:     f+
      +                          +;
  1897  154D  3001               	movlw	1
  1898  154E  00A9               	movwf	??_sprintf^(0+128)
  1899  154F  0829               	movf	??_sprintf^(0+128),w
  1900  1550  07A0               	addwf	sprintf@f^(0+128),f
  1901  1551                     l3317:	
  1902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 599:     co
      +                          ntinue;
  1903                           
  1904  1551  0820               	movf	sprintf@f^(0+128),w
  1905  1552  0084               	movwf	4
  1906  1553  120A  158A  200A  160A  118A  	fcall	stringdir
  1907  1558  00A9               	movwf	??_sprintf^(0+128)
  1908  1559  01AA               	clrf	(??_sprintf^(0+128)+1)
  1909                           
  1910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1911                           ; Switch size 1, requested type "simple"
  1912                           ; Number of cases is 1, Range of values is 0 to 0
  1913                           ; switch strategies available:
  1914                           ; Name         Instructions Cycles
  1915                           ; simple_byte            4     3 (average)
  1916                           ; direct_byte           11     8 (fixed)
  1917                           ; jumptable            260     6 (fixed)
  1918                           ;	Chosen strategy is simple_byte
  1919  155A  082A               	movf	(??_sprintf+1)^(0+128),w
  1920  155B  3A00               	xorlw	0	; case 0
  1921  155C  1903               	skipnz
  1922  155D  2D5F               	goto	l3867
  1923  155E  2D64               	goto	l3319
  1924  155F                     l3867:	
  1925                           
  1926                           ; Switch size 1, requested type "simple"
  1927                           ; Number of cases is 1, Range of values is 48 to 48
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte            4     3 (average)
  1931                           ; direct_byte           14    11 (fixed)
  1932                           ; jumptable            263     9 (fixed)
  1933                           ;	Chosen strategy is simple_byte
  1934  155F  0829               	movf	??_sprintf^(0+128),w
  1935  1560  3A30               	xorlw	48	; case 48
  1936  1561  1903               	skipnz
  1937  1562  2D4C               	goto	l246
  1938  1563  2D64               	goto	l3319
  1939  1564                     l3319:	
  1940                           
  1941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  1942  1564  0820               	movf	sprintf@f^(0+128),w
  1943  1565  0084               	movwf	4
  1944  1566  120A  158A  200A  160A  118A  	fcall	stringdir
  1945  156B  160A  158A  20D5  160A  118A  	fcall	_isdigit
  1946  1570  1C03               	btfss	3,0
  1947  1571  2D73               	goto	u5421
  1948  1572  2D74               	goto	u5420
  1949  1573                     u5421:	
  1950  1573  2DB4               	goto	l3331
  1951  1574                     u5420:	
  1952  1574                     l3321:	
  1953                           
  1954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  1955  1574  1683               	bsf	3,5	;RP0=1, select bank1
  1956  1575  1303               	bcf	3,6	;RP1=0, select bank1
  1957  1576  01BF               	clrf	sprintf@width^(0+128)
  1958  1577  01C0               	clrf	(sprintf@width+1)^(0+128)
  1959  1578                     l3323:	
  1960                           
  1961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  1962  1578  300A               	movlw	10
  1963  1579  00F0               	movwf	___wmul@multiplier
  1964  157A  3000               	movlw	0
  1965  157B  00F1               	movwf	___wmul@multiplier+1
  1966  157C  1683               	bsf	3,5	;RP0=1, select bank1
  1967  157D  1303               	bcf	3,6	;RP1=0, select bank1
  1968  157E  0840               	movf	(sprintf@width+1)^(0+128),w
  1969  157F  00F3               	movwf	___wmul@multiplicand+1
  1970  1580  083F               	movf	sprintf@width^(0+128),w
  1971  1581  00F2               	movwf	___wmul@multiplicand
  1972  1582  160A  158A  214D  160A  118A  	fcall	___wmul
  1973  1587  0871               	movf	?___wmul+1,w
  1974  1588  1683               	bsf	3,5	;RP0=1, select bank1
  1975  1589  1303               	bcf	3,6	;RP1=0, select bank1
  1976  158A  00C0               	movwf	(sprintf@width+1)^(0+128)
  1977  158B  0870               	movf	?___wmul,w
  1978  158C  00BF               	movwf	sprintf@width^(0+128)
  1979  158D                     l3325:	
  1980                           
  1981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  1982  158D  0820               	movf	sprintf@f^(0+128),w
  1983  158E  0084               	movwf	4
  1984  158F  120A  158A  200A  160A  118A  	fcall	stringdir
  1985  1594  3ED0               	addlw	208
  1986  1595  00A9               	movwf	??_sprintf^(0+128)
  1987  1596  30FF               	movlw	255
  1988  1597  1803               	skipnc
  1989  1598  3000               	movlw	0
  1990  1599  00AA               	movwf	(??_sprintf^(0+128)+1)
  1991  159A  0829               	movf	??_sprintf^(0+128),w
  1992  159B  07BF               	addwf	sprintf@width^(0+128),f
  1993  159C  1803               	skipnc
  1994  159D  0AC0               	incf	(sprintf@width+1)^(0+128),f
  1995  159E  082A               	movf	(??_sprintf+1)^(0+128),w
  1996  159F  07C0               	addwf	(sprintf@width+1)^(0+128),f
  1997  15A0                     l3327:	
  1998  15A0  3001               	movlw	1
  1999  15A1  00A9               	movwf	??_sprintf^(0+128)
  2000  15A2  0829               	movf	??_sprintf^(0+128),w
  2001  15A3  07A0               	addwf	sprintf@f^(0+128),f
  2002  15A4                     l3329:	
  2003                           
  2004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  2005  15A4  0820               	movf	sprintf@f^(0+128),w
  2006  15A5  0084               	movwf	4
  2007  15A6  120A  158A  200A  160A  118A  	fcall	stringdir
  2008  15AB  160A  158A  20D5  160A  118A  	fcall	_isdigit
  2009  15B0  1803               	btfsc	3,0
  2010  15B1  2DB3               	goto	u5431
  2011  15B2  2DB4               	goto	u5430
  2012  15B3                     u5431:	
  2013  15B3  2D78               	goto	l3323
  2014  15B4                     u5430:	
  2015  15B4                     l3331:	
  2016                           
  2017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  2018  15B4  1683               	bsf	3,5	;RP0=1, select bank1
  2019  15B5  1303               	bcf	3,6	;RP1=0, select bank1
  2020  15B6  0820               	movf	sprintf@f^(0+128),w
  2021  15B7  0084               	movwf	4
  2022  15B8  120A  158A  200A  160A  118A  	fcall	stringdir
  2023  15BD  3A2E               	xorlw	46
  2024  15BE  1D03               	skipz
  2025  15BF  2DC1               	goto	u5441
  2026  15C0  2DC2               	goto	u5440
  2027  15C1                     u5441:	
  2028  15C1  2E07               	goto	l3347
  2029  15C2                     u5440:	
  2030  15C2                     l3333:	
  2031                           
  2032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  2033  15C2  173E               	bsf	(sprintf@flag^(0+128)+1),6
  2034  15C3                     l3335:	
  2035                           
  2036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  2037  15C3  3001               	movlw	1
  2038  15C4  00A9               	movwf	??_sprintf^(0+128)
  2039  15C5  0829               	movf	??_sprintf^(0+128),w
  2040  15C6  07A0               	addwf	sprintf@f^(0+128),f
  2041  15C7                     l3337:	
  2042                           
  2043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  2044  15C7  01C5               	clrf	sprintf@prec^(0+128)
  2045  15C8  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2046                           
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2048  15C9  2DF6               	goto	l3345
  2049  15CA                     l3339:	
  2050                           
  2051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  2052  15CA  300A               	movlw	10
  2053  15CB  00F0               	movwf	___wmul@multiplier
  2054  15CC  3000               	movlw	0
  2055  15CD  00F1               	movwf	___wmul@multiplier+1
  2056  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  2057  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  2058  15D0  0846               	movf	(sprintf@prec+1)^(0+128),w
  2059  15D1  00F3               	movwf	___wmul@multiplicand+1
  2060  15D2  0845               	movf	sprintf@prec^(0+128),w
  2061  15D3  00F2               	movwf	___wmul@multiplicand
  2062  15D4  160A  158A  214D  160A  118A  	fcall	___wmul
  2063  15D9  0871               	movf	?___wmul+1,w
  2064  15DA  1683               	bsf	3,5	;RP0=1, select bank1
  2065  15DB  1303               	bcf	3,6	;RP1=0, select bank1
  2066  15DC  00C6               	movwf	(sprintf@prec+1)^(0+128)
  2067  15DD  0870               	movf	?___wmul,w
  2068  15DE  00C5               	movwf	sprintf@prec^(0+128)
  2069  15DF                     l3341:	
  2070                           
  2071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  2072  15DF  0820               	movf	sprintf@f^(0+128),w
  2073  15E0  0084               	movwf	4
  2074  15E1  120A  158A  200A  160A  118A  	fcall	stringdir
  2075  15E6  3ED0               	addlw	208
  2076  15E7  00A9               	movwf	??_sprintf^(0+128)
  2077  15E8  30FF               	movlw	255
  2078  15E9  1803               	skipnc
  2079  15EA  3000               	movlw	0
  2080  15EB  00AA               	movwf	(??_sprintf^(0+128)+1)
  2081  15EC  0829               	movf	??_sprintf^(0+128),w
  2082  15ED  07C5               	addwf	sprintf@prec^(0+128),f
  2083  15EE  1803               	skipnc
  2084  15EF  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  2085  15F0  082A               	movf	(??_sprintf+1)^(0+128),w
  2086  15F1  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  2087  15F2                     l3343:	
  2088  15F2  3001               	movlw	1
  2089  15F3  00A9               	movwf	??_sprintf^(0+128)
  2090  15F4  0829               	movf	??_sprintf^(0+128),w
  2091  15F5  07A0               	addwf	sprintf@f^(0+128),f
  2092  15F6                     l3345:	
  2093                           
  2094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2095  15F6  0820               	movf	sprintf@f^(0+128),w
  2096  15F7  0084               	movwf	4
  2097  15F8  120A  158A  200A  160A  118A  	fcall	stringdir
  2098  15FD  160A  158A  20D5  160A  118A  	fcall	_isdigit
  2099  1602  1803               	btfsc	3,0
  2100  1603  2E05               	goto	u5451
  2101  1604  2E06               	goto	u5450
  2102  1605                     u5451:	
  2103  1605  2DCA               	goto	l3339
  2104  1606                     u5450:	
  2105  1606  2E0D               	goto	l3353
  2106  1607                     l3347:	
  2107                           
  2108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  2109  1607  01C5               	clrf	sprintf@prec^(0+128)
  2110  1608  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2111  1609                     l3349:	
  2112                           
  2113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  2114  1609  163E               	bsf	(sprintf@flag^(0+128)+1),4
  2115  160A  2E0D               	goto	l3353
  2116  160B                     l261:	
  2117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  2118                           
  2119                           
  2120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  2121  160B  153E               	bsf	(sprintf@flag^(0+128)+1),2
  2122                           
  2123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  2124  160C  2E29               	goto	l3355
  2125  160D                     l3353:	
  2126  160D  3001               	movlw	1
  2127  160E  1683               	bsf	3,5	;RP0=1, select bank1
  2128  160F  1303               	bcf	3,6	;RP1=0, select bank1
  2129  1610  07A0               	addwf	sprintf@f^(0+128),f
  2130  1611  30FF               	movlw	-1
  2131  1612  0720               	addwf	sprintf@f^(0+128),w
  2132  1613  0084               	movwf	4
  2133  1614  120A  158A  200A  160A  118A  	fcall	stringdir
  2134  1619  00C8               	movwf	sprintf@c^(0+128)
  2135  161A  00A9               	movwf	??_sprintf^(0+128)
  2136  161B  01AA               	clrf	(??_sprintf^(0+128)+1)
  2137                           
  2138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2139                           ; Switch size 1, requested type "simple"
  2140                           ; Number of cases is 1, Range of values is 0 to 0
  2141                           ; switch strategies available:
  2142                           ; Name         Instructions Cycles
  2143                           ; simple_byte            4     3 (average)
  2144                           ; direct_byte           11     8 (fixed)
  2145                           ; jumptable            260     6 (fixed)
  2146                           ;	Chosen strategy is simple_byte
  2147  161C  082A               	movf	(??_sprintf+1)^(0+128),w
  2148  161D  3A00               	xorlw	0	; case 0
  2149  161E  1903               	skipnz
  2150  161F  2E21               	goto	l3869
  2151  1620  2D32               	goto	L1
  2152  1621                     l3869:	
  2153                           
  2154                           ; Switch size 1, requested type "simple"
  2155                           ; Number of cases is 2, Range of values is 0 to 102
  2156                           ; switch strategies available:
  2157                           ; Name         Instructions Cycles
  2158                           ; simple_byte            7     4 (average)
  2159                           ; jumptable            260     6 (fixed)
  2160                           ;	Chosen strategy is simple_byte
  2161  1621  0829               	movf	??_sprintf^(0+128),w
  2162  1622  3A00               	xorlw	0	; case 0
  2163  1623  1903               	skipnz
  2164  1624  2FFD               	goto	L3
  2165  1625  3A66               	xorlw	102	; case 102
  2166  1626  1903               	skipnz
  2167  1627  2E0B               	goto	l261
  2168  1628  2D32               	goto	L1
  2169  1629                     l3355:	
  2170                           
  2171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  2172  1629  3000               	movlw	0
  2173  162A  053D               	andwf	sprintf@flag^(0+128),w
  2174  162B  00A9               	movwf	??_sprintf^(0+128)
  2175  162C  3007               	movlw	7
  2176  162D  053E               	andwf	(sprintf@flag+1)^(0+128),w
  2177  162E  00AA               	movwf	(??_sprintf+1)^(0+128)
  2178  162F  0829               	movf	??_sprintf^(0+128),w
  2179  1630  042A               	iorwf	(??_sprintf^(0+128)+1),w
  2180  1631  1903               	btfsc	3,2
  2181  1632  2E34               	goto	u5461
  2182  1633  2E37               	goto	u5460
  2183  1634                     u5461:	
  2184  1634  120A  118A  2EDC   	goto	l3529
  2185  1637                     u5460:	
  2186  1637                     l3357:	
  2187                           
  2188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  2189  1637  1E3E               	btfss	(sprintf@flag+1)^(0+128),4
  2190  1638  2E3A               	goto	u5471
  2191  1639  2E3B               	goto	u5470
  2192  163A                     u5471:	
  2193  163A  2E3F               	goto	l3361
  2194  163B                     u5470:	
  2195  163B                     l3359:	
  2196                           
  2197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2198  163B  3006               	movlw	6
  2199  163C  00C5               	movwf	sprintf@prec^(0+128)
  2200  163D  3000               	movlw	0
  2201  163E  00C6               	movwf	(sprintf@prec^(0+128)+1)
  2202  163F                     l3361:	
  2203                           
  2204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2205  163F  0832               	movf	sprintf@ap^(0+128),w
  2206  1640  0084               	movwf	4
  2207  1641  1383               	bcf	3,7	;select IRP bank0
  2208  1642  0800               	movf	0,w
  2209  1643  00C1               	movwf	sprintf@fval^(0+128)
  2210  1644  0A84               	incf	4,f
  2211  1645  0800               	movf	0,w
  2212  1646  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2213  1647  0A84               	incf	4,f
  2214  1648  0800               	movf	0,w
  2215  1649  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2216  164A  0A84               	incf	4,f
  2217  164B  0800               	movf	0,w
  2218  164C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2219  164D                     l3363:	
  2220  164D  3004               	movlw	4
  2221  164E  00A9               	movwf	??_sprintf^(0+128)
  2222  164F  0829               	movf	??_sprintf^(0+128),w
  2223  1650  07B2               	addwf	sprintf@ap^(0+128),f
  2224  1651                     l3365:	
  2225                           
  2226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2227  1651  0844               	movf	(sprintf@fval+3)^(0+128),w
  2228  1652  00F3               	movwf	___flge@ff1+3
  2229  1653  0843               	movf	(sprintf@fval+2)^(0+128),w
  2230  1654  00F2               	movwf	___flge@ff1+2
  2231  1655  0842               	movf	(sprintf@fval+1)^(0+128),w
  2232  1656  00F1               	movwf	___flge@ff1+1
  2233  1657  0841               	movf	sprintf@fval^(0+128),w
  2234  1658  00F0               	movwf	___flge@ff1
  2235  1659  3000               	movlw	0
  2236  165A  00F7               	movwf	___flge@ff2+3
  2237  165B  3000               	movlw	0
  2238  165C  00F6               	movwf	___flge@ff2+2
  2239  165D  3000               	movlw	0
  2240  165E  00F5               	movwf	___flge@ff2+1
  2241  165F  3000               	movlw	0
  2242  1660  00F4               	movwf	___flge@ff2
  2243  1661  160A  158A  2431  160A  118A  	fcall	___flge
  2244  1666  1803               	btfsc	3,0
  2245  1667  2E69               	goto	u5481
  2246  1668  2E6A               	goto	u5480
  2247  1669                     u5481:	
  2248  1669  2E87               	goto	l3371
  2249  166A                     u5480:	
  2250  166A                     l3367:	
  2251                           
  2252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2253  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2254  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2255  166C  0844               	movf	(sprintf@fval+3)^(0+128),w
  2256  166D  00F3               	movwf	___flneg@f1+3
  2257  166E  0843               	movf	(sprintf@fval+2)^(0+128),w
  2258  166F  00F2               	movwf	___flneg@f1+2
  2259  1670  0842               	movf	(sprintf@fval+1)^(0+128),w
  2260  1671  00F1               	movwf	___flneg@f1+1
  2261  1672  0841               	movf	sprintf@fval^(0+128),w
  2262  1673  00F0               	movwf	___flneg@f1
  2263  1674  120A  118A  2003  160A  118A  	fcall	___flneg
  2264  1679  0873               	movf	?___flneg+3,w
  2265  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2266  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2267  167C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2268  167D  0872               	movf	?___flneg+2,w
  2269  167E  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2270  167F  0871               	movf	?___flneg+1,w
  2271  1680  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2272  1681  0870               	movf	?___flneg,w
  2273  1682  00C1               	movwf	sprintf@fval^(0+128)
  2274  1683                     l3369:	
  2275                           
  2276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2277  1683  3003               	movlw	3
  2278  1684  04BD               	iorwf	sprintf@flag^(0+128),f
  2279  1685  3000               	movlw	0
  2280  1686  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
  2281  1687                     l3371:	
  2282                           
  2283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2284  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2285  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2286  1689  01BB               	clrf	sprintf@eexp^(0+128)
  2287  168A  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2288  168B                     l3373:	
  2289                           
  2290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2291  168B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2292  168C  00F3               	movwf	___fleq@ff1+3
  2293  168D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2294  168E  00F2               	movwf	___fleq@ff1+2
  2295  168F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2296  1690  00F1               	movwf	___fleq@ff1+1
  2297  1691  0841               	movf	sprintf@fval^(0+128),w
  2298  1692  00F0               	movwf	___fleq@ff1
  2299  1693  3000               	movlw	0
  2300  1694  00F7               	movwf	___fleq@ff2+3
  2301  1695  3000               	movlw	0
  2302  1696  00F6               	movwf	___fleq@ff2+2
  2303  1697  3000               	movlw	0
  2304  1698  00F5               	movwf	___fleq@ff2+1
  2305  1699  3000               	movlw	0
  2306  169A  00F4               	movwf	___fleq@ff2
  2307  169B  160A  158A  22D0  160A  118A  	fcall	___fleq
  2308  16A0  1803               	btfsc	3,0
  2309  16A1  2EA3               	goto	u5491
  2310  16A2  2EA4               	goto	u5490
  2311  16A3                     u5491:	
  2312  16A3  2F94               	goto	l3399
  2313  16A4                     u5490:	
  2314  16A4                     l3375:	
  2315                           
  2316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2317  16A4  1003               	clrc
  2318  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2319  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2320  16A7  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2321  16A8  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2322  16A9  3E82               	addlw	130
  2323  16AA  00BB               	movwf	sprintf@eexp^(0+128)
  2324  16AB  30FF               	movlw	255
  2325  16AC  1803               	skipnc
  2326  16AD  3000               	movlw	0
  2327  16AE  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2328  16AF                     l3377:	
  2329                           
  2330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2331  16AF  30FF               	movlw	255
  2332  16B0  07BB               	addwf	sprintf@eexp^(0+128),f
  2333  16B1  1803               	skipnc
  2334  16B2  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2335  16B3  30FF               	movlw	255
  2336  16B4  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2337  16B5                     l3379:	
  2338                           
  2339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2340  16B5  3003               	movlw	3
  2341  16B6  00F0               	movwf	___wmul@multiplier
  2342  16B7  3000               	movlw	0
  2343  16B8  00F1               	movwf	___wmul@multiplier+1
  2344  16B9  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2345  16BA  00F3               	movwf	___wmul@multiplicand+1
  2346  16BB  083B               	movf	sprintf@eexp^(0+128),w
  2347  16BC  00F2               	movwf	___wmul@multiplicand
  2348  16BD  160A  158A  214D  160A  118A  	fcall	___wmul
  2349  16C2  0871               	movf	?___wmul+1,w
  2350  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2351  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2352  16C5  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2353  16C6  0870               	movf	?___wmul,w
  2354  16C7  00BB               	movwf	sprintf@eexp^(0+128)
  2355  16C8                     l3381:	
  2356                           
  2357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2358  16C8  300A               	movlw	10
  2359  16C9  00F7               	movwf	___awdiv@divisor
  2360  16CA  3000               	movlw	0
  2361  16CB  00F8               	movwf	___awdiv@divisor+1
  2362  16CC  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2363  16CD  00FA               	movwf	___awdiv@dividend+1
  2364  16CE  083B               	movf	sprintf@eexp^(0+128),w
  2365  16CF  00F9               	movwf	___awdiv@dividend
  2366  16D0  120A  158A  20D7  160A  118A  	fcall	___awdiv
  2367  16D5  0878               	movf	?___awdiv+1,w
  2368  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2369  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2370  16D8  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2371  16D9  0877               	movf	?___awdiv,w
  2372  16DA  00BB               	movwf	sprintf@eexp^(0+128)
  2373  16DB                     l3383:	
  2374                           
  2375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2376  16DB  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2377  16DC  2EDE               	goto	u5501
  2378  16DD  2EDF               	goto	u5500
  2379  16DE                     u5501:	
  2380  16DE  2EE5               	goto	l3387
  2381  16DF                     u5500:	
  2382  16DF                     l3385:	
  2383                           
  2384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2385  16DF  30FF               	movlw	255
  2386  16E0  07BB               	addwf	sprintf@eexp^(0+128),f
  2387  16E1  1803               	skipnc
  2388  16E2  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2389  16E3  30FF               	movlw	255
  2390  16E4  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2391  16E5                     l3387:	
  2392                           
  2393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2394  16E5  033B               	decf	sprintf@eexp^(0+128),w
  2395  16E6  3AFF               	xorlw	255
  2396  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2397  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2398  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2399  16EE  0841               	movf	?_scale+3,w
  2400  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2401  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2402  16F1  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2403  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2404  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2405  16F4  0840               	movf	?_scale+2,w
  2406  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2407  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2408  16F7  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2409  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2410  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2411  16FA  083F               	movf	?_scale+1,w
  2412  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2413  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2414  16FD  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2415  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2416  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2417  1700  083E               	movf	?_scale,w
  2418  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2419  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2420  1703  00B7               	movwf	sprintf@tmpval^(0+128)
  2421  1704                     l3389:	
  2422                           
  2423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2424  1704  0844               	movf	(sprintf@fval+3)^(0+128),w
  2425  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2426  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2427  1707  00A7               	movwf	___flmul@b+3
  2428  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2429  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2430  170A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2431  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2432  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2433  170D  00A6               	movwf	___flmul@b+2
  2434  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2435  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2436  1710  0842               	movf	(sprintf@fval+1)^(0+128),w
  2437  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2438  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2439  1713  00A5               	movwf	___flmul@b+1
  2440  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2441  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2442  1716  0841               	movf	sprintf@fval^(0+128),w
  2443  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2444  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2445  1719  00A4               	movwf	___flmul@b
  2446  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2447  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2448  171C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2449  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2450  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2451  171F  00AB               	movwf	___flmul@a+3
  2452  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2453  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2454  1722  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2455  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2456  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2457  1725  00AA               	movwf	___flmul@a+2
  2458  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2459  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2460  1728  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2461  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2462  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2463  172B  00A9               	movwf	___flmul@a+1
  2464  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2465  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2466  172E  0837               	movf	sprintf@tmpval^(0+128),w
  2467  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2468  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2469  1731  00A8               	movwf	___flmul@a
  2470  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2471  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2472  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2473  1739  0827               	movf	?___flmul+3,w
  2474  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2475  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2476  173C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2477  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2478  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2479  173F  0826               	movf	?___flmul+2,w
  2480  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2481  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2482  1742  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2483  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2484  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2485  1745  0825               	movf	?___flmul+1,w
  2486  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2487  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2488  1748  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2489  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2490  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2491  174B  0824               	movf	?___flmul,w
  2492  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2493  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2494  174E  00B7               	movwf	sprintf@tmpval^(0+128)
  2495  174F                     l3391:	
  2496                           
  2497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2498  174F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2499  1750  00F3               	movwf	___flge@ff1+3
  2500  1751  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2501  1752  00F2               	movwf	___flge@ff1+2
  2502  1753  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2503  1754  00F1               	movwf	___flge@ff1+1
  2504  1755  0837               	movf	sprintf@tmpval^(0+128),w
  2505  1756  00F0               	movwf	___flge@ff1
  2506  1757  303F               	movlw	63
  2507  1758  00F7               	movwf	___flge@ff2+3
  2508  1759  3080               	movlw	128
  2509  175A  00F6               	movwf	___flge@ff2+2
  2510  175B  3000               	movlw	0
  2511  175C  00F5               	movwf	___flge@ff2+1
  2512  175D  3000               	movlw	0
  2513  175E  00F4               	movwf	___flge@ff2
  2514  175F  160A  158A  2431  160A  118A  	fcall	___flge
  2515  1764  1803               	btfsc	3,0
  2516  1765  2F67               	goto	u5511
  2517  1766  2F68               	goto	u5510
  2518  1767                     u5511:	
  2519  1767  2F71               	goto	l3395
  2520  1768                     u5510:	
  2521  1768                     l3393:	
  2522                           
  2523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2524  1768  30FF               	movlw	255
  2525  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2526  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2527  176B  07BB               	addwf	sprintf@eexp^(0+128),f
  2528  176C  1803               	skipnc
  2529  176D  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2530  176E  30FF               	movlw	255
  2531  176F  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2532  1770  2F94               	goto	l3399
  2533  1771                     l3395:	
  2534  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2535  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2536  1773  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2537  1774  00F3               	movwf	___flge@ff1+3
  2538  1775  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2539  1776  00F2               	movwf	___flge@ff1+2
  2540  1777  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2541  1778  00F1               	movwf	___flge@ff1+1
  2542  1779  0837               	movf	sprintf@tmpval^(0+128),w
  2543  177A  00F0               	movwf	___flge@ff1
  2544  177B  3041               	movlw	65
  2545  177C  00F7               	movwf	___flge@ff2+3
  2546  177D  3020               	movlw	32
  2547  177E  00F6               	movwf	___flge@ff2+2
  2548  177F  3000               	movlw	0
  2549  1780  00F5               	movwf	___flge@ff2+1
  2550  1781  3000               	movlw	0
  2551  1782  00F4               	movwf	___flge@ff2
  2552  1783  160A  158A  2431  160A  118A  	fcall	___flge
  2553  1788  1C03               	btfss	3,0
  2554  1789  2F8B               	goto	u5521
  2555  178A  2F8C               	goto	u5520
  2556  178B                     u5521:	
  2557  178B  2F94               	goto	l3399
  2558  178C                     u5520:	
  2559  178C                     l3397:	
  2560                           
  2561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2562  178C  3001               	movlw	1
  2563  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2564  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2565  178F  07BB               	addwf	sprintf@eexp^(0+128),f
  2566  1790  1803               	skipnc
  2567  1791  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2568  1792  3000               	movlw	0
  2569  1793  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2570  1794                     l3399:	
  2571                           
  2572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2573  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2574  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2575  1796  0846               	movf	(sprintf@prec+1)^(0+128),w
  2576  1797  3A80               	xorlw	128
  2577  1798  00FF               	movwf	btemp+1
  2578  1799  3080               	movlw	128
  2579  179A  027F               	subwf	btemp+1,w
  2580  179B  1D03               	skipz
  2581  179C  2F9F               	goto	u5535
  2582  179D  300D               	movlw	13
  2583  179E  0245               	subwf	sprintf@prec^(0+128),w
  2584  179F                     u5535:	
  2585  179F  1803               	skipnc
  2586  17A0  2FA2               	goto	u5531
  2587  17A1  2FA3               	goto	u5530
  2588  17A2                     u5531:	
  2589  17A2  2FEA               	goto	l3403
  2590  17A3                     u5530:	
  2591  17A3                     l3401:	
  2592                           
  2593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2594  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2595  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2596  17A5  0845               	movf	sprintf@prec^(0+128),w
  2597  17A6  160A  118A  2320  160A  118A  	fcall	_fround
  2598  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2599  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2600  17AD  0841               	movf	?_fround+3,w
  2601  17AE  00D5               	movwf	___fladd@b+3
  2602  17AF  0840               	movf	?_fround+2,w
  2603  17B0  00D4               	movwf	___fladd@b+2
  2604  17B1  083F               	movf	?_fround+1,w
  2605  17B2  00D3               	movwf	___fladd@b+1
  2606  17B3  083E               	movf	?_fround,w
  2607  17B4  00D2               	movwf	___fladd@b
  2608  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2609  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2610  17B7  0844               	movf	(sprintf@fval+3)^(0+128),w
  2611  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2612  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2613  17BA  00D9               	movwf	___fladd@a+3
  2614  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2615  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2616  17BD  0843               	movf	(sprintf@fval+2)^(0+128),w
  2617  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2618  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2619  17C0  00D8               	movwf	___fladd@a+2
  2620  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2621  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2622  17C3  0842               	movf	(sprintf@fval+1)^(0+128),w
  2623  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2624  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2625  17C6  00D7               	movwf	___fladd@a+1
  2626  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2627  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2628  17C9  0841               	movf	sprintf@fval^(0+128),w
  2629  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2630  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2631  17CC  00D6               	movwf	___fladd@a
  2632  17CD  120A  118A  2021  160A  118A  	fcall	___fladd
  2633  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2634  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2635  17D4  0855               	movf	?___fladd+3,w
  2636  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2637  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2638  17D7  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2639  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2640  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2641  17DA  0854               	movf	?___fladd+2,w
  2642  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2643  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2644  17DD  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2645  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2646  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2647  17E0  0853               	movf	?___fladd+1,w
  2648  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2649  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2650  17E3  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2651  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2652  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2653  17E6  0852               	movf	?___fladd,w
  2654  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2655  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2656  17E9  00C1               	movwf	sprintf@fval^(0+128)
  2657  17EA                     l3403:	
  2658                           
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2660  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2661  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2662  17EC  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2663  17ED  3A80               	xorlw	128
  2664  17EE  00FF               	movwf	btemp+1
  2665  17EF  3080               	movlw	128
  2666  17F0  027F               	subwf	btemp+1,w
  2667  17F1  1D03               	skipz
  2668  17F2  2FF5               	goto	u5545
  2669  17F3  300A               	movlw	10
  2670  17F4  023B               	subwf	sprintf@eexp^(0+128),w
  2671  17F5                     u5545:	
  2672  17F5  1803               	skipnc
  2673  17F6  2FFA               	goto	u5541
  2674  17F7  120A  118A  2AA9   	goto	u5540
  2675  17FA                     u5541:	
  2676  17FA  120A  118A  2AFA   	goto	l3411
  2677  17FD                     L3:	
  2678  17FD                     L2:	
  2679  17FD  120A  118A  2FEE   	ljmp	l3593
  2680                           
  2681                           	psect	text2
  2682  0940                     __ptext2:	
  2683 ;; *************** function _scale *****************
  2684 ;; Defined at:
  2685 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  scl             1    wreg     char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  scl             1   48[BANK0 ] char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  4   30[BANK0 ] char 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       4       0       0       0
  2700 ;;      Locals:         0       5       0       0       0
  2701 ;;      Temps:          0      10       0       0       0
  2702 ;;      Totals:         0      19       0       0       0
  2703 ;;Total ram usage:       19 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    2
  2706 ;; This function calls:
  2707 ;;		___awdiv
  2708 ;;		___awmod
  2709 ;;		___flmul
  2710 ;; This function is called by:
  2711 ;;		_sprintf
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _scale
  2717  0940                     _scale:	
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2721                           ;scale@scl stored from wreg
  2722  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0942  00D0               	movwf	scale@scl
  2725  0943                     l2923:	
  2726                           
  2727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  2728  0943  1FD0               	btfss	scale@scl,7
  2729  0944  2946               	goto	u4391
  2730  0945  2947               	goto	u4390
  2731  0946                     u4391:	
  2732  0946  2AF4               	goto	l2945
  2733  0947                     u4390:	
  2734  0947                     l2925:	
  2735                           
  2736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  2737  0947  09D0               	comf	scale@scl,f
  2738  0948  0AD0               	incf	scale@scl,f
  2739  0949                     l2927:	
  2740                           
  2741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  2742  0949  0850               	movf	scale@scl,w
  2743  094A  3A80               	xorlw	128
  2744  094B  3E12               	addlw	-238
  2745  094C  1C03               	skipc
  2746  094D  294F               	goto	u4401
  2747  094E  2950               	goto	u4400
  2748  094F                     u4401:	
  2749  094F  2A38               	goto	l2935
  2750  0950                     u4400:	
  2751  0950                     l2929:	
  2752                           
  2753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2754  0950  300A               	movlw	10
  2755  0951  00F7               	movwf	___awdiv@divisor
  2756  0952  3000               	movlw	0
  2757  0953  00F8               	movwf	___awdiv@divisor+1
  2758  0954  0850               	movf	scale@scl,w
  2759  0955  00F2               	movwf	___awmod@dividend
  2760  0956  01F3               	clrf	___awmod@dividend+1
  2761  0957  1BF2               	btfsc	___awmod@dividend,7
  2762  0958  03F3               	decf	___awmod@dividend+1,f
  2763  0959  3064               	movlw	100
  2764  095A  00F0               	movwf	___awmod@divisor
  2765  095B  3000               	movlw	0
  2766  095C  00F1               	movwf	___awmod@divisor+1
  2767  095D  160A  158A  2372  120A  158A  	fcall	___awmod
  2768  0962  0871               	movf	?___awmod+1,w
  2769  0963  00FA               	movwf	___awdiv@dividend+1
  2770  0964  0870               	movf	?___awmod,w
  2771  0965  00F9               	movwf	___awdiv@dividend
  2772  0966  120A  158A  20D7  120A  158A  	fcall	___awdiv
  2773  096B  0877               	movf	?___awdiv,w
  2774  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2775  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2776  096E  00C2               	movwf	??_scale
  2777  096F  3001               	movlw	1
  2778  0970                     u4415:	
  2779  0970  1003               	clrc
  2780  0971  0DC2               	rlf	??_scale,f
  2781  0972  3EFF               	addlw	-1
  2782  0973  1D03               	skipz
  2783  0974  2970               	goto	u4415
  2784  0975  1003               	clrc
  2785  0976  0D42               	rlf	??_scale,w
  2786  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2787  0978  0084               	movwf	4
  2788  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  2789  097E  00C3               	movwf	??_scale+1
  2790  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  2791  0984  00C4               	movwf	??_scale+2
  2792  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  2793  098A  00C5               	movwf	??_scale+3
  2794  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  2795  0990  00C6               	movwf	??_scale+4
  2796  0991  0846               	movf	??_scale+4,w
  2797  0992  00A7               	movwf	___flmul@b+3
  2798  0993  0845               	movf	??_scale+3,w
  2799  0994  00A6               	movwf	___flmul@b+2
  2800  0995  0844               	movf	??_scale+2,w
  2801  0996  00A5               	movwf	___flmul@b+1
  2802  0997  0843               	movf	??_scale+1,w
  2803  0998  00A4               	movwf	___flmul@b
  2804  0999  3064               	movlw	100
  2805  099A  00F7               	movwf	___awdiv@divisor
  2806  099B  3000               	movlw	0
  2807  099C  00F8               	movwf	___awdiv@divisor+1
  2808  099D  0850               	movf	scale@scl,w
  2809  099E  00F9               	movwf	___awdiv@dividend
  2810  099F  01FA               	clrf	___awdiv@dividend+1
  2811  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2812  09A1  03FA               	decf	___awdiv@dividend+1,f
  2813  09A2  120A  158A  20D7  120A  158A  	fcall	___awdiv
  2814  09A7  0877               	movf	?___awdiv,w
  2815  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2816  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2817  09AA  00C7               	movwf	??_scale+5
  2818  09AB  3001               	movlw	1
  2819  09AC                     u4425:	
  2820  09AC  1003               	clrc
  2821  09AD  0DC7               	rlf	??_scale+5,f
  2822  09AE  3EFF               	addlw	-1
  2823  09AF  1D03               	skipz
  2824  09B0  29AC               	goto	u4425
  2825  09B1  1003               	clrc
  2826  09B2  0D47               	rlf	??_scale+5,w
  2827  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2828  09B4  0084               	movwf	4
  2829  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  2830  09BA  00C8               	movwf	??_scale+6
  2831  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  2832  09C0  00C9               	movwf	??_scale+7
  2833  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  2834  09C6  00CA               	movwf	??_scale+8
  2835  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  2836  09CC  00CB               	movwf	??_scale+9
  2837  09CD  084B               	movf	??_scale+9,w
  2838  09CE  00AB               	movwf	___flmul@a+3
  2839  09CF  084A               	movf	??_scale+8,w
  2840  09D0  00AA               	movwf	___flmul@a+2
  2841  09D1  0849               	movf	??_scale+7,w
  2842  09D2  00A9               	movwf	___flmul@a+1
  2843  09D3  0848               	movf	??_scale+6,w
  2844  09D4  00A8               	movwf	___flmul@a
  2845  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2846  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2847  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2848  09DC  0827               	movf	?___flmul+3,w
  2849  09DD  00CF               	movwf	_scale$976+3
  2850  09DE  0826               	movf	?___flmul+2,w
  2851  09DF  00CE               	movwf	_scale$976+2
  2852  09E0  0825               	movf	?___flmul+1,w
  2853  09E1  00CD               	movwf	_scale$976+1
  2854  09E2  0824               	movf	?___flmul,w
  2855  09E3  00CC               	movwf	_scale$976
  2856                           
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2858  09E4  300A               	movlw	10
  2859  09E5  00F0               	movwf	___awmod@divisor
  2860  09E6  3000               	movlw	0
  2861  09E7  00F1               	movwf	___awmod@divisor+1
  2862  09E8  0850               	movf	scale@scl,w
  2863  09E9  00F2               	movwf	___awmod@dividend
  2864  09EA  01F3               	clrf	___awmod@dividend+1
  2865  09EB  1BF2               	btfsc	___awmod@dividend,7
  2866  09EC  03F3               	decf	___awmod@dividend+1,f
  2867  09ED  160A  158A  2372  120A  158A  	fcall	___awmod
  2868  09F2  0870               	movf	?___awmod,w
  2869  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2870  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2871  09F5  00C2               	movwf	??_scale
  2872  09F6  3001               	movlw	1
  2873  09F7                     u4435:	
  2874  09F7  1003               	clrc
  2875  09F8  0DC2               	rlf	??_scale,f
  2876  09F9  3EFF               	addlw	-1
  2877  09FA  1D03               	skipz
  2878  09FB  29F7               	goto	u4435
  2879  09FC  1003               	clrc
  2880  09FD  0D42               	rlf	??_scale,w
  2881  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2882  09FF  0084               	movwf	4
  2883  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  2884  0A05  00C3               	movwf	??_scale+1
  2885  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  2886  0A0B  00C4               	movwf	??_scale+2
  2887  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  2888  0A11  00C5               	movwf	??_scale+3
  2889  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  2890  0A17  00C6               	movwf	??_scale+4
  2891  0A18  0846               	movf	??_scale+4,w
  2892  0A19  00A7               	movwf	___flmul@b+3
  2893  0A1A  0845               	movf	??_scale+3,w
  2894  0A1B  00A6               	movwf	___flmul@b+2
  2895  0A1C  0844               	movf	??_scale+2,w
  2896  0A1D  00A5               	movwf	___flmul@b+1
  2897  0A1E  0843               	movf	??_scale+1,w
  2898  0A1F  00A4               	movwf	___flmul@b
  2899  0A20  084F               	movf	_scale$976+3,w
  2900  0A21  00AB               	movwf	___flmul@a+3
  2901  0A22  084E               	movf	_scale$976+2,w
  2902  0A23  00AA               	movwf	___flmul@a+2
  2903  0A24  084D               	movf	_scale$976+1,w
  2904  0A25  00A9               	movwf	___flmul@a+1
  2905  0A26  084C               	movf	_scale$976,w
  2906  0A27  00A8               	movwf	___flmul@a
  2907  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  2908  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0A2F  0827               	movf	?___flmul+3,w
  2911  0A30  00C1               	movwf	?_scale+3
  2912  0A31  0826               	movf	?___flmul+2,w
  2913  0A32  00C0               	movwf	?_scale+2
  2914  0A33  0825               	movf	?___flmul+1,w
  2915  0A34  00BF               	movwf	?_scale+1
  2916  0A35  0824               	movf	?___flmul,w
  2917  0A36  00BE               	movwf	?_scale
  2918  0A37  2C9E               	goto	l233
  2919  0A38                     l2935:	
  2920  0A38  0850               	movf	scale@scl,w
  2921  0A39  3A80               	xorlw	128
  2922  0A3A  3E75               	addlw	-139
  2923  0A3B  1C03               	skipc
  2924  0A3C  2A3E               	goto	u4441
  2925  0A3D  2A3F               	goto	u4440
  2926  0A3E                     u4441:	
  2927  0A3E  2AC7               	goto	l2941
  2928  0A3F                     u4440:	
  2929  0A3F                     l2937:	
  2930                           
  2931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2932  0A3F  300A               	movlw	10
  2933  0A40  00F0               	movwf	___awmod@divisor
  2934  0A41  3000               	movlw	0
  2935  0A42  00F1               	movwf	___awmod@divisor+1
  2936  0A43  0850               	movf	scale@scl,w
  2937  0A44  00F2               	movwf	___awmod@dividend
  2938  0A45  01F3               	clrf	___awmod@dividend+1
  2939  0A46  1BF2               	btfsc	___awmod@dividend,7
  2940  0A47  03F3               	decf	___awmod@dividend+1,f
  2941  0A48  160A  158A  2372  120A  158A  	fcall	___awmod
  2942  0A4D  0870               	movf	?___awmod,w
  2943  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0A50  00C2               	movwf	??_scale
  2946  0A51  3001               	movlw	1
  2947  0A52                     u4455:	
  2948  0A52  1003               	clrc
  2949  0A53  0DC2               	rlf	??_scale,f
  2950  0A54  3EFF               	addlw	-1
  2951  0A55  1D03               	skipz
  2952  0A56  2A52               	goto	u4455
  2953  0A57  1003               	clrc
  2954  0A58  0D42               	rlf	??_scale,w
  2955  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2956  0A5A  0084               	movwf	4
  2957  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  2958  0A60  00C3               	movwf	??_scale+1
  2959  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  2960  0A66  00C4               	movwf	??_scale+2
  2961  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  2962  0A6C  00C5               	movwf	??_scale+3
  2963  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  2964  0A72  00C6               	movwf	??_scale+4
  2965  0A73  0846               	movf	??_scale+4,w
  2966  0A74  00A7               	movwf	___flmul@b+3
  2967  0A75  0845               	movf	??_scale+3,w
  2968  0A76  00A6               	movwf	___flmul@b+2
  2969  0A77  0844               	movf	??_scale+2,w
  2970  0A78  00A5               	movwf	___flmul@b+1
  2971  0A79  0843               	movf	??_scale+1,w
  2972  0A7A  00A4               	movwf	___flmul@b
  2973  0A7B  300A               	movlw	10
  2974  0A7C  00F7               	movwf	___awdiv@divisor
  2975  0A7D  3000               	movlw	0
  2976  0A7E  00F8               	movwf	___awdiv@divisor+1
  2977  0A7F  0850               	movf	scale@scl,w
  2978  0A80  00F9               	movwf	___awdiv@dividend
  2979  0A81  01FA               	clrf	___awdiv@dividend+1
  2980  0A82  1BF9               	btfsc	___awdiv@dividend,7
  2981  0A83  03FA               	decf	___awdiv@dividend+1,f
  2982  0A84  120A  158A  20D7  120A  158A  	fcall	___awdiv
  2983  0A89  0877               	movf	?___awdiv,w
  2984  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2985  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2986  0A8C  00C7               	movwf	??_scale+5
  2987  0A8D  3001               	movlw	1
  2988  0A8E                     u4465:	
  2989  0A8E  1003               	clrc
  2990  0A8F  0DC7               	rlf	??_scale+5,f
  2991  0A90  3EFF               	addlw	-1
  2992  0A91  1D03               	skipz
  2993  0A92  2A8E               	goto	u4465
  2994  0A93  1003               	clrc
  2995  0A94  0D47               	rlf	??_scale+5,w
  2996  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2997  0A96  0084               	movwf	4
  2998  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  2999  0A9C  00C8               	movwf	??_scale+6
  3000  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  3001  0AA2  00C9               	movwf	??_scale+7
  3002  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3003  0AA8  00CA               	movwf	??_scale+8
  3004  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3005  0AAE  00CB               	movwf	??_scale+9
  3006  0AAF  084B               	movf	??_scale+9,w
  3007  0AB0  00AB               	movwf	___flmul@a+3
  3008  0AB1  084A               	movf	??_scale+8,w
  3009  0AB2  00AA               	movwf	___flmul@a+2
  3010  0AB3  0849               	movf	??_scale+7,w
  3011  0AB4  00A9               	movwf	___flmul@a+1
  3012  0AB5  0848               	movf	??_scale+6,w
  3013  0AB6  00A8               	movwf	___flmul@a
  3014  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3015  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0ABE  0827               	movf	?___flmul+3,w
  3018  0ABF  00C1               	movwf	?_scale+3
  3019  0AC0  0826               	movf	?___flmul+2,w
  3020  0AC1  00C0               	movwf	?_scale+2
  3021  0AC2  0825               	movf	?___flmul+1,w
  3022  0AC3  00BF               	movwf	?_scale+1
  3023  0AC4  0824               	movf	?___flmul,w
  3024  0AC5  00BE               	movwf	?_scale
  3025  0AC6  2C9E               	goto	l233
  3026  0AC7                     l2941:	
  3027                           
  3028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3029  0AC7  0850               	movf	scale@scl,w
  3030  0AC8  00C2               	movwf	??_scale
  3031  0AC9  3001               	movlw	1
  3032  0ACA                     u4475:	
  3033  0ACA  1003               	clrc
  3034  0ACB  0DC2               	rlf	??_scale,f
  3035  0ACC  3EFF               	addlw	-1
  3036  0ACD  1D03               	skipz
  3037  0ACE  2ACA               	goto	u4475
  3038  0ACF  1003               	clrc
  3039  0AD0  0D42               	rlf	??_scale,w
  3040  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3041  0AD2  0084               	movwf	4
  3042  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  3043  0AD8  00C3               	movwf	??_scale+1
  3044  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  3045  0ADE  00C4               	movwf	??_scale+2
  3046  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  3047  0AE4  00C5               	movwf	??_scale+3
  3048  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3049  0AEA  00C6               	movwf	??_scale+4
  3050  0AEB  0846               	movf	??_scale+4,w
  3051  0AEC  00C1               	movwf	?_scale+3
  3052  0AED  0845               	movf	??_scale+3,w
  3053  0AEE  00C0               	movwf	?_scale+2
  3054  0AEF  0844               	movf	??_scale+2,w
  3055  0AF0  00BF               	movwf	?_scale+1
  3056  0AF1  0843               	movf	??_scale+1,w
  3057  0AF2  00BE               	movwf	?_scale
  3058  0AF3  2C9E               	goto	l233
  3059  0AF4                     l2945:	
  3060                           
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3062  0AF4  0850               	movf	scale@scl,w
  3063  0AF5  3A80               	xorlw	128
  3064  0AF6  3E12               	addlw	-238
  3065  0AF7  1C03               	skipc
  3066  0AF8  2AFA               	goto	u4481
  3067  0AF9  2AFB               	goto	u4480
  3068  0AFA                     u4481:	
  3069  0AFA  2BE3               	goto	l2953
  3070  0AFB                     u4480:	
  3071  0AFB                     l2947:	
  3072                           
  3073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3074  0AFB  300A               	movlw	10
  3075  0AFC  00F7               	movwf	___awdiv@divisor
  3076  0AFD  3000               	movlw	0
  3077  0AFE  00F8               	movwf	___awdiv@divisor+1
  3078  0AFF  0850               	movf	scale@scl,w
  3079  0B00  00F2               	movwf	___awmod@dividend
  3080  0B01  01F3               	clrf	___awmod@dividend+1
  3081  0B02  1BF2               	btfsc	___awmod@dividend,7
  3082  0B03  03F3               	decf	___awmod@dividend+1,f
  3083  0B04  3064               	movlw	100
  3084  0B05  00F0               	movwf	___awmod@divisor
  3085  0B06  3000               	movlw	0
  3086  0B07  00F1               	movwf	___awmod@divisor+1
  3087  0B08  160A  158A  2372  120A  158A  	fcall	___awmod
  3088  0B0D  0871               	movf	?___awmod+1,w
  3089  0B0E  00FA               	movwf	___awdiv@dividend+1
  3090  0B0F  0870               	movf	?___awmod,w
  3091  0B10  00F9               	movwf	___awdiv@dividend
  3092  0B11  120A  158A  20D7  120A  158A  	fcall	___awdiv
  3093  0B16  0877               	movf	?___awdiv,w
  3094  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0B19  00C2               	movwf	??_scale
  3097  0B1A  3001               	movlw	1
  3098  0B1B                     u4495:	
  3099  0B1B  1003               	clrc
  3100  0B1C  0DC2               	rlf	??_scale,f
  3101  0B1D  3EFF               	addlw	-1
  3102  0B1E  1D03               	skipz
  3103  0B1F  2B1B               	goto	u4495
  3104  0B20  1003               	clrc
  3105  0B21  0D42               	rlf	??_scale,w
  3106  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3107  0B23  0084               	movwf	4
  3108  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  3109  0B29  00C3               	movwf	??_scale+1
  3110  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  3111  0B2F  00C4               	movwf	??_scale+2
  3112  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  3113  0B35  00C5               	movwf	??_scale+3
  3114  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  3115  0B3B  00C6               	movwf	??_scale+4
  3116  0B3C  0846               	movf	??_scale+4,w
  3117  0B3D  00A7               	movwf	___flmul@b+3
  3118  0B3E  0845               	movf	??_scale+3,w
  3119  0B3F  00A6               	movwf	___flmul@b+2
  3120  0B40  0844               	movf	??_scale+2,w
  3121  0B41  00A5               	movwf	___flmul@b+1
  3122  0B42  0843               	movf	??_scale+1,w
  3123  0B43  00A4               	movwf	___flmul@b
  3124  0B44  3064               	movlw	100
  3125  0B45  00F7               	movwf	___awdiv@divisor
  3126  0B46  3000               	movlw	0
  3127  0B47  00F8               	movwf	___awdiv@divisor+1
  3128  0B48  0850               	movf	scale@scl,w
  3129  0B49  00F9               	movwf	___awdiv@dividend
  3130  0B4A  01FA               	clrf	___awdiv@dividend+1
  3131  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3132  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3133  0B4D  120A  158A  20D7  120A  158A  	fcall	___awdiv
  3134  0B52  0877               	movf	?___awdiv,w
  3135  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0B55  00C7               	movwf	??_scale+5
  3138  0B56  3001               	movlw	1
  3139  0B57                     u4505:	
  3140  0B57  1003               	clrc
  3141  0B58  0DC7               	rlf	??_scale+5,f
  3142  0B59  3EFF               	addlw	-1
  3143  0B5A  1D03               	skipz
  3144  0B5B  2B57               	goto	u4505
  3145  0B5C  1003               	clrc
  3146  0B5D  0D47               	rlf	??_scale+5,w
  3147  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3148  0B5F  0084               	movwf	4
  3149  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  3150  0B65  00C8               	movwf	??_scale+6
  3151  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  3152  0B6B  00C9               	movwf	??_scale+7
  3153  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  3154  0B71  00CA               	movwf	??_scale+8
  3155  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  3156  0B77  00CB               	movwf	??_scale+9
  3157  0B78  084B               	movf	??_scale+9,w
  3158  0B79  00AB               	movwf	___flmul@a+3
  3159  0B7A  084A               	movf	??_scale+8,w
  3160  0B7B  00AA               	movwf	___flmul@a+2
  3161  0B7C  0849               	movf	??_scale+7,w
  3162  0B7D  00A9               	movwf	___flmul@a+1
  3163  0B7E  0848               	movf	??_scale+6,w
  3164  0B7F  00A8               	movwf	___flmul@a
  3165  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3166  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0B87  0827               	movf	?___flmul+3,w
  3169  0B88  00CF               	movwf	_scale$976+3
  3170  0B89  0826               	movf	?___flmul+2,w
  3171  0B8A  00CE               	movwf	_scale$976+2
  3172  0B8B  0825               	movf	?___flmul+1,w
  3173  0B8C  00CD               	movwf	_scale$976+1
  3174  0B8D  0824               	movf	?___flmul,w
  3175  0B8E  00CC               	movwf	_scale$976
  3176                           
  3177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3178  0B8F  300A               	movlw	10
  3179  0B90  00F0               	movwf	___awmod@divisor
  3180  0B91  3000               	movlw	0
  3181  0B92  00F1               	movwf	___awmod@divisor+1
  3182  0B93  0850               	movf	scale@scl,w
  3183  0B94  00F2               	movwf	___awmod@dividend
  3184  0B95  01F3               	clrf	___awmod@dividend+1
  3185  0B96  1BF2               	btfsc	___awmod@dividend,7
  3186  0B97  03F3               	decf	___awmod@dividend+1,f
  3187  0B98  160A  158A  2372  120A  158A  	fcall	___awmod
  3188  0B9D  0870               	movf	?___awmod,w
  3189  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0BA0  00C2               	movwf	??_scale
  3192  0BA1  3001               	movlw	1
  3193  0BA2                     u4515:	
  3194  0BA2  1003               	clrc
  3195  0BA3  0DC2               	rlf	??_scale,f
  3196  0BA4  3EFF               	addlw	-1
  3197  0BA5  1D03               	skipz
  3198  0BA6  2BA2               	goto	u4515
  3199  0BA7  1003               	clrc
  3200  0BA8  0D42               	rlf	??_scale,w
  3201  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3202  0BAA  0084               	movwf	4
  3203  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  3204  0BB0  00C3               	movwf	??_scale+1
  3205  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  3206  0BB6  00C4               	movwf	??_scale+2
  3207  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  3208  0BBC  00C5               	movwf	??_scale+3
  3209  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  3210  0BC2  00C6               	movwf	??_scale+4
  3211  0BC3  0846               	movf	??_scale+4,w
  3212  0BC4  00A7               	movwf	___flmul@b+3
  3213  0BC5  0845               	movf	??_scale+3,w
  3214  0BC6  00A6               	movwf	___flmul@b+2
  3215  0BC7  0844               	movf	??_scale+2,w
  3216  0BC8  00A5               	movwf	___flmul@b+1
  3217  0BC9  0843               	movf	??_scale+1,w
  3218  0BCA  00A4               	movwf	___flmul@b
  3219  0BCB  084F               	movf	_scale$976+3,w
  3220  0BCC  00AB               	movwf	___flmul@a+3
  3221  0BCD  084E               	movf	_scale$976+2,w
  3222  0BCE  00AA               	movwf	___flmul@a+2
  3223  0BCF  084D               	movf	_scale$976+1,w
  3224  0BD0  00A9               	movwf	___flmul@a+1
  3225  0BD1  084C               	movf	_scale$976,w
  3226  0BD2  00A8               	movwf	___flmul@a
  3227  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3228  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0BDA  0827               	movf	?___flmul+3,w
  3231  0BDB  00C1               	movwf	?_scale+3
  3232  0BDC  0826               	movf	?___flmul+2,w
  3233  0BDD  00C0               	movwf	?_scale+2
  3234  0BDE  0825               	movf	?___flmul+1,w
  3235  0BDF  00BF               	movwf	?_scale+1
  3236  0BE0  0824               	movf	?___flmul,w
  3237  0BE1  00BE               	movwf	?_scale
  3238  0BE2  2C9E               	goto	l233
  3239  0BE3                     l2953:	
  3240  0BE3  0850               	movf	scale@scl,w
  3241  0BE4  3A80               	xorlw	128
  3242  0BE5  3E75               	addlw	-139
  3243  0BE6  1C03               	skipc
  3244  0BE7  2BE9               	goto	u4521
  3245  0BE8  2BEA               	goto	u4520
  3246  0BE9                     u4521:	
  3247  0BE9  2C72               	goto	l2959
  3248  0BEA                     u4520:	
  3249  0BEA                     l2955:	
  3250                           
  3251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3252  0BEA  300A               	movlw	10
  3253  0BEB  00F0               	movwf	___awmod@divisor
  3254  0BEC  3000               	movlw	0
  3255  0BED  00F1               	movwf	___awmod@divisor+1
  3256  0BEE  0850               	movf	scale@scl,w
  3257  0BEF  00F2               	movwf	___awmod@dividend
  3258  0BF0  01F3               	clrf	___awmod@dividend+1
  3259  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3260  0BF2  03F3               	decf	___awmod@dividend+1,f
  3261  0BF3  160A  158A  2372  120A  158A  	fcall	___awmod
  3262  0BF8  0870               	movf	?___awmod,w
  3263  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0BFB  00C2               	movwf	??_scale
  3266  0BFC  3001               	movlw	1
  3267  0BFD                     u4535:	
  3268  0BFD  1003               	clrc
  3269  0BFE  0DC2               	rlf	??_scale,f
  3270  0BFF  3EFF               	addlw	-1
  3271  0C00  1D03               	skipz
  3272  0C01  2BFD               	goto	u4535
  3273  0C02  1003               	clrc
  3274  0C03  0D42               	rlf	??_scale,w
  3275  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3276  0C05  0084               	movwf	4
  3277  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  3278  0C0B  00C3               	movwf	??_scale+1
  3279  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3280  0C11  00C4               	movwf	??_scale+2
  3281  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  3282  0C17  00C5               	movwf	??_scale+3
  3283  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  3284  0C1D  00C6               	movwf	??_scale+4
  3285  0C1E  0846               	movf	??_scale+4,w
  3286  0C1F  00A7               	movwf	___flmul@b+3
  3287  0C20  0845               	movf	??_scale+3,w
  3288  0C21  00A6               	movwf	___flmul@b+2
  3289  0C22  0844               	movf	??_scale+2,w
  3290  0C23  00A5               	movwf	___flmul@b+1
  3291  0C24  0843               	movf	??_scale+1,w
  3292  0C25  00A4               	movwf	___flmul@b
  3293  0C26  300A               	movlw	10
  3294  0C27  00F7               	movwf	___awdiv@divisor
  3295  0C28  3000               	movlw	0
  3296  0C29  00F8               	movwf	___awdiv@divisor+1
  3297  0C2A  0850               	movf	scale@scl,w
  3298  0C2B  00F9               	movwf	___awdiv@dividend
  3299  0C2C  01FA               	clrf	___awdiv@dividend+1
  3300  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3301  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3302  0C2F  120A  158A  20D7  120A  158A  	fcall	___awdiv
  3303  0C34  0877               	movf	?___awdiv,w
  3304  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0C37  00C7               	movwf	??_scale+5
  3307  0C38  3001               	movlw	1
  3308  0C39                     u4545:	
  3309  0C39  1003               	clrc
  3310  0C3A  0DC7               	rlf	??_scale+5,f
  3311  0C3B  3EFF               	addlw	-1
  3312  0C3C  1D03               	skipz
  3313  0C3D  2C39               	goto	u4545
  3314  0C3E  1003               	clrc
  3315  0C3F  0D47               	rlf	??_scale+5,w
  3316  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3317  0C41  0084               	movwf	4
  3318  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  3319  0C47  00C8               	movwf	??_scale+6
  3320  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  3321  0C4D  00C9               	movwf	??_scale+7
  3322  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  3323  0C53  00CA               	movwf	??_scale+8
  3324  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  3325  0C59  00CB               	movwf	??_scale+9
  3326  0C5A  084B               	movf	??_scale+9,w
  3327  0C5B  00AB               	movwf	___flmul@a+3
  3328  0C5C  084A               	movf	??_scale+8,w
  3329  0C5D  00AA               	movwf	___flmul@a+2
  3330  0C5E  0849               	movf	??_scale+7,w
  3331  0C5F  00A9               	movwf	___flmul@a+1
  3332  0C60  0848               	movf	??_scale+6,w
  3333  0C61  00A8               	movwf	___flmul@a
  3334  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3335  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0C69  0827               	movf	?___flmul+3,w
  3338  0C6A  00C1               	movwf	?_scale+3
  3339  0C6B  0826               	movf	?___flmul+2,w
  3340  0C6C  00C0               	movwf	?_scale+2
  3341  0C6D  0825               	movf	?___flmul+1,w
  3342  0C6E  00BF               	movwf	?_scale+1
  3343  0C6F  0824               	movf	?___flmul,w
  3344  0C70  00BE               	movwf	?_scale
  3345  0C71  2C9E               	goto	l233
  3346  0C72                     l2959:	
  3347                           
  3348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3349  0C72  0850               	movf	scale@scl,w
  3350  0C73  00C2               	movwf	??_scale
  3351  0C74  3001               	movlw	1
  3352  0C75                     u4555:	
  3353  0C75  1003               	clrc
  3354  0C76  0DC2               	rlf	??_scale,f
  3355  0C77  3EFF               	addlw	-1
  3356  0C78  1D03               	skipz
  3357  0C79  2C75               	goto	u4555
  3358  0C7A  1003               	clrc
  3359  0C7B  0D42               	rlf	??_scale,w
  3360  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3361  0C7D  0084               	movwf	4
  3362  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  3363  0C83  00C3               	movwf	??_scale+1
  3364  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  3365  0C89  00C4               	movwf	??_scale+2
  3366  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  3367  0C8F  00C5               	movwf	??_scale+3
  3368  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  3369  0C95  00C6               	movwf	??_scale+4
  3370  0C96  0846               	movf	??_scale+4,w
  3371  0C97  00C1               	movwf	?_scale+3
  3372  0C98  0845               	movf	??_scale+3,w
  3373  0C99  00C0               	movwf	?_scale+2
  3374  0C9A  0844               	movf	??_scale+2,w
  3375  0C9B  00BF               	movwf	?_scale+1
  3376  0C9C  0843               	movf	??_scale+1,w
  3377  0C9D  00BE               	movwf	?_scale
  3378  0C9E                     l233:	
  3379  0C9E  0008               	return
  3380  0C9F                     __end_of_scale:	
  3381                           
  3382                           	psect	text3
  3383  1B72                     __ptext3:	
  3384 ;; *************** function ___awmod *****************
  3385 ;; Defined at:
  3386 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  divisor         2    0[COMMON] int 
  3389 ;;  dividend        2    2[COMMON] int 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  sign            1    6[COMMON] unsigned char 
  3392 ;;  counter         1    5[COMMON] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2    0[COMMON] int 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         4       0       0       0       0
  3403 ;;      Locals:         2       0       0       0       0
  3404 ;;      Temps:          1       0       0       0       0
  3405 ;;      Totals:         7       0       0       0       0
  3406 ;;Total ram usage:        7 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_scale
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function ___awmod
  3417  1B72                     ___awmod:	
  3418  1B72                     l2463:	
  3419                           ;incstack = 0
  3420                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3421                           
  3422  1B72  01F6               	clrf	___awmod@sign
  3423  1B73                     l2465:	
  3424  1B73  1FF3               	btfss	___awmod@dividend+1,7
  3425  1B74  2B76               	goto	u3261
  3426  1B75  2B77               	goto	u3260
  3427  1B76                     u3261:	
  3428  1B76  2B7E               	goto	l2471
  3429  1B77                     u3260:	
  3430  1B77                     l2467:	
  3431  1B77  09F2               	comf	___awmod@dividend,f
  3432  1B78  09F3               	comf	___awmod@dividend+1,f
  3433  1B79  0AF2               	incf	___awmod@dividend,f
  3434  1B7A  1903               	skipnz
  3435  1B7B  0AF3               	incf	___awmod@dividend+1,f
  3436  1B7C                     l2469:	
  3437  1B7C  01F6               	clrf	___awmod@sign
  3438  1B7D  0AF6               	incf	___awmod@sign,f
  3439  1B7E                     l2471:	
  3440  1B7E  1FF1               	btfss	___awmod@divisor+1,7
  3441  1B7F  2B81               	goto	u3271
  3442  1B80  2B82               	goto	u3270
  3443  1B81                     u3271:	
  3444  1B81  2B87               	goto	l2475
  3445  1B82                     u3270:	
  3446  1B82                     l2473:	
  3447  1B82  09F0               	comf	___awmod@divisor,f
  3448  1B83  09F1               	comf	___awmod@divisor+1,f
  3449  1B84  0AF0               	incf	___awmod@divisor,f
  3450  1B85  1903               	skipnz
  3451  1B86  0AF1               	incf	___awmod@divisor+1,f
  3452  1B87                     l2475:	
  3453  1B87  0870               	movf	___awmod@divisor,w
  3454  1B88  0471               	iorwf	___awmod@divisor+1,w
  3455  1B89  1903               	btfsc	3,2
  3456  1B8A  2B8C               	goto	u3281
  3457  1B8B  2B8D               	goto	u3280
  3458  1B8C                     u3281:	
  3459  1B8C  2BBC               	goto	l2493
  3460  1B8D                     u3280:	
  3461  1B8D                     l2477:	
  3462  1B8D  01F5               	clrf	___awmod@counter
  3463  1B8E  0AF5               	incf	___awmod@counter,f
  3464  1B8F  2B9B               	goto	l2483
  3465  1B90                     l2479:	
  3466  1B90  3001               	movlw	1
  3467  1B91                     u3295:	
  3468  1B91  1003               	clrc
  3469  1B92  0DF0               	rlf	___awmod@divisor,f
  3470  1B93  0DF1               	rlf	___awmod@divisor+1,f
  3471  1B94  3EFF               	addlw	-1
  3472  1B95  1D03               	skipz
  3473  1B96  2B91               	goto	u3295
  3474  1B97                     l2481:	
  3475  1B97  3001               	movlw	1
  3476  1B98  00F4               	movwf	??___awmod
  3477  1B99  0874               	movf	??___awmod,w
  3478  1B9A  07F5               	addwf	___awmod@counter,f
  3479  1B9B                     l2483:	
  3480  1B9B  1FF1               	btfss	___awmod@divisor+1,7
  3481  1B9C  2B9E               	goto	u3301
  3482  1B9D  2B9F               	goto	u3300
  3483  1B9E                     u3301:	
  3484  1B9E  2B90               	goto	l2479
  3485  1B9F                     u3300:	
  3486  1B9F                     l2485:	
  3487  1B9F  0871               	movf	___awmod@divisor+1,w
  3488  1BA0  0273               	subwf	___awmod@dividend+1,w
  3489  1BA1  1D03               	skipz
  3490  1BA2  2BA5               	goto	u3315
  3491  1BA3  0870               	movf	___awmod@divisor,w
  3492  1BA4  0272               	subwf	___awmod@dividend,w
  3493  1BA5                     u3315:	
  3494  1BA5  1C03               	skipc
  3495  1BA6  2BA8               	goto	u3311
  3496  1BA7  2BA9               	goto	u3310
  3497  1BA8                     u3311:	
  3498  1BA8  2BAF               	goto	l2489
  3499  1BA9                     u3310:	
  3500  1BA9                     l2487:	
  3501  1BA9  0870               	movf	___awmod@divisor,w
  3502  1BAA  02F2               	subwf	___awmod@dividend,f
  3503  1BAB  0871               	movf	___awmod@divisor+1,w
  3504  1BAC  1C03               	skipc
  3505  1BAD  03F3               	decf	___awmod@dividend+1,f
  3506  1BAE  02F3               	subwf	___awmod@dividend+1,f
  3507  1BAF                     l2489:	
  3508  1BAF  3001               	movlw	1
  3509  1BB0                     u3325:	
  3510  1BB0  1003               	clrc
  3511  1BB1  0CF1               	rrf	___awmod@divisor+1,f
  3512  1BB2  0CF0               	rrf	___awmod@divisor,f
  3513  1BB3  3EFF               	addlw	-1
  3514  1BB4  1D03               	skipz
  3515  1BB5  2BB0               	goto	u3325
  3516  1BB6                     l2491:	
  3517  1BB6  3001               	movlw	1
  3518  1BB7  02F5               	subwf	___awmod@counter,f
  3519  1BB8  1D03               	btfss	3,2
  3520  1BB9  2BBB               	goto	u3331
  3521  1BBA  2BBC               	goto	u3330
  3522  1BBB                     u3331:	
  3523  1BBB  2B9F               	goto	l2485
  3524  1BBC                     u3330:	
  3525  1BBC                     l2493:	
  3526  1BBC  0876               	movf	___awmod@sign,w
  3527  1BBD  1903               	btfsc	3,2
  3528  1BBE  2BC0               	goto	u3341
  3529  1BBF  2BC1               	goto	u3340
  3530  1BC0                     u3341:	
  3531  1BC0  2BC6               	goto	l2497
  3532  1BC1                     u3340:	
  3533  1BC1                     l2495:	
  3534  1BC1  09F2               	comf	___awmod@dividend,f
  3535  1BC2  09F3               	comf	___awmod@dividend+1,f
  3536  1BC3  0AF2               	incf	___awmod@dividend,f
  3537  1BC4  1903               	skipnz
  3538  1BC5  0AF3               	incf	___awmod@dividend+1,f
  3539  1BC6                     l2497:	
  3540  1BC6  0873               	movf	___awmod@dividend+1,w
  3541  1BC7  00F1               	movwf	?___awmod+1
  3542  1BC8  0872               	movf	___awmod@dividend,w
  3543  1BC9  00F0               	movwf	?___awmod
  3544  1BCA                     l504:	
  3545  1BCA  0008               	return
  3546  1BCB                     __end_of___awmod:	
  3547                           
  3548                           	psect	text4
  3549  08D7                     __ptext4:	
  3550 ;; *************** function ___awdiv *****************
  3551 ;; Defined at:
  3552 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  divisor         2    7[COMMON] int 
  3555 ;;  dividend        2    9[COMMON] int 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  quotient        2    2[BANK0 ] int 
  3558 ;;  sign            1    1[BANK0 ] unsigned char 
  3559 ;;  counter         1    0[BANK0 ] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2    7[COMMON] int 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3569 ;;      Params:         4       0       0       0       0
  3570 ;;      Locals:         0       4       0       0       0
  3571 ;;      Temps:          1       0       0       0       0
  3572 ;;      Totals:         5       4       0       0       0
  3573 ;;Total ram usage:        9 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_scale
  3579 ;;		_sprintf
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           
  3584                           ;psect for function ___awdiv
  3585  08D7                     ___awdiv:	
  3586  08D7                     l2419:	
  3587                           ;incstack = 0
  3588                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3589                           
  3590  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  3591  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  3592  08D9  01A1               	clrf	___awdiv@sign
  3593  08DA                     l2421:	
  3594  08DA  1FF8               	btfss	___awdiv@divisor+1,7
  3595  08DB  28DD               	goto	u3161
  3596  08DC  28DE               	goto	u3160
  3597  08DD                     u3161:	
  3598  08DD  28E5               	goto	l2427
  3599  08DE                     u3160:	
  3600  08DE                     l2423:	
  3601  08DE  09F7               	comf	___awdiv@divisor,f
  3602  08DF  09F8               	comf	___awdiv@divisor+1,f
  3603  08E0  0AF7               	incf	___awdiv@divisor,f
  3604  08E1  1903               	skipnz
  3605  08E2  0AF8               	incf	___awdiv@divisor+1,f
  3606  08E3                     l2425:	
  3607  08E3  01A1               	clrf	___awdiv@sign
  3608  08E4  0AA1               	incf	___awdiv@sign,f
  3609  08E5                     l2427:	
  3610  08E5  1FFA               	btfss	___awdiv@dividend+1,7
  3611  08E6  28E8               	goto	u3171
  3612  08E7  28E9               	goto	u3170
  3613  08E8                     u3171:	
  3614  08E8  28F2               	goto	l2433
  3615  08E9                     u3170:	
  3616  08E9                     l2429:	
  3617  08E9  09F9               	comf	___awdiv@dividend,f
  3618  08EA  09FA               	comf	___awdiv@dividend+1,f
  3619  08EB  0AF9               	incf	___awdiv@dividend,f
  3620  08EC  1903               	skipnz
  3621  08ED  0AFA               	incf	___awdiv@dividend+1,f
  3622  08EE                     l2431:	
  3623  08EE  3001               	movlw	1
  3624  08EF  00FB               	movwf	??___awdiv
  3625  08F0  087B               	movf	??___awdiv,w
  3626  08F1  06A1               	xorwf	___awdiv@sign,f
  3627  08F2                     l2433:	
  3628  08F2  01A2               	clrf	___awdiv@quotient
  3629  08F3  01A3               	clrf	___awdiv@quotient+1
  3630  08F4                     l2435:	
  3631  08F4  0877               	movf	___awdiv@divisor,w
  3632  08F5  0478               	iorwf	___awdiv@divisor+1,w
  3633  08F6  1903               	btfsc	3,2
  3634  08F7  28F9               	goto	u3181
  3635  08F8  28FA               	goto	u3180
  3636  08F9                     u3181:	
  3637  08F9  2931               	goto	l2455
  3638  08FA                     u3180:	
  3639  08FA                     l2437:	
  3640  08FA  01A0               	clrf	___awdiv@counter
  3641  08FB  0AA0               	incf	___awdiv@counter,f
  3642  08FC  2908               	goto	l2443
  3643  08FD                     l2439:	
  3644  08FD  3001               	movlw	1
  3645  08FE                     u3195:	
  3646  08FE  1003               	clrc
  3647  08FF  0DF7               	rlf	___awdiv@divisor,f
  3648  0900  0DF8               	rlf	___awdiv@divisor+1,f
  3649  0901  3EFF               	addlw	-1
  3650  0902  1D03               	skipz
  3651  0903  28FE               	goto	u3195
  3652  0904                     l2441:	
  3653  0904  3001               	movlw	1
  3654  0905  00FB               	movwf	??___awdiv
  3655  0906  087B               	movf	??___awdiv,w
  3656  0907  07A0               	addwf	___awdiv@counter,f
  3657  0908                     l2443:	
  3658  0908  1FF8               	btfss	___awdiv@divisor+1,7
  3659  0909  290B               	goto	u3201
  3660  090A  290C               	goto	u3200
  3661  090B                     u3201:	
  3662  090B  28FD               	goto	l2439
  3663  090C                     u3200:	
  3664  090C                     l2445:	
  3665  090C  3001               	movlw	1
  3666  090D                     u3215:	
  3667  090D  1003               	clrc
  3668  090E  0DA2               	rlf	___awdiv@quotient,f
  3669  090F  0DA3               	rlf	___awdiv@quotient+1,f
  3670  0910  3EFF               	addlw	-1
  3671  0911  1D03               	skipz
  3672  0912  290D               	goto	u3215
  3673  0913  0878               	movf	___awdiv@divisor+1,w
  3674  0914  027A               	subwf	___awdiv@dividend+1,w
  3675  0915  1D03               	skipz
  3676  0916  2919               	goto	u3225
  3677  0917  0877               	movf	___awdiv@divisor,w
  3678  0918  0279               	subwf	___awdiv@dividend,w
  3679  0919                     u3225:	
  3680  0919  1C03               	skipc
  3681  091A  291C               	goto	u3221
  3682  091B  291D               	goto	u3220
  3683  091C                     u3221:	
  3684  091C  2924               	goto	l2451
  3685  091D                     u3220:	
  3686  091D                     l2447:	
  3687  091D  0877               	movf	___awdiv@divisor,w
  3688  091E  02F9               	subwf	___awdiv@dividend,f
  3689  091F  0878               	movf	___awdiv@divisor+1,w
  3690  0920  1C03               	skipc
  3691  0921  03FA               	decf	___awdiv@dividend+1,f
  3692  0922  02FA               	subwf	___awdiv@dividend+1,f
  3693  0923                     l2449:	
  3694  0923  1422               	bsf	___awdiv@quotient,0
  3695  0924                     l2451:	
  3696  0924  3001               	movlw	1
  3697  0925                     u3235:	
  3698  0925  1003               	clrc
  3699  0926  0CF8               	rrf	___awdiv@divisor+1,f
  3700  0927  0CF7               	rrf	___awdiv@divisor,f
  3701  0928  3EFF               	addlw	-1
  3702  0929  1D03               	skipz
  3703  092A  2925               	goto	u3235
  3704  092B                     l2453:	
  3705  092B  3001               	movlw	1
  3706  092C  02A0               	subwf	___awdiv@counter,f
  3707  092D  1D03               	btfss	3,2
  3708  092E  2930               	goto	u3241
  3709  092F  2931               	goto	u3240
  3710  0930                     u3241:	
  3711  0930  290C               	goto	l2445
  3712  0931                     u3240:	
  3713  0931                     l2455:	
  3714  0931  0821               	movf	___awdiv@sign,w
  3715  0932  1903               	btfsc	3,2
  3716  0933  2935               	goto	u3251
  3717  0934  2936               	goto	u3250
  3718  0935                     u3251:	
  3719  0935  293B               	goto	l2459
  3720  0936                     u3250:	
  3721  0936                     l2457:	
  3722  0936  09A2               	comf	___awdiv@quotient,f
  3723  0937  09A3               	comf	___awdiv@quotient+1,f
  3724  0938  0AA2               	incf	___awdiv@quotient,f
  3725  0939  1903               	skipnz
  3726  093A  0AA3               	incf	___awdiv@quotient+1,f
  3727  093B                     l2459:	
  3728  093B  0823               	movf	___awdiv@quotient+1,w
  3729  093C  00F8               	movwf	?___awdiv+1
  3730  093D  0822               	movf	___awdiv@quotient,w
  3731  093E  00F7               	movwf	?___awdiv
  3732  093F                     l491:	
  3733  093F  0008               	return
  3734  0940                     __end_of___awdiv:	
  3735                           
  3736                           	psect	text5
  3737  18D5                     __ptext5:	
  3738 ;; *************** function _isdigit *****************
  3739 ;; Defined at:
  3740 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  c               1    wreg     unsigned char 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  c               1    1[COMMON] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;		None               void
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3754 ;;      Params:         0       0       0       0       0
  3755 ;;      Locals:         2       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0
  3757 ;;      Totals:         2       0       0       0       0
  3758 ;;Total ram usage:        2 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_sprintf
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           
  3768                           ;psect for function _isdigit
  3769  18D5                     _isdigit:	
  3770                           
  3771                           ;incstack = 0
  3772                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3773                           ;isdigit@c stored from wreg
  3774  18D5  00F1               	movwf	isdigit@c
  3775  18D6                     l2963:	
  3776  18D6  01F0               	clrf	_isdigit$797
  3777  18D7                     l2965:	
  3778  18D7  303A               	movlw	58
  3779  18D8  0271               	subwf	isdigit@c,w
  3780  18D9  1803               	skipnc
  3781  18DA  28DC               	goto	u4561
  3782  18DB  28DD               	goto	u4560
  3783  18DC                     u4561:	
  3784  18DC  28E5               	goto	l2971
  3785  18DD                     u4560:	
  3786  18DD                     l2967:	
  3787  18DD  3030               	movlw	48
  3788  18DE  0271               	subwf	isdigit@c,w
  3789  18DF  1C03               	skipc
  3790  18E0  28E2               	goto	u4571
  3791  18E1  28E3               	goto	u4570
  3792  18E2                     u4571:	
  3793  18E2  28E5               	goto	l2971
  3794  18E3                     u4570:	
  3795  18E3                     l2969:	
  3796  18E3  01F0               	clrf	_isdigit$797
  3797  18E4  0AF0               	incf	_isdigit$797,f
  3798  18E5                     l2971:	
  3799  18E5  0C70               	rrf	_isdigit$797,w
  3800  18E6                     l819:	
  3801  18E6  0008               	return
  3802  18E7                     __end_of_isdigit:	
  3803                           
  3804                           	psect	text6
  3805  1320                     __ptext6:	
  3806 ;; *************** function _fround *****************
  3807 ;; Defined at:
  3808 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  prec            1    wreg     unsigned char 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  prec            1   49[BANK0 ] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  4   30[BANK0 ] unsigned char 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3822 ;;      Params:         0       4       0       0       0
  3823 ;;      Locals:         0       9       0       0       0
  3824 ;;      Temps:          0       7       0       0       0
  3825 ;;      Totals:         0      20       0       0       0
  3826 ;;Total ram usage:       20 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    2
  3829 ;; This function calls:
  3830 ;;		___flmul
  3831 ;;		___lwdiv
  3832 ;;		___lwmod
  3833 ;; This function is called by:
  3834 ;;		_sprintf
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           
  3839                           ;psect for function _fround
  3840  1320                     _fround:	
  3841                           
  3842                           ;incstack = 0
  3843                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3844                           ;fround@prec stored from wreg
  3845  1320  1283               	bcf	3,5	;RP0=0, select bank0
  3846  1321  1303               	bcf	3,6	;RP1=0, select bank0
  3847  1322  00D1               	movwf	fround@prec
  3848  1323                     l2905:	
  3849                           
  3850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  3851  1323  306E               	movlw	110
  3852  1324  0251               	subwf	fround@prec,w
  3853  1325  1C03               	skipc
  3854  1326  2B28               	goto	u4311
  3855  1327  2B29               	goto	u4310
  3856  1328                     u4311:	
  3857  1328  2C36               	goto	l2913
  3858  1329                     u4310:	
  3859  1329                     l2907:	
  3860                           
  3861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3862  1329  303F               	movlw	63
  3863  132A  00A7               	movwf	___flmul@b+3
  3864  132B  3000               	movlw	0
  3865  132C  00A6               	movwf	___flmul@b+2
  3866  132D  3000               	movlw	0
  3867  132E  00A5               	movwf	___flmul@b+1
  3868  132F  3000               	movlw	0
  3869  1330  00A4               	movwf	___flmul@b
  3870  1331  3064               	movlw	100
  3871  1332  00F6               	movwf	___lwdiv@divisor
  3872  1333  3000               	movlw	0
  3873  1334  00F7               	movwf	___lwdiv@divisor+1
  3874  1335  0851               	movf	fround@prec,w
  3875  1336  00C2               	movwf	??_fround
  3876  1337  01C3               	clrf	??_fround+1
  3877  1338  0842               	movf	??_fround,w
  3878  1339  00F8               	movwf	___lwdiv@dividend
  3879  133A  0843               	movf	??_fround+1,w
  3880  133B  00F9               	movwf	___lwdiv@dividend+1
  3881  133C  160A  158A  21FA  160A  118A  	fcall	___lwdiv
  3882  1341  0876               	movf	?___lwdiv,w
  3883  1342  1283               	bcf	3,5	;RP0=0, select bank0
  3884  1343  1303               	bcf	3,6	;RP1=0, select bank0
  3885  1344  00C4               	movwf	??_fround+2
  3886  1345  3001               	movlw	1
  3887  1346                     u4325:	
  3888  1346  1003               	clrc
  3889  1347  0DC4               	rlf	??_fround+2,f
  3890  1348  3EFF               	addlw	-1
  3891  1349  1D03               	skipz
  3892  134A  2B46               	goto	u4325
  3893  134B  1003               	clrc
  3894  134C  0D44               	rlf	??_fround+2,w
  3895  134D  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3896  134E  0084               	movwf	4
  3897  134F  120A  158A  200A  160A  118A  	fcall	stringdir
  3898  1354  00C5               	movwf	??_fround+3
  3899  1355  120A  158A  200A  160A  118A  	fcall	stringdir
  3900  135A  00C6               	movwf	??_fround+4
  3901  135B  120A  158A  200A  160A  118A  	fcall	stringdir
  3902  1360  00C7               	movwf	??_fround+5
  3903  1361  120A  158A  200A  160A  118A  	fcall	stringdir
  3904  1366  00C8               	movwf	??_fround+6
  3905  1367  0848               	movf	??_fround+6,w
  3906  1368  00AB               	movwf	___flmul@a+3
  3907  1369  0847               	movf	??_fround+5,w
  3908  136A  00AA               	movwf	___flmul@a+2
  3909  136B  0846               	movf	??_fround+4,w
  3910  136C  00A9               	movwf	___flmul@a+1
  3911  136D  0845               	movf	??_fround+3,w
  3912  136E  00A8               	movwf	___flmul@a
  3913  136F  120A  158A  249F  160A  118A  	fcall	___flmul
  3914  1374  1283               	bcf	3,5	;RP0=0, select bank0
  3915  1375  1303               	bcf	3,6	;RP1=0, select bank0
  3916  1376  0827               	movf	?___flmul+3,w
  3917  1377  00D0               	movwf	_fround$974+3
  3918  1378  0826               	movf	?___flmul+2,w
  3919  1379  00CF               	movwf	_fround$974+2
  3920  137A  0825               	movf	?___flmul+1,w
  3921  137B  00CE               	movwf	_fround$974+1
  3922  137C  0824               	movf	?___flmul,w
  3923  137D  00CD               	movwf	_fround$974
  3924                           
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3926  137E  300A               	movlw	10
  3927  137F  00F6               	movwf	___lwdiv@divisor
  3928  1380  3000               	movlw	0
  3929  1381  00F7               	movwf	___lwdiv@divisor+1
  3930  1382  0851               	movf	fround@prec,w
  3931  1383  00C2               	movwf	??_fround
  3932  1384  01C3               	clrf	??_fround+1
  3933  1385  0842               	movf	??_fround,w
  3934  1386  00F2               	movwf	___lwmod@dividend
  3935  1387  0843               	movf	??_fround+1,w
  3936  1388  00F3               	movwf	___lwmod@dividend+1
  3937  1389  3064               	movlw	100
  3938  138A  00F0               	movwf	___lwmod@divisor
  3939  138B  3000               	movlw	0
  3940  138C  00F1               	movwf	___lwmod@divisor+1
  3941  138D  160A  158A  21C0  160A  118A  	fcall	___lwmod
  3942  1392  0871               	movf	?___lwmod+1,w
  3943  1393  00F9               	movwf	___lwdiv@dividend+1
  3944  1394  0870               	movf	?___lwmod,w
  3945  1395  00F8               	movwf	___lwdiv@dividend
  3946  1396  160A  158A  21FA  160A  118A  	fcall	___lwdiv
  3947  139B  0876               	movf	?___lwdiv,w
  3948  139C  1283               	bcf	3,5	;RP0=0, select bank0
  3949  139D  1303               	bcf	3,6	;RP1=0, select bank0
  3950  139E  00C4               	movwf	??_fround+2
  3951  139F  3001               	movlw	1
  3952  13A0                     u4335:	
  3953  13A0  1003               	clrc
  3954  13A1  0DC4               	rlf	??_fround+2,f
  3955  13A2  3EFF               	addlw	-1
  3956  13A3  1D03               	skipz
  3957  13A4  2BA0               	goto	u4335
  3958  13A5  1003               	clrc
  3959  13A6  0D44               	rlf	??_fround+2,w
  3960  13A7  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3961  13A8  0084               	movwf	4
  3962  13A9  120A  158A  200A  160A  118A  	fcall	stringdir
  3963  13AE  00C5               	movwf	??_fround+3
  3964  13AF  120A  158A  200A  160A  118A  	fcall	stringdir
  3965  13B4  00C6               	movwf	??_fround+4
  3966  13B5  120A  158A  200A  160A  118A  	fcall	stringdir
  3967  13BA  00C7               	movwf	??_fround+5
  3968  13BB  120A  158A  200A  160A  118A  	fcall	stringdir
  3969  13C0  00C8               	movwf	??_fround+6
  3970  13C1  0848               	movf	??_fround+6,w
  3971  13C2  00A7               	movwf	___flmul@b+3
  3972  13C3  0847               	movf	??_fround+5,w
  3973  13C4  00A6               	movwf	___flmul@b+2
  3974  13C5  0846               	movf	??_fround+4,w
  3975  13C6  00A5               	movwf	___flmul@b+1
  3976  13C7  0845               	movf	??_fround+3,w
  3977  13C8  00A4               	movwf	___flmul@b
  3978  13C9  0850               	movf	_fround$974+3,w
  3979  13CA  00AB               	movwf	___flmul@a+3
  3980  13CB  084F               	movf	_fround$974+2,w
  3981  13CC  00AA               	movwf	___flmul@a+2
  3982  13CD  084E               	movf	_fround$974+1,w
  3983  13CE  00A9               	movwf	___flmul@a+1
  3984  13CF  084D               	movf	_fround$974,w
  3985  13D0  00A8               	movwf	___flmul@a
  3986  13D1  120A  158A  249F  160A  118A  	fcall	___flmul
  3987  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  3988  13D7  1303               	bcf	3,6	;RP1=0, select bank0
  3989  13D8  0827               	movf	?___flmul+3,w
  3990  13D9  00CC               	movwf	_fround$975+3
  3991  13DA  0826               	movf	?___flmul+2,w
  3992  13DB  00CB               	movwf	_fround$975+2
  3993  13DC  0825               	movf	?___flmul+1,w
  3994  13DD  00CA               	movwf	_fround$975+1
  3995  13DE  0824               	movf	?___flmul,w
  3996  13DF  00C9               	movwf	_fround$975
  3997                           
  3998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3999  13E0  300A               	movlw	10
  4000  13E1  00F0               	movwf	___lwmod@divisor
  4001  13E2  3000               	movlw	0
  4002  13E3  00F1               	movwf	___lwmod@divisor+1
  4003  13E4  0851               	movf	fround@prec,w
  4004  13E5  00C2               	movwf	??_fround
  4005  13E6  01C3               	clrf	??_fround+1
  4006  13E7  0842               	movf	??_fround,w
  4007  13E8  00F2               	movwf	___lwmod@dividend
  4008  13E9  0843               	movf	??_fround+1,w
  4009  13EA  00F3               	movwf	___lwmod@dividend+1
  4010  13EB  160A  158A  21C0  160A  118A  	fcall	___lwmod
  4011  13F0  0870               	movf	?___lwmod,w
  4012  13F1  1283               	bcf	3,5	;RP0=0, select bank0
  4013  13F2  1303               	bcf	3,6	;RP1=0, select bank0
  4014  13F3  00C4               	movwf	??_fround+2
  4015  13F4  3001               	movlw	1
  4016  13F5                     u4345:	
  4017  13F5  1003               	clrc
  4018  13F6  0DC4               	rlf	??_fround+2,f
  4019  13F7  3EFF               	addlw	-1
  4020  13F8  1D03               	skipz
  4021  13F9  2BF5               	goto	u4345
  4022  13FA  1003               	clrc
  4023  13FB  0D44               	rlf	??_fround+2,w
  4024  13FC  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4025  13FD  0084               	movwf	4
  4026  13FE  120A  158A  200A  160A  118A  	fcall	stringdir
  4027  1403  00C5               	movwf	??_fround+3
  4028  1404  120A  158A  200A  160A  118A  	fcall	stringdir
  4029  1409  00C6               	movwf	??_fround+4
  4030  140A  120A  158A  200A  160A  118A  	fcall	stringdir
  4031  140F  00C7               	movwf	??_fround+5
  4032  1410  120A  158A  200A  160A  118A  	fcall	stringdir
  4033  1415  00C8               	movwf	??_fround+6
  4034  1416  0848               	movf	??_fround+6,w
  4035  1417  00A7               	movwf	___flmul@b+3
  4036  1418  0847               	movf	??_fround+5,w
  4037  1419  00A6               	movwf	___flmul@b+2
  4038  141A  0846               	movf	??_fround+4,w
  4039  141B  00A5               	movwf	___flmul@b+1
  4040  141C  0845               	movf	??_fround+3,w
  4041  141D  00A4               	movwf	___flmul@b
  4042  141E  084C               	movf	_fround$975+3,w
  4043  141F  00AB               	movwf	___flmul@a+3
  4044  1420  084B               	movf	_fround$975+2,w
  4045  1421  00AA               	movwf	___flmul@a+2
  4046  1422  084A               	movf	_fround$975+1,w
  4047  1423  00A9               	movwf	___flmul@a+1
  4048  1424  0849               	movf	_fround$975,w
  4049  1425  00A8               	movwf	___flmul@a
  4050  1426  120A  158A  249F  160A  118A  	fcall	___flmul
  4051  142B  1283               	bcf	3,5	;RP0=0, select bank0
  4052  142C  1303               	bcf	3,6	;RP1=0, select bank0
  4053  142D  0827               	movf	?___flmul+3,w
  4054  142E  00C1               	movwf	?_fround+3
  4055  142F  0826               	movf	?___flmul+2,w
  4056  1430  00C0               	movwf	?_fround+2
  4057  1431  0825               	movf	?___flmul+1,w
  4058  1432  00BF               	movwf	?_fround+1
  4059  1433  0824               	movf	?___flmul,w
  4060  1434  00BE               	movwf	?_fround
  4061  1435  2D2A               	goto	l226
  4062  1436                     l2913:	
  4063  1436  300B               	movlw	11
  4064  1437  0251               	subwf	fround@prec,w
  4065  1438  1C03               	skipc
  4066  1439  2C3B               	goto	u4351
  4067  143A  2C3C               	goto	u4350
  4068  143B                     u4351:	
  4069  143B  2CE7               	goto	l2919
  4070  143C                     u4350:	
  4071  143C                     l2915:	
  4072                           
  4073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4074  143C  303F               	movlw	63
  4075  143D  00A7               	movwf	___flmul@b+3
  4076  143E  3000               	movlw	0
  4077  143F  00A6               	movwf	___flmul@b+2
  4078  1440  3000               	movlw	0
  4079  1441  00A5               	movwf	___flmul@b+1
  4080  1442  3000               	movlw	0
  4081  1443  00A4               	movwf	___flmul@b
  4082  1444  300A               	movlw	10
  4083  1445  00F6               	movwf	___lwdiv@divisor
  4084  1446  3000               	movlw	0
  4085  1447  00F7               	movwf	___lwdiv@divisor+1
  4086  1448  0851               	movf	fround@prec,w
  4087  1449  00C2               	movwf	??_fround
  4088  144A  01C3               	clrf	??_fround+1
  4089  144B  0842               	movf	??_fround,w
  4090  144C  00F8               	movwf	___lwdiv@dividend
  4091  144D  0843               	movf	??_fround+1,w
  4092  144E  00F9               	movwf	___lwdiv@dividend+1
  4093  144F  160A  158A  21FA  160A  118A  	fcall	___lwdiv
  4094  1454  0876               	movf	?___lwdiv,w
  4095  1455  1283               	bcf	3,5	;RP0=0, select bank0
  4096  1456  1303               	bcf	3,6	;RP1=0, select bank0
  4097  1457  00C4               	movwf	??_fround+2
  4098  1458  3001               	movlw	1
  4099  1459                     u4365:	
  4100  1459  1003               	clrc
  4101  145A  0DC4               	rlf	??_fround+2,f
  4102  145B  3EFF               	addlw	-1
  4103  145C  1D03               	skipz
  4104  145D  2C59               	goto	u4365
  4105  145E  1003               	clrc
  4106  145F  0D44               	rlf	??_fround+2,w
  4107  1460  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4108  1461  0084               	movwf	4
  4109  1462  120A  158A  200A  160A  118A  	fcall	stringdir
  4110  1467  00C5               	movwf	??_fround+3
  4111  1468  120A  158A  200A  160A  118A  	fcall	stringdir
  4112  146D  00C6               	movwf	??_fround+4
  4113  146E  120A  158A  200A  160A  118A  	fcall	stringdir
  4114  1473  00C7               	movwf	??_fround+5
  4115  1474  120A  158A  200A  160A  118A  	fcall	stringdir
  4116  1479  00C8               	movwf	??_fround+6
  4117  147A  0848               	movf	??_fround+6,w
  4118  147B  00AB               	movwf	___flmul@a+3
  4119  147C  0847               	movf	??_fround+5,w
  4120  147D  00AA               	movwf	___flmul@a+2
  4121  147E  0846               	movf	??_fround+4,w
  4122  147F  00A9               	movwf	___flmul@a+1
  4123  1480  0845               	movf	??_fround+3,w
  4124  1481  00A8               	movwf	___flmul@a
  4125  1482  120A  158A  249F  160A  118A  	fcall	___flmul
  4126  1487  1283               	bcf	3,5	;RP0=0, select bank0
  4127  1488  1303               	bcf	3,6	;RP1=0, select bank0
  4128  1489  0827               	movf	?___flmul+3,w
  4129  148A  00D0               	movwf	_fround$974+3
  4130  148B  0826               	movf	?___flmul+2,w
  4131  148C  00CF               	movwf	_fround$974+2
  4132  148D  0825               	movf	?___flmul+1,w
  4133  148E  00CE               	movwf	_fround$974+1
  4134  148F  0824               	movf	?___flmul,w
  4135  1490  00CD               	movwf	_fround$974
  4136                           
  4137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4138  1491  300A               	movlw	10
  4139  1492  00F0               	movwf	___lwmod@divisor
  4140  1493  3000               	movlw	0
  4141  1494  00F1               	movwf	___lwmod@divisor+1
  4142  1495  0851               	movf	fround@prec,w
  4143  1496  00C2               	movwf	??_fround
  4144  1497  01C3               	clrf	??_fround+1
  4145  1498  0842               	movf	??_fround,w
  4146  1499  00F2               	movwf	___lwmod@dividend
  4147  149A  0843               	movf	??_fround+1,w
  4148  149B  00F3               	movwf	___lwmod@dividend+1
  4149  149C  160A  158A  21C0  160A  118A  	fcall	___lwmod
  4150  14A1  0870               	movf	?___lwmod,w
  4151  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  4152  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  4153  14A4  00C4               	movwf	??_fround+2
  4154  14A5  3001               	movlw	1
  4155  14A6                     u4375:	
  4156  14A6  1003               	clrc
  4157  14A7  0DC4               	rlf	??_fround+2,f
  4158  14A8  3EFF               	addlw	-1
  4159  14A9  1D03               	skipz
  4160  14AA  2CA6               	goto	u4375
  4161  14AB  1003               	clrc
  4162  14AC  0D44               	rlf	??_fround+2,w
  4163  14AD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4164  14AE  0084               	movwf	4
  4165  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  4166  14B4  00C5               	movwf	??_fround+3
  4167  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  4168  14BA  00C6               	movwf	??_fround+4
  4169  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  4170  14C0  00C7               	movwf	??_fround+5
  4171  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  4172  14C6  00C8               	movwf	??_fround+6
  4173  14C7  0848               	movf	??_fround+6,w
  4174  14C8  00A7               	movwf	___flmul@b+3
  4175  14C9  0847               	movf	??_fround+5,w
  4176  14CA  00A6               	movwf	___flmul@b+2
  4177  14CB  0846               	movf	??_fround+4,w
  4178  14CC  00A5               	movwf	___flmul@b+1
  4179  14CD  0845               	movf	??_fround+3,w
  4180  14CE  00A4               	movwf	___flmul@b
  4181  14CF  0850               	movf	_fround$974+3,w
  4182  14D0  00AB               	movwf	___flmul@a+3
  4183  14D1  084F               	movf	_fround$974+2,w
  4184  14D2  00AA               	movwf	___flmul@a+2
  4185  14D3  084E               	movf	_fround$974+1,w
  4186  14D4  00A9               	movwf	___flmul@a+1
  4187  14D5  084D               	movf	_fround$974,w
  4188  14D6  00A8               	movwf	___flmul@a
  4189  14D7  120A  158A  249F  160A  118A  	fcall	___flmul
  4190  14DC  1283               	bcf	3,5	;RP0=0, select bank0
  4191  14DD  1303               	bcf	3,6	;RP1=0, select bank0
  4192  14DE  0827               	movf	?___flmul+3,w
  4193  14DF  00C1               	movwf	?_fround+3
  4194  14E0  0826               	movf	?___flmul+2,w
  4195  14E1  00C0               	movwf	?_fround+2
  4196  14E2  0825               	movf	?___flmul+1,w
  4197  14E3  00BF               	movwf	?_fround+1
  4198  14E4  0824               	movf	?___flmul,w
  4199  14E5  00BE               	movwf	?_fround
  4200  14E6  2D2A               	goto	l226
  4201  14E7                     l2919:	
  4202                           
  4203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4204  14E7  303F               	movlw	63
  4205  14E8  00A7               	movwf	___flmul@b+3
  4206  14E9  3000               	movlw	0
  4207  14EA  00A6               	movwf	___flmul@b+2
  4208  14EB  3000               	movlw	0
  4209  14EC  00A5               	movwf	___flmul@b+1
  4210  14ED  3000               	movlw	0
  4211  14EE  00A4               	movwf	___flmul@b
  4212  14EF  0851               	movf	fround@prec,w
  4213  14F0  00C2               	movwf	??_fround
  4214  14F1  3001               	movlw	1
  4215  14F2                     u4385:	
  4216  14F2  1003               	clrc
  4217  14F3  0DC2               	rlf	??_fround,f
  4218  14F4  3EFF               	addlw	-1
  4219  14F5  1D03               	skipz
  4220  14F6  2CF2               	goto	u4385
  4221  14F7  1003               	clrc
  4222  14F8  0D42               	rlf	??_fround,w
  4223  14F9  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4224  14FA  0084               	movwf	4
  4225  14FB  120A  158A  200A  160A  118A  	fcall	stringdir
  4226  1500  00C3               	movwf	??_fround+1
  4227  1501  120A  158A  200A  160A  118A  	fcall	stringdir
  4228  1506  00C4               	movwf	??_fround+2
  4229  1507  120A  158A  200A  160A  118A  	fcall	stringdir
  4230  150C  00C5               	movwf	??_fround+3
  4231  150D  120A  158A  200A  160A  118A  	fcall	stringdir
  4232  1512  00C6               	movwf	??_fround+4
  4233  1513  0846               	movf	??_fround+4,w
  4234  1514  00AB               	movwf	___flmul@a+3
  4235  1515  0845               	movf	??_fround+3,w
  4236  1516  00AA               	movwf	___flmul@a+2
  4237  1517  0844               	movf	??_fround+2,w
  4238  1518  00A9               	movwf	___flmul@a+1
  4239  1519  0843               	movf	??_fround+1,w
  4240  151A  00A8               	movwf	___flmul@a
  4241  151B  120A  158A  249F  160A  118A  	fcall	___flmul
  4242  1520  1283               	bcf	3,5	;RP0=0, select bank0
  4243  1521  1303               	bcf	3,6	;RP1=0, select bank0
  4244  1522  0827               	movf	?___flmul+3,w
  4245  1523  00C1               	movwf	?_fround+3
  4246  1524  0826               	movf	?___flmul+2,w
  4247  1525  00C0               	movwf	?_fround+2
  4248  1526  0825               	movf	?___flmul+1,w
  4249  1527  00BF               	movwf	?_fround+1
  4250  1528  0824               	movf	?___flmul,w
  4251  1529  00BE               	movwf	?_fround
  4252  152A                     l226:	
  4253  152A  0008               	return
  4254  152B                     __end_of_fround:	
  4255                           
  4256                           	psect	text7
  4257  19C0                     __ptext7:	
  4258 ;; *************** function ___lwmod *****************
  4259 ;; Defined at:
  4260 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  divisor         2    0[COMMON] unsigned int 
  4263 ;;  dividend        2    2[COMMON] unsigned int 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  counter         1    5[COMMON] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2    0[COMMON] unsigned int 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4275 ;;      Params:         4       0       0       0       0
  4276 ;;      Locals:         1       0       0       0       0
  4277 ;;      Temps:          1       0       0       0       0
  4278 ;;      Totals:         6       0       0       0       0
  4279 ;;Total ram usage:        6 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_fround
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           
  4289                           ;psect for function ___lwmod
  4290  19C0                     ___lwmod:	
  4291  19C0                     l2527:	
  4292                           ;incstack = 0
  4293                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4294                           
  4295  19C0  0870               	movf	___lwmod@divisor,w
  4296  19C1  0471               	iorwf	___lwmod@divisor+1,w
  4297  19C2  1903               	btfsc	3,2
  4298  19C3  29C5               	goto	u3421
  4299  19C4  29C6               	goto	u3420
  4300  19C5                     u3421:	
  4301  19C5  29F5               	goto	l2545
  4302  19C6                     u3420:	
  4303  19C6                     l2529:	
  4304  19C6  01F5               	clrf	___lwmod@counter
  4305  19C7  0AF5               	incf	___lwmod@counter,f
  4306  19C8  29D4               	goto	l2535
  4307  19C9                     l2531:	
  4308  19C9  3001               	movlw	1
  4309  19CA                     u3435:	
  4310  19CA  1003               	clrc
  4311  19CB  0DF0               	rlf	___lwmod@divisor,f
  4312  19CC  0DF1               	rlf	___lwmod@divisor+1,f
  4313  19CD  3EFF               	addlw	-1
  4314  19CE  1D03               	skipz
  4315  19CF  29CA               	goto	u3435
  4316  19D0                     l2533:	
  4317  19D0  3001               	movlw	1
  4318  19D1  00F4               	movwf	??___lwmod
  4319  19D2  0874               	movf	??___lwmod,w
  4320  19D3  07F5               	addwf	___lwmod@counter,f
  4321  19D4                     l2535:	
  4322  19D4  1FF1               	btfss	___lwmod@divisor+1,7
  4323  19D5  29D7               	goto	u3441
  4324  19D6  29D8               	goto	u3440
  4325  19D7                     u3441:	
  4326  19D7  29C9               	goto	l2531
  4327  19D8                     u3440:	
  4328  19D8                     l2537:	
  4329  19D8  0871               	movf	___lwmod@divisor+1,w
  4330  19D9  0273               	subwf	___lwmod@dividend+1,w
  4331  19DA  1D03               	skipz
  4332  19DB  29DE               	goto	u3455
  4333  19DC  0870               	movf	___lwmod@divisor,w
  4334  19DD  0272               	subwf	___lwmod@dividend,w
  4335  19DE                     u3455:	
  4336  19DE  1C03               	skipc
  4337  19DF  29E1               	goto	u3451
  4338  19E0  29E2               	goto	u3450
  4339  19E1                     u3451:	
  4340  19E1  29E8               	goto	l2541
  4341  19E2                     u3450:	
  4342  19E2                     l2539:	
  4343  19E2  0870               	movf	___lwmod@divisor,w
  4344  19E3  02F2               	subwf	___lwmod@dividend,f
  4345  19E4  0871               	movf	___lwmod@divisor+1,w
  4346  19E5  1C03               	skipc
  4347  19E6  03F3               	decf	___lwmod@dividend+1,f
  4348  19E7  02F3               	subwf	___lwmod@dividend+1,f
  4349  19E8                     l2541:	
  4350  19E8  3001               	movlw	1
  4351  19E9                     u3465:	
  4352  19E9  1003               	clrc
  4353  19EA  0CF1               	rrf	___lwmod@divisor+1,f
  4354  19EB  0CF0               	rrf	___lwmod@divisor,f
  4355  19EC  3EFF               	addlw	-1
  4356  19ED  1D03               	skipz
  4357  19EE  29E9               	goto	u3465
  4358  19EF                     l2543:	
  4359  19EF  3001               	movlw	1
  4360  19F0  02F5               	subwf	___lwmod@counter,f
  4361  19F1  1D03               	btfss	3,2
  4362  19F2  29F4               	goto	u3471
  4363  19F3  29F5               	goto	u3470
  4364  19F4                     u3471:	
  4365  19F4  29D8               	goto	l2537
  4366  19F5                     u3470:	
  4367  19F5                     l2545:	
  4368  19F5  0873               	movf	___lwmod@dividend+1,w
  4369  19F6  00F1               	movwf	?___lwmod+1
  4370  19F7  0872               	movf	___lwmod@dividend,w
  4371  19F8  00F0               	movwf	?___lwmod
  4372  19F9                     l654:	
  4373  19F9  0008               	return
  4374  19FA                     __end_of___lwmod:	
  4375                           
  4376                           	psect	text8
  4377  19FA                     __ptext8:	
  4378 ;; *************** function ___lwdiv *****************
  4379 ;; Defined at:
  4380 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  divisor         2    6[COMMON] unsigned int 
  4383 ;;  dividend        2    8[COMMON] unsigned int 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  quotient        2   11[COMMON] unsigned int 
  4386 ;;  counter         1   13[COMMON] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  2    6[COMMON] unsigned int 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         4       0       0       0       0
  4397 ;;      Locals:         3       0       0       0       0
  4398 ;;      Temps:          1       0       0       0       0
  4399 ;;      Totals:         8       0       0       0       0
  4400 ;;Total ram usage:        8 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_fround
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           
  4410                           ;psect for function ___lwdiv
  4411  19FA                     ___lwdiv:	
  4412  19FA                     l2501:	
  4413                           ;incstack = 0
  4414                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4415                           
  4416  19FA  01FB               	clrf	___lwdiv@quotient
  4417  19FB  01FC               	clrf	___lwdiv@quotient+1
  4418  19FC                     l2503:	
  4419  19FC  0876               	movf	___lwdiv@divisor,w
  4420  19FD  0477               	iorwf	___lwdiv@divisor+1,w
  4421  19FE  1903               	btfsc	3,2
  4422  19FF  2A01               	goto	u3351
  4423  1A00  2A02               	goto	u3350
  4424  1A01                     u3351:	
  4425  1A01  2A39               	goto	l2523
  4426  1A02                     u3350:	
  4427  1A02                     l2505:	
  4428  1A02  01FD               	clrf	___lwdiv@counter
  4429  1A03  0AFD               	incf	___lwdiv@counter,f
  4430  1A04  2A10               	goto	l2511
  4431  1A05                     l2507:	
  4432  1A05  3001               	movlw	1
  4433  1A06                     u3365:	
  4434  1A06  1003               	clrc
  4435  1A07  0DF6               	rlf	___lwdiv@divisor,f
  4436  1A08  0DF7               	rlf	___lwdiv@divisor+1,f
  4437  1A09  3EFF               	addlw	-1
  4438  1A0A  1D03               	skipz
  4439  1A0B  2A06               	goto	u3365
  4440  1A0C                     l2509:	
  4441  1A0C  3001               	movlw	1
  4442  1A0D  00FA               	movwf	??___lwdiv
  4443  1A0E  087A               	movf	??___lwdiv,w
  4444  1A0F  07FD               	addwf	___lwdiv@counter,f
  4445  1A10                     l2511:	
  4446  1A10  1FF7               	btfss	___lwdiv@divisor+1,7
  4447  1A11  2A13               	goto	u3371
  4448  1A12  2A14               	goto	u3370
  4449  1A13                     u3371:	
  4450  1A13  2A05               	goto	l2507
  4451  1A14                     u3370:	
  4452  1A14                     l2513:	
  4453  1A14  3001               	movlw	1
  4454  1A15                     u3385:	
  4455  1A15  1003               	clrc
  4456  1A16  0DFB               	rlf	___lwdiv@quotient,f
  4457  1A17  0DFC               	rlf	___lwdiv@quotient+1,f
  4458  1A18  3EFF               	addlw	-1
  4459  1A19  1D03               	skipz
  4460  1A1A  2A15               	goto	u3385
  4461  1A1B  0877               	movf	___lwdiv@divisor+1,w
  4462  1A1C  0279               	subwf	___lwdiv@dividend+1,w
  4463  1A1D  1D03               	skipz
  4464  1A1E  2A21               	goto	u3395
  4465  1A1F  0876               	movf	___lwdiv@divisor,w
  4466  1A20  0278               	subwf	___lwdiv@dividend,w
  4467  1A21                     u3395:	
  4468  1A21  1C03               	skipc
  4469  1A22  2A24               	goto	u3391
  4470  1A23  2A25               	goto	u3390
  4471  1A24                     u3391:	
  4472  1A24  2A2C               	goto	l2519
  4473  1A25                     u3390:	
  4474  1A25                     l2515:	
  4475  1A25  0876               	movf	___lwdiv@divisor,w
  4476  1A26  02F8               	subwf	___lwdiv@dividend,f
  4477  1A27  0877               	movf	___lwdiv@divisor+1,w
  4478  1A28  1C03               	skipc
  4479  1A29  03F9               	decf	___lwdiv@dividend+1,f
  4480  1A2A  02F9               	subwf	___lwdiv@dividend+1,f
  4481  1A2B                     l2517:	
  4482  1A2B  147B               	bsf	___lwdiv@quotient,0
  4483  1A2C                     l2519:	
  4484  1A2C  3001               	movlw	1
  4485  1A2D                     u3405:	
  4486  1A2D  1003               	clrc
  4487  1A2E  0CF7               	rrf	___lwdiv@divisor+1,f
  4488  1A2F  0CF6               	rrf	___lwdiv@divisor,f
  4489  1A30  3EFF               	addlw	-1
  4490  1A31  1D03               	skipz
  4491  1A32  2A2D               	goto	u3405
  4492  1A33                     l2521:	
  4493  1A33  3001               	movlw	1
  4494  1A34  02FD               	subwf	___lwdiv@counter,f
  4495  1A35  1D03               	btfss	3,2
  4496  1A36  2A38               	goto	u3411
  4497  1A37  2A39               	goto	u3410
  4498  1A38                     u3411:	
  4499  1A38  2A14               	goto	l2513
  4500  1A39                     u3410:	
  4501  1A39                     l2523:	
  4502  1A39  087C               	movf	___lwdiv@quotient+1,w
  4503  1A3A  00F7               	movwf	?___lwdiv+1
  4504  1A3B  087B               	movf	___lwdiv@quotient,w
  4505  1A3C  00F6               	movwf	?___lwdiv
  4506  1A3D                     l644:	
  4507  1A3D  0008               	return
  4508  1A3E                     __end_of___lwdiv:	
  4509                           
  4510                           	psect	text9
  4511  0C9F                     __ptext9:	
  4512 ;; *************** function ___flmul *****************
  4513 ;; Defined at:
  4514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  b               4    4[BANK0 ] unsigned int 
  4517 ;;  a               4    8[BANK0 ] unsigned int 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  prod            4   24[BANK0 ] struct .
  4520 ;;  grs             4   18[BANK0 ] unsigned long 
  4521 ;;  temp            2   28[BANK0 ] struct .
  4522 ;;  bexp            1   23[BANK0 ] unsigned char 
  4523 ;;  aexp            1   22[BANK0 ] unsigned char 
  4524 ;;  sign            1   17[BANK0 ] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  4    4[BANK0 ] unsigned char 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4534 ;;      Params:         0       8       0       0       0
  4535 ;;      Locals:         0      13       0       0       0
  4536 ;;      Temps:          0       5       0       0       0
  4537 ;;      Totals:         0      26       0       0       0
  4538 ;;Total ram usage:       26 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    1
  4541 ;; This function calls:
  4542 ;;		__Umul8_16
  4543 ;; This function is called by:
  4544 ;;		_main
  4545 ;;		_fround
  4546 ;;		_scale
  4547 ;;		_sprintf
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function ___flmul
  4553  0C9F                     ___flmul:	
  4554  0C9F                     l2743:	
  4555                           ;incstack = 0
  4556                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4557                           
  4558  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4559  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4560  0CA1  0827               	movf	___flmul@b+3,w
  4561  0CA2  3980               	andlw	128
  4562  0CA3  00AC               	movwf	??___flmul
  4563  0CA4  082C               	movf	??___flmul,w
  4564  0CA5  00B1               	movwf	___flmul@sign
  4565  0CA6                     l2745:	
  4566  0CA6  0827               	movf	___flmul@b+3,w
  4567  0CA7  00AC               	movwf	??___flmul
  4568  0CA8  072C               	addwf	??___flmul,w
  4569  0CA9  00AD               	movwf	??___flmul+1
  4570  0CAA  082D               	movf	??___flmul+1,w
  4571  0CAB  00B7               	movwf	___flmul@bexp
  4572  0CAC                     l2747:	
  4573  0CAC  1FA6               	btfss	___flmul@b+2,7
  4574  0CAD  2CAF               	goto	u3941
  4575  0CAE  2CB0               	goto	u3940
  4576  0CAF                     u3941:	
  4577  0CAF  2CB1               	goto	l2751
  4578  0CB0                     u3940:	
  4579  0CB0                     l2749:	
  4580  0CB0  1437               	bsf	___flmul@bexp,0
  4581  0CB1                     l2751:	
  4582  0CB1  0837               	movf	___flmul@bexp,w
  4583  0CB2  1903               	btfsc	3,2
  4584  0CB3  2CB5               	goto	u3951
  4585  0CB4  2CB6               	goto	u3950
  4586  0CB5                     u3951:	
  4587  0CB5  2CC5               	goto	l2759
  4588  0CB6                     u3950:	
  4589  0CB6                     l2753:	
  4590  0CB6  0A37               	incf	___flmul@bexp,w
  4591  0CB7  1D03               	btfss	3,2
  4592  0CB8  2CBA               	goto	u3961
  4593  0CB9  2CBB               	goto	u3960
  4594  0CBA                     u3961:	
  4595  0CBA  2CC3               	goto	l2757
  4596  0CBB                     u3960:	
  4597  0CBB                     l2755:	
  4598  0CBB  3000               	movlw	0
  4599  0CBC  00A7               	movwf	___flmul@b+3
  4600  0CBD  3000               	movlw	0
  4601  0CBE  00A6               	movwf	___flmul@b+2
  4602  0CBF  3000               	movlw	0
  4603  0CC0  00A5               	movwf	___flmul@b+1
  4604  0CC1  3000               	movlw	0
  4605  0CC2  00A4               	movwf	___flmul@b
  4606  0CC3                     l2757:	
  4607  0CC3  17A6               	bsf	___flmul@b+2,7
  4608  0CC4  2CCD               	goto	l2761
  4609  0CC5                     l2759:	
  4610  0CC5  3000               	movlw	0
  4611  0CC6  00A7               	movwf	___flmul@b+3
  4612  0CC7  3000               	movlw	0
  4613  0CC8  00A6               	movwf	___flmul@b+2
  4614  0CC9  3000               	movlw	0
  4615  0CCA  00A5               	movwf	___flmul@b+1
  4616  0CCB  3000               	movlw	0
  4617  0CCC  00A4               	movwf	___flmul@b
  4618  0CCD                     l2761:	
  4619  0CCD  082B               	movf	___flmul@a+3,w
  4620  0CCE  3980               	andlw	128
  4621  0CCF  00AC               	movwf	??___flmul
  4622  0CD0  082C               	movf	??___flmul,w
  4623  0CD1  06B1               	xorwf	___flmul@sign,f
  4624  0CD2                     l2763:	
  4625  0CD2  082B               	movf	___flmul@a+3,w
  4626  0CD3  00AC               	movwf	??___flmul
  4627  0CD4  072C               	addwf	??___flmul,w
  4628  0CD5  00AD               	movwf	??___flmul+1
  4629  0CD6  082D               	movf	??___flmul+1,w
  4630  0CD7  00B6               	movwf	___flmul@aexp
  4631  0CD8                     l2765:	
  4632  0CD8  1FAA               	btfss	___flmul@a+2,7
  4633  0CD9  2CDB               	goto	u3971
  4634  0CDA  2CDC               	goto	u3970
  4635  0CDB                     u3971:	
  4636  0CDB  2CDD               	goto	l2769
  4637  0CDC                     u3970:	
  4638  0CDC                     l2767:	
  4639  0CDC  1436               	bsf	___flmul@aexp,0
  4640  0CDD                     l2769:	
  4641  0CDD  0836               	movf	___flmul@aexp,w
  4642  0CDE  1903               	btfsc	3,2
  4643  0CDF  2CE1               	goto	u3981
  4644  0CE0  2CE2               	goto	u3980
  4645  0CE1                     u3981:	
  4646  0CE1  2CF1               	goto	l2777
  4647  0CE2                     u3980:	
  4648  0CE2                     l2771:	
  4649  0CE2  0A36               	incf	___flmul@aexp,w
  4650  0CE3  1D03               	btfss	3,2
  4651  0CE4  2CE6               	goto	u3991
  4652  0CE5  2CE7               	goto	u3990
  4653  0CE6                     u3991:	
  4654  0CE6  2CEF               	goto	l2775
  4655  0CE7                     u3990:	
  4656  0CE7                     l2773:	
  4657  0CE7  3000               	movlw	0
  4658  0CE8  00AB               	movwf	___flmul@a+3
  4659  0CE9  3000               	movlw	0
  4660  0CEA  00AA               	movwf	___flmul@a+2
  4661  0CEB  3000               	movlw	0
  4662  0CEC  00A9               	movwf	___flmul@a+1
  4663  0CED  3000               	movlw	0
  4664  0CEE  00A8               	movwf	___flmul@a
  4665  0CEF                     l2775:	
  4666  0CEF  17AA               	bsf	___flmul@a+2,7
  4667  0CF0  2CF9               	goto	l2779
  4668  0CF1                     l2777:	
  4669  0CF1  3000               	movlw	0
  4670  0CF2  00AB               	movwf	___flmul@a+3
  4671  0CF3  3000               	movlw	0
  4672  0CF4  00AA               	movwf	___flmul@a+2
  4673  0CF5  3000               	movlw	0
  4674  0CF6  00A9               	movwf	___flmul@a+1
  4675  0CF7  3000               	movlw	0
  4676  0CF8  00A8               	movwf	___flmul@a
  4677  0CF9                     l2779:	
  4678  0CF9  0836               	movf	___flmul@aexp,w
  4679  0CFA  1903               	btfsc	3,2
  4680  0CFB  2CFD               	goto	u4001
  4681  0CFC  2CFE               	goto	u4000
  4682  0CFD                     u4001:	
  4683  0CFD  2D03               	goto	l2783
  4684  0CFE                     u4000:	
  4685  0CFE                     l2781:	
  4686  0CFE  0837               	movf	___flmul@bexp,w
  4687  0CFF  1D03               	btfss	3,2
  4688  0D00  2D02               	goto	u4011
  4689  0D01  2D03               	goto	u4010
  4690  0D02                     u4011:	
  4691  0D02  2D0C               	goto	l2787
  4692  0D03                     u4010:	
  4693  0D03                     l2783:	
  4694  0D03  3000               	movlw	0
  4695  0D04  00A7               	movwf	?___flmul+3
  4696  0D05  3000               	movlw	0
  4697  0D06  00A6               	movwf	?___flmul+2
  4698  0D07  3000               	movlw	0
  4699  0D08  00A5               	movwf	?___flmul+1
  4700  0D09  3000               	movlw	0
  4701  0D0A  00A4               	movwf	?___flmul
  4702  0D0B  2FFF               	goto	l761
  4703  0D0C                     l2787:	
  4704  0D0C  0824               	movf	___flmul@b,w
  4705  0D0D  00AC               	movwf	??___flmul
  4706  0D0E  082C               	movf	??___flmul,w
  4707  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4708  0D10  082A               	movf	___flmul@a+2,w
  4709  0D11  160A  158A  2199  120A  158A  	fcall	__Umul8_16
  4710  0D16  0871               	movf	?__Umul8_16+1,w
  4711  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4712  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4713  0D19  00BD               	movwf	___flmul@temp+1
  4714  0D1A  0870               	movf	?__Umul8_16,w
  4715  0D1B  00BC               	movwf	___flmul@temp
  4716  0D1C                     l2789:	
  4717  0D1C  083C               	movf	___flmul@temp,w
  4718  0D1D  00AC               	movwf	??___flmul
  4719  0D1E  01AD               	clrf	??___flmul+1
  4720  0D1F  01AE               	clrf	??___flmul+2
  4721  0D20  01AF               	clrf	??___flmul+3
  4722  0D21  082F               	movf	??___flmul+3,w
  4723  0D22  00B5               	movwf	___flmul@grs+3
  4724  0D23  082E               	movf	??___flmul+2,w
  4725  0D24  00B4               	movwf	___flmul@grs+2
  4726  0D25  082D               	movf	??___flmul+1,w
  4727  0D26  00B3               	movwf	___flmul@grs+1
  4728  0D27  082C               	movf	??___flmul,w
  4729  0D28  00B2               	movwf	___flmul@grs
  4730  0D29                     l2791:	
  4731  0D29  083D               	movf	___flmul@temp+1,w
  4732  0D2A  00AC               	movwf	??___flmul
  4733  0D2B  01AD               	clrf	??___flmul+1
  4734  0D2C  01AE               	clrf	??___flmul+2
  4735  0D2D  01AF               	clrf	??___flmul+3
  4736  0D2E  082F               	movf	??___flmul+3,w
  4737  0D2F  00BB               	movwf	___flmul@prod+3
  4738  0D30  082E               	movf	??___flmul+2,w
  4739  0D31  00BA               	movwf	___flmul@prod+2
  4740  0D32  082D               	movf	??___flmul+1,w
  4741  0D33  00B9               	movwf	___flmul@prod+1
  4742  0D34  082C               	movf	??___flmul,w
  4743  0D35  00B8               	movwf	___flmul@prod
  4744  0D36  0825               	movf	___flmul@b+1,w
  4745  0D37  00AC               	movwf	??___flmul
  4746  0D38  082C               	movf	??___flmul,w
  4747  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4748  0D3A  0829               	movf	___flmul@a+1,w
  4749  0D3B  160A  158A  2199  120A  158A  	fcall	__Umul8_16
  4750  0D40  0871               	movf	?__Umul8_16+1,w
  4751  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4752  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4753  0D43  00BD               	movwf	___flmul@temp+1
  4754  0D44  0870               	movf	?__Umul8_16,w
  4755  0D45  00BC               	movwf	___flmul@temp
  4756  0D46                     l2793:	
  4757  0D46  083C               	movf	___flmul@temp,w
  4758  0D47  00AC               	movwf	??___flmul
  4759  0D48  01AD               	clrf	??___flmul+1
  4760  0D49  01AE               	clrf	??___flmul+2
  4761  0D4A  01AF               	clrf	??___flmul+3
  4762  0D4B  082C               	movf	??___flmul,w
  4763  0D4C  07B2               	addwf	___flmul@grs,f
  4764  0D4D  082D               	movf	??___flmul+1,w
  4765  0D4E  1103               	clrz
  4766  0D4F  1803               	skipnc
  4767  0D50  3E01               	addlw	1
  4768  0D51  1903               	skipnz
  4769  0D52  2D54               	goto	u4021
  4770  0D53  07B3               	addwf	___flmul@grs+1,f
  4771  0D54                     u4021:	
  4772  0D54  082E               	movf	??___flmul+2,w
  4773  0D55  1103               	clrz
  4774  0D56  1803               	skipnc
  4775  0D57  3E01               	addlw	1
  4776  0D58  1903               	skipnz
  4777  0D59  2D5B               	goto	u4022
  4778  0D5A  07B4               	addwf	___flmul@grs+2,f
  4779  0D5B                     u4022:	
  4780  0D5B  082F               	movf	??___flmul+3,w
  4781  0D5C  1103               	clrz
  4782  0D5D  1803               	skipnc
  4783  0D5E  3E01               	addlw	1
  4784  0D5F  1903               	skipnz
  4785  0D60  2D62               	goto	u4023
  4786  0D61  07B5               	addwf	___flmul@grs+3,f
  4787  0D62                     u4023:	
  4788  0D62                     l2795:	
  4789  0D62  083D               	movf	___flmul@temp+1,w
  4790  0D63  00AC               	movwf	??___flmul
  4791  0D64  01AD               	clrf	??___flmul+1
  4792  0D65  01AE               	clrf	??___flmul+2
  4793  0D66  01AF               	clrf	??___flmul+3
  4794  0D67  082C               	movf	??___flmul,w
  4795  0D68  07B8               	addwf	___flmul@prod,f
  4796  0D69  082D               	movf	??___flmul+1,w
  4797  0D6A  1103               	clrz
  4798  0D6B  1803               	skipnc
  4799  0D6C  3E01               	addlw	1
  4800  0D6D  1903               	skipnz
  4801  0D6E  2D70               	goto	u4031
  4802  0D6F  07B9               	addwf	___flmul@prod+1,f
  4803  0D70                     u4031:	
  4804  0D70  082E               	movf	??___flmul+2,w
  4805  0D71  1103               	clrz
  4806  0D72  1803               	skipnc
  4807  0D73  3E01               	addlw	1
  4808  0D74  1903               	skipnz
  4809  0D75  2D77               	goto	u4032
  4810  0D76  07BA               	addwf	___flmul@prod+2,f
  4811  0D77                     u4032:	
  4812  0D77  082F               	movf	??___flmul+3,w
  4813  0D78  1103               	clrz
  4814  0D79  1803               	skipnc
  4815  0D7A  3E01               	addlw	1
  4816  0D7B  1903               	skipnz
  4817  0D7C  2D7E               	goto	u4033
  4818  0D7D  07BB               	addwf	___flmul@prod+3,f
  4819  0D7E                     u4033:	
  4820  0D7E  0826               	movf	___flmul@b+2,w
  4821  0D7F  00AC               	movwf	??___flmul
  4822  0D80  082C               	movf	??___flmul,w
  4823  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4824  0D82  0828               	movf	___flmul@a,w
  4825  0D83  160A  158A  2199  120A  158A  	fcall	__Umul8_16
  4826  0D88  0871               	movf	?__Umul8_16+1,w
  4827  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4829  0D8B  00BD               	movwf	___flmul@temp+1
  4830  0D8C  0870               	movf	?__Umul8_16,w
  4831  0D8D  00BC               	movwf	___flmul@temp
  4832  0D8E                     l2797:	
  4833  0D8E  083C               	movf	___flmul@temp,w
  4834  0D8F  00AC               	movwf	??___flmul
  4835  0D90  01AD               	clrf	??___flmul+1
  4836  0D91  01AE               	clrf	??___flmul+2
  4837  0D92  01AF               	clrf	??___flmul+3
  4838  0D93  082C               	movf	??___flmul,w
  4839  0D94  07B2               	addwf	___flmul@grs,f
  4840  0D95  082D               	movf	??___flmul+1,w
  4841  0D96  1103               	clrz
  4842  0D97  1803               	skipnc
  4843  0D98  3E01               	addlw	1
  4844  0D99  1903               	skipnz
  4845  0D9A  2D9C               	goto	u4041
  4846  0D9B  07B3               	addwf	___flmul@grs+1,f
  4847  0D9C                     u4041:	
  4848  0D9C  082E               	movf	??___flmul+2,w
  4849  0D9D  1103               	clrz
  4850  0D9E  1803               	skipnc
  4851  0D9F  3E01               	addlw	1
  4852  0DA0  1903               	skipnz
  4853  0DA1  2DA3               	goto	u4042
  4854  0DA2  07B4               	addwf	___flmul@grs+2,f
  4855  0DA3                     u4042:	
  4856  0DA3  082F               	movf	??___flmul+3,w
  4857  0DA4  1103               	clrz
  4858  0DA5  1803               	skipnc
  4859  0DA6  3E01               	addlw	1
  4860  0DA7  1903               	skipnz
  4861  0DA8  2DAA               	goto	u4043
  4862  0DA9  07B5               	addwf	___flmul@grs+3,f
  4863  0DAA                     u4043:	
  4864  0DAA                     l2799:	
  4865  0DAA  083D               	movf	___flmul@temp+1,w
  4866  0DAB  00AC               	movwf	??___flmul
  4867  0DAC  01AD               	clrf	??___flmul+1
  4868  0DAD  01AE               	clrf	??___flmul+2
  4869  0DAE  01AF               	clrf	??___flmul+3
  4870  0DAF  082C               	movf	??___flmul,w
  4871  0DB0  07B8               	addwf	___flmul@prod,f
  4872  0DB1  082D               	movf	??___flmul+1,w
  4873  0DB2  1103               	clrz
  4874  0DB3  1803               	skipnc
  4875  0DB4  3E01               	addlw	1
  4876  0DB5  1903               	skipnz
  4877  0DB6  2DB8               	goto	u4051
  4878  0DB7  07B9               	addwf	___flmul@prod+1,f
  4879  0DB8                     u4051:	
  4880  0DB8  082E               	movf	??___flmul+2,w
  4881  0DB9  1103               	clrz
  4882  0DBA  1803               	skipnc
  4883  0DBB  3E01               	addlw	1
  4884  0DBC  1903               	skipnz
  4885  0DBD  2DBF               	goto	u4052
  4886  0DBE  07BA               	addwf	___flmul@prod+2,f
  4887  0DBF                     u4052:	
  4888  0DBF  082F               	movf	??___flmul+3,w
  4889  0DC0  1103               	clrz
  4890  0DC1  1803               	skipnc
  4891  0DC2  3E01               	addlw	1
  4892  0DC3  1903               	skipnz
  4893  0DC4  2DC6               	goto	u4053
  4894  0DC5  07BB               	addwf	___flmul@prod+3,f
  4895  0DC6                     u4053:	
  4896  0DC6                     l2801:	
  4897  0DC6  3008               	movlw	8
  4898  0DC7  00AC               	movwf	??___flmul
  4899  0DC8                     u4065:	
  4900  0DC8  1003               	clrc
  4901  0DC9  0DB2               	rlf	___flmul@grs,f
  4902  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4903  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4904  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4905  0DCD  0BAC               	decfsz	??___flmul,f
  4906  0DCE  2DC8               	goto	u4065
  4907  0DCF                     l2803:	
  4908  0DCF  0825               	movf	___flmul@b+1,w
  4909  0DD0  00AC               	movwf	??___flmul
  4910  0DD1  082C               	movf	??___flmul,w
  4911  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4912  0DD3  0828               	movf	___flmul@a,w
  4913  0DD4  160A  158A  2199  120A  158A  	fcall	__Umul8_16
  4914  0DD9  0871               	movf	?__Umul8_16+1,w
  4915  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4917  0DDC  00BD               	movwf	___flmul@temp+1
  4918  0DDD  0870               	movf	?__Umul8_16,w
  4919  0DDE  00BC               	movwf	___flmul@temp
  4920  0DDF                     l2805:	
  4921  0DDF  083C               	movf	___flmul@temp,w
  4922  0DE0  00AC               	movwf	??___flmul
  4923  0DE1  083D               	movf	___flmul@temp+1,w
  4924  0DE2  00AD               	movwf	??___flmul+1
  4925  0DE3  01AE               	clrf	??___flmul+2
  4926  0DE4  01AF               	clrf	??___flmul+3
  4927  0DE5  082C               	movf	??___flmul,w
  4928  0DE6  07B2               	addwf	___flmul@grs,f
  4929  0DE7  082D               	movf	??___flmul+1,w
  4930  0DE8  1103               	clrz
  4931  0DE9  1803               	skipnc
  4932  0DEA  3E01               	addlw	1
  4933  0DEB  1903               	skipnz
  4934  0DEC  2DEE               	goto	u4071
  4935  0DED  07B3               	addwf	___flmul@grs+1,f
  4936  0DEE                     u4071:	
  4937  0DEE  082E               	movf	??___flmul+2,w
  4938  0DEF  1103               	clrz
  4939  0DF0  1803               	skipnc
  4940  0DF1  3E01               	addlw	1
  4941  0DF2  1903               	skipnz
  4942  0DF3  2DF5               	goto	u4072
  4943  0DF4  07B4               	addwf	___flmul@grs+2,f
  4944  0DF5                     u4072:	
  4945  0DF5  082F               	movf	??___flmul+3,w
  4946  0DF6  1103               	clrz
  4947  0DF7  1803               	skipnc
  4948  0DF8  3E01               	addlw	1
  4949  0DF9  1903               	skipnz
  4950  0DFA  2DFC               	goto	u4073
  4951  0DFB  07B5               	addwf	___flmul@grs+3,f
  4952  0DFC                     u4073:	
  4953  0DFC                     l2807:	
  4954  0DFC  0824               	movf	___flmul@b,w
  4955  0DFD  00AC               	movwf	??___flmul
  4956  0DFE  082C               	movf	??___flmul,w
  4957  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4958  0E00  0829               	movf	___flmul@a+1,w
  4959  0E01  160A  158A  2199  120A  158A  	fcall	__Umul8_16
  4960  0E06  0871               	movf	?__Umul8_16+1,w
  4961  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0E09  00BD               	movwf	___flmul@temp+1
  4964  0E0A  0870               	movf	?__Umul8_16,w
  4965  0E0B  00BC               	movwf	___flmul@temp
  4966  0E0C                     l2809:	
  4967  0E0C  083C               	movf	___flmul@temp,w
  4968  0E0D  00AC               	movwf	??___flmul
  4969  0E0E  083D               	movf	___flmul@temp+1,w
  4970  0E0F  00AD               	movwf	??___flmul+1
  4971  0E10  01AE               	clrf	??___flmul+2
  4972  0E11  01AF               	clrf	??___flmul+3
  4973  0E12  082C               	movf	??___flmul,w
  4974  0E13  07B2               	addwf	___flmul@grs,f
  4975  0E14  082D               	movf	??___flmul+1,w
  4976  0E15  1103               	clrz
  4977  0E16  1803               	skipnc
  4978  0E17  3E01               	addlw	1
  4979  0E18  1903               	skipnz
  4980  0E19  2E1B               	goto	u4081
  4981  0E1A  07B3               	addwf	___flmul@grs+1,f
  4982  0E1B                     u4081:	
  4983  0E1B  082E               	movf	??___flmul+2,w
  4984  0E1C  1103               	clrz
  4985  0E1D  1803               	skipnc
  4986  0E1E  3E01               	addlw	1
  4987  0E1F  1903               	skipnz
  4988  0E20  2E22               	goto	u4082
  4989  0E21  07B4               	addwf	___flmul@grs+2,f
  4990  0E22                     u4082:	
  4991  0E22  082F               	movf	??___flmul+3,w
  4992  0E23  1103               	clrz
  4993  0E24  1803               	skipnc
  4994  0E25  3E01               	addlw	1
  4995  0E26  1903               	skipnz
  4996  0E27  2E29               	goto	u4083
  4997  0E28  07B5               	addwf	___flmul@grs+3,f
  4998  0E29                     u4083:	
  4999  0E29                     l2811:	
  5000  0E29  3008               	movlw	8
  5001  0E2A  00AC               	movwf	??___flmul
  5002  0E2B                     u4095:	
  5003  0E2B  1003               	clrc
  5004  0E2C  0DB2               	rlf	___flmul@grs,f
  5005  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5006  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5007  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5008  0E30  0BAC               	decfsz	??___flmul,f
  5009  0E31  2E2B               	goto	u4095
  5010  0E32  0824               	movf	___flmul@b,w
  5011  0E33  00AC               	movwf	??___flmul
  5012  0E34  082C               	movf	??___flmul,w
  5013  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5014  0E36  0828               	movf	___flmul@a,w
  5015  0E37  160A  158A  2199  120A  158A  	fcall	__Umul8_16
  5016  0E3C  0871               	movf	?__Umul8_16+1,w
  5017  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5018  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5019  0E3F  00BD               	movwf	___flmul@temp+1
  5020  0E40  0870               	movf	?__Umul8_16,w
  5021  0E41  00BC               	movwf	___flmul@temp
  5022  0E42                     l2813:	
  5023  0E42  083C               	movf	___flmul@temp,w
  5024  0E43  00AC               	movwf	??___flmul
  5025  0E44  083D               	movf	___flmul@temp+1,w
  5026  0E45  00AD               	movwf	??___flmul+1
  5027  0E46  01AE               	clrf	??___flmul+2
  5028  0E47  01AF               	clrf	??___flmul+3
  5029  0E48  082C               	movf	??___flmul,w
  5030  0E49  07B2               	addwf	___flmul@grs,f
  5031  0E4A  082D               	movf	??___flmul+1,w
  5032  0E4B  1103               	clrz
  5033  0E4C  1803               	skipnc
  5034  0E4D  3E01               	addlw	1
  5035  0E4E  1903               	skipnz
  5036  0E4F  2E51               	goto	u4101
  5037  0E50  07B3               	addwf	___flmul@grs+1,f
  5038  0E51                     u4101:	
  5039  0E51  082E               	movf	??___flmul+2,w
  5040  0E52  1103               	clrz
  5041  0E53  1803               	skipnc
  5042  0E54  3E01               	addlw	1
  5043  0E55  1903               	skipnz
  5044  0E56  2E58               	goto	u4102
  5045  0E57  07B4               	addwf	___flmul@grs+2,f
  5046  0E58                     u4102:	
  5047  0E58  082F               	movf	??___flmul+3,w
  5048  0E59  1103               	clrz
  5049  0E5A  1803               	skipnc
  5050  0E5B  3E01               	addlw	1
  5051  0E5C  1903               	skipnz
  5052  0E5D  2E5F               	goto	u4103
  5053  0E5E  07B5               	addwf	___flmul@grs+3,f
  5054  0E5F                     u4103:	
  5055  0E5F                     l2815:	
  5056  0E5F  0825               	movf	___flmul@b+1,w
  5057  0E60  00AC               	movwf	??___flmul
  5058  0E61  082C               	movf	??___flmul,w
  5059  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5060  0E63  082A               	movf	___flmul@a+2,w
  5061  0E64  160A  158A  2199  120A  158A  	fcall	__Umul8_16
  5062  0E69  0871               	movf	?__Umul8_16+1,w
  5063  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5064  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5065  0E6C  00BD               	movwf	___flmul@temp+1
  5066  0E6D  0870               	movf	?__Umul8_16,w
  5067  0E6E  00BC               	movwf	___flmul@temp
  5068  0E6F  083C               	movf	___flmul@temp,w
  5069  0E70  00AC               	movwf	??___flmul
  5070  0E71  083D               	movf	___flmul@temp+1,w
  5071  0E72  00AD               	movwf	??___flmul+1
  5072  0E73  01AE               	clrf	??___flmul+2
  5073  0E74  01AF               	clrf	??___flmul+3
  5074  0E75  082C               	movf	??___flmul,w
  5075  0E76  07B8               	addwf	___flmul@prod,f
  5076  0E77  082D               	movf	??___flmul+1,w
  5077  0E78  1103               	clrz
  5078  0E79  1803               	skipnc
  5079  0E7A  3E01               	addlw	1
  5080  0E7B  1903               	skipnz
  5081  0E7C  2E7E               	goto	u4111
  5082  0E7D  07B9               	addwf	___flmul@prod+1,f
  5083  0E7E                     u4111:	
  5084  0E7E  082E               	movf	??___flmul+2,w
  5085  0E7F  1103               	clrz
  5086  0E80  1803               	skipnc
  5087  0E81  3E01               	addlw	1
  5088  0E82  1903               	skipnz
  5089  0E83  2E85               	goto	u4112
  5090  0E84  07BA               	addwf	___flmul@prod+2,f
  5091  0E85                     u4112:	
  5092  0E85  082F               	movf	??___flmul+3,w
  5093  0E86  1103               	clrz
  5094  0E87  1803               	skipnc
  5095  0E88  3E01               	addlw	1
  5096  0E89  1903               	skipnz
  5097  0E8A  2E8C               	goto	u4113
  5098  0E8B  07BB               	addwf	___flmul@prod+3,f
  5099  0E8C                     u4113:	
  5100  0E8C                     l2817:	
  5101  0E8C  0826               	movf	___flmul@b+2,w
  5102  0E8D  00AC               	movwf	??___flmul
  5103  0E8E  082C               	movf	??___flmul,w
  5104  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5105  0E90  0829               	movf	___flmul@a+1,w
  5106  0E91  160A  158A  2199  120A  158A  	fcall	__Umul8_16
  5107  0E96  0871               	movf	?__Umul8_16+1,w
  5108  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5109  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5110  0E99  00BD               	movwf	___flmul@temp+1
  5111  0E9A  0870               	movf	?__Umul8_16,w
  5112  0E9B  00BC               	movwf	___flmul@temp
  5113  0E9C                     l2819:	
  5114  0E9C  083C               	movf	___flmul@temp,w
  5115  0E9D  00AC               	movwf	??___flmul
  5116  0E9E  083D               	movf	___flmul@temp+1,w
  5117  0E9F  00AD               	movwf	??___flmul+1
  5118  0EA0  01AE               	clrf	??___flmul+2
  5119  0EA1  01AF               	clrf	??___flmul+3
  5120  0EA2  082C               	movf	??___flmul,w
  5121  0EA3  07B8               	addwf	___flmul@prod,f
  5122  0EA4  082D               	movf	??___flmul+1,w
  5123  0EA5  1103               	clrz
  5124  0EA6  1803               	skipnc
  5125  0EA7  3E01               	addlw	1
  5126  0EA8  1903               	skipnz
  5127  0EA9  2EAB               	goto	u4121
  5128  0EAA  07B9               	addwf	___flmul@prod+1,f
  5129  0EAB                     u4121:	
  5130  0EAB  082E               	movf	??___flmul+2,w
  5131  0EAC  1103               	clrz
  5132  0EAD  1803               	skipnc
  5133  0EAE  3E01               	addlw	1
  5134  0EAF  1903               	skipnz
  5135  0EB0  2EB2               	goto	u4122
  5136  0EB1  07BA               	addwf	___flmul@prod+2,f
  5137  0EB2                     u4122:	
  5138  0EB2  082F               	movf	??___flmul+3,w
  5139  0EB3  1103               	clrz
  5140  0EB4  1803               	skipnc
  5141  0EB5  3E01               	addlw	1
  5142  0EB6  1903               	skipnz
  5143  0EB7  2EB9               	goto	u4123
  5144  0EB8  07BB               	addwf	___flmul@prod+3,f
  5145  0EB9                     u4123:	
  5146  0EB9  0826               	movf	___flmul@b+2,w
  5147  0EBA  00AC               	movwf	??___flmul
  5148  0EBB  082C               	movf	??___flmul,w
  5149  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5150  0EBD  082A               	movf	___flmul@a+2,w
  5151  0EBE  160A  158A  2199  120A  158A  	fcall	__Umul8_16
  5152  0EC3  0871               	movf	?__Umul8_16+1,w
  5153  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5154  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5155  0EC6  00BD               	movwf	___flmul@temp+1
  5156  0EC7  0870               	movf	?__Umul8_16,w
  5157  0EC8  00BC               	movwf	___flmul@temp
  5158  0EC9                     l2821:	
  5159  0EC9  083C               	movf	___flmul@temp,w
  5160  0ECA  00AC               	movwf	??___flmul
  5161  0ECB  083D               	movf	___flmul@temp+1,w
  5162  0ECC  00AD               	movwf	??___flmul+1
  5163  0ECD  01AE               	clrf	??___flmul+2
  5164  0ECE  01AF               	clrf	??___flmul+3
  5165  0ECF  3008               	movlw	8
  5166  0ED0                     u4135:	
  5167  0ED0  1003               	clrc
  5168  0ED1  0DAC               	rlf	??___flmul,f
  5169  0ED2  0DAD               	rlf	??___flmul+1,f
  5170  0ED3  0DAE               	rlf	??___flmul+2,f
  5171  0ED4  0DAF               	rlf	??___flmul+3,f
  5172  0ED5                     u4130:	
  5173  0ED5  3EFF               	addlw	-1
  5174  0ED6  1D03               	skipz
  5175  0ED7  2ED0               	goto	u4135
  5176  0ED8  082C               	movf	??___flmul,w
  5177  0ED9  07B8               	addwf	___flmul@prod,f
  5178  0EDA  082D               	movf	??___flmul+1,w
  5179  0EDB  1103               	clrz
  5180  0EDC  1803               	skipnc
  5181  0EDD  3E01               	addlw	1
  5182  0EDE  1903               	skipnz
  5183  0EDF  2EE1               	goto	u4141
  5184  0EE0  07B9               	addwf	___flmul@prod+1,f
  5185  0EE1                     u4141:	
  5186  0EE1  082E               	movf	??___flmul+2,w
  5187  0EE2  1103               	clrz
  5188  0EE3  1803               	skipnc
  5189  0EE4  3E01               	addlw	1
  5190  0EE5  1903               	skipnz
  5191  0EE6  2EE8               	goto	u4142
  5192  0EE7  07BA               	addwf	___flmul@prod+2,f
  5193  0EE8                     u4142:	
  5194  0EE8  082F               	movf	??___flmul+3,w
  5195  0EE9  1103               	clrz
  5196  0EEA  1803               	skipnc
  5197  0EEB  3E01               	addlw	1
  5198  0EEC  1903               	skipnz
  5199  0EED  2EEF               	goto	u4143
  5200  0EEE  07BB               	addwf	___flmul@prod+3,f
  5201  0EEF                     u4143:	
  5202  0EEF                     l2823:	
  5203  0EEF  0832               	movf	___flmul@grs,w
  5204  0EF0  00AC               	movwf	??___flmul
  5205  0EF1  0833               	movf	___flmul@grs+1,w
  5206  0EF2  00AD               	movwf	??___flmul+1
  5207  0EF3  0834               	movf	___flmul@grs+2,w
  5208  0EF4  00AE               	movwf	??___flmul+2
  5209  0EF5  0835               	movf	___flmul@grs+3,w
  5210  0EF6  00AF               	movwf	??___flmul+3
  5211  0EF7  3018               	movlw	24
  5212  0EF8                     u4155:	
  5213  0EF8  1003               	clrc
  5214  0EF9  0CAF               	rrf	??___flmul+3,f
  5215  0EFA  0CAE               	rrf	??___flmul+2,f
  5216  0EFB  0CAD               	rrf	??___flmul+1,f
  5217  0EFC  0CAC               	rrf	??___flmul,f
  5218  0EFD                     u4150:	
  5219  0EFD  3EFF               	addlw	-1
  5220  0EFE  1D03               	skipz
  5221  0EFF  2EF8               	goto	u4155
  5222  0F00  082C               	movf	??___flmul,w
  5223  0F01  07B8               	addwf	___flmul@prod,f
  5224  0F02  082D               	movf	??___flmul+1,w
  5225  0F03  1103               	clrz
  5226  0F04  1803               	skipnc
  5227  0F05  3E01               	addlw	1
  5228  0F06  1903               	skipnz
  5229  0F07  2F09               	goto	u4161
  5230  0F08  07B9               	addwf	___flmul@prod+1,f
  5231  0F09                     u4161:	
  5232  0F09  082E               	movf	??___flmul+2,w
  5233  0F0A  1103               	clrz
  5234  0F0B  1803               	skipnc
  5235  0F0C  3E01               	addlw	1
  5236  0F0D  1903               	skipnz
  5237  0F0E  2F10               	goto	u4162
  5238  0F0F  07BA               	addwf	___flmul@prod+2,f
  5239  0F10                     u4162:	
  5240  0F10  082F               	movf	??___flmul+3,w
  5241  0F11  1103               	clrz
  5242  0F12  1803               	skipnc
  5243  0F13  3E01               	addlw	1
  5244  0F14  1903               	skipnz
  5245  0F15  2F17               	goto	u4163
  5246  0F16  07BB               	addwf	___flmul@prod+3,f
  5247  0F17                     u4163:	
  5248  0F17                     l2825:	
  5249  0F17  3008               	movlw	8
  5250  0F18  00AC               	movwf	??___flmul
  5251  0F19                     u4175:	
  5252  0F19  1003               	clrc
  5253  0F1A  0DB2               	rlf	___flmul@grs,f
  5254  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5255  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5256  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5257  0F1E  0BAC               	decfsz	??___flmul,f
  5258  0F1F  2F19               	goto	u4175
  5259  0F20                     l2827:	
  5260  0F20  0837               	movf	___flmul@bexp,w
  5261  0F21  0736               	addwf	___flmul@aexp,w
  5262  0F22  00AC               	movwf	??___flmul
  5263  0F23  01AD               	clrf	??___flmul+1
  5264  0F24  0DAD               	rlf	??___flmul+1,f
  5265  0F25  082C               	movf	??___flmul,w
  5266  0F26  3E82               	addlw	130
  5267  0F27  00BC               	movwf	___flmul@temp
  5268  0F28  082D               	movf	??___flmul+1,w
  5269  0F29  1803               	skipnc
  5270  0F2A  3E01               	addlw	1
  5271  0F2B  3EFF               	addlw	255
  5272  0F2C  00BD               	movwf	___flmul@temp+1
  5273  0F2D  2F4B               	goto	l2839
  5274  0F2E                     l2829:	
  5275  0F2E  3001               	movlw	1
  5276  0F2F  00AC               	movwf	??___flmul
  5277  0F30                     u4185:	
  5278  0F30  1003               	clrc
  5279  0F31  0DB8               	rlf	___flmul@prod,f
  5280  0F32  0DB9               	rlf	___flmul@prod+1,f
  5281  0F33  0DBA               	rlf	___flmul@prod+2,f
  5282  0F34  0DBB               	rlf	___flmul@prod+3,f
  5283  0F35  0BAC               	decfsz	??___flmul,f
  5284  0F36  2F30               	goto	u4185
  5285  0F37                     l2831:	
  5286  0F37  1FB5               	btfss	___flmul@grs+3,7
  5287  0F38  2F3A               	goto	u4191
  5288  0F39  2F3B               	goto	u4190
  5289  0F3A                     u4191:	
  5290  0F3A  2F3C               	goto	l2835
  5291  0F3B                     u4190:	
  5292  0F3B                     l2833:	
  5293  0F3B  1438               	bsf	___flmul@prod,0
  5294  0F3C                     l2835:	
  5295  0F3C  3001               	movlw	1
  5296  0F3D  00AC               	movwf	??___flmul
  5297  0F3E                     u4205:	
  5298  0F3E  1003               	clrc
  5299  0F3F  0DB2               	rlf	___flmul@grs,f
  5300  0F40  0DB3               	rlf	___flmul@grs+1,f
  5301  0F41  0DB4               	rlf	___flmul@grs+2,f
  5302  0F42  0DB5               	rlf	___flmul@grs+3,f
  5303  0F43  0BAC               	decfsz	??___flmul,f
  5304  0F44  2F3E               	goto	u4205
  5305  0F45                     l2837:	
  5306  0F45  30FF               	movlw	255
  5307  0F46  07BC               	addwf	___flmul@temp,f
  5308  0F47  1803               	skipnc
  5309  0F48  0ABD               	incf	___flmul@temp+1,f
  5310  0F49  30FF               	movlw	255
  5311  0F4A  07BD               	addwf	___flmul@temp+1,f
  5312  0F4B                     l2839:	
  5313  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5314  0F4C  2F4E               	goto	u4211
  5315  0F4D  2F4F               	goto	u4210
  5316  0F4E                     u4211:	
  5317  0F4E  2F2E               	goto	l2829
  5318  0F4F                     u4210:	
  5319  0F4F                     l2841:	
  5320  0F4F  01B6               	clrf	___flmul@aexp
  5321  0F50                     l2843:	
  5322  0F50  1FB5               	btfss	___flmul@grs+3,7
  5323  0F51  2F53               	goto	u4221
  5324  0F52  2F54               	goto	u4220
  5325  0F53                     u4221:	
  5326  0F53  2F70               	goto	l2851
  5327  0F54                     u4220:	
  5328  0F54                     l2845:	
  5329  0F54  30FF               	movlw	255
  5330  0F55  0532               	andwf	___flmul@grs,w
  5331  0F56  00AC               	movwf	??___flmul
  5332  0F57  30FF               	movlw	255
  5333  0F58  0533               	andwf	___flmul@grs+1,w
  5334  0F59  00AD               	movwf	??___flmul+1
  5335  0F5A  30FF               	movlw	255
  5336  0F5B  0534               	andwf	___flmul@grs+2,w
  5337  0F5C  00AE               	movwf	??___flmul+2
  5338  0F5D  307F               	movlw	127
  5339  0F5E  0535               	andwf	___flmul@grs+3,w
  5340  0F5F  00AF               	movwf	??___flmul+3
  5341  0F60  082F               	movf	??___flmul+3,w
  5342  0F61  042E               	iorwf	??___flmul+2,w
  5343  0F62  042D               	iorwf	??___flmul+1,w
  5344  0F63  042C               	iorwf	??___flmul,w
  5345  0F64  1903               	skipnz
  5346  0F65  2F67               	goto	u4231
  5347  0F66  2F68               	goto	u4230
  5348  0F67                     u4231:	
  5349  0F67  2F6B               	goto	l767
  5350  0F68                     u4230:	
  5351  0F68                     l2847:	
  5352  0F68  01B6               	clrf	___flmul@aexp
  5353  0F69  0AB6               	incf	___flmul@aexp,f
  5354  0F6A  2F70               	goto	l2851
  5355  0F6B                     l767:	
  5356  0F6B  1C38               	btfss	___flmul@prod,0
  5357  0F6C  2F6E               	goto	u4241
  5358  0F6D  2F6F               	goto	u4240
  5359  0F6E                     u4241:	
  5360  0F6E  2F70               	goto	l2851
  5361  0F6F                     u4240:	
  5362  0F6F  2F68               	goto	l2847
  5363  0F70                     l2851:	
  5364  0F70  0836               	movf	___flmul@aexp,w
  5365  0F71  1903               	btfsc	3,2
  5366  0F72  2F74               	goto	u4251
  5367  0F73  2F75               	goto	u4250
  5368  0F74                     u4251:	
  5369  0F74  2FA6               	goto	l2861
  5370  0F75                     u4250:	
  5371  0F75                     l2853:	
  5372  0F75  3001               	movlw	1
  5373  0F76  07B8               	addwf	___flmul@prod,f
  5374  0F77  3000               	movlw	0
  5375  0F78  1803               	skipnc
  5376  0F79  3001               	movlw	1
  5377  0F7A  07B9               	addwf	___flmul@prod+1,f
  5378  0F7B  3000               	movlw	0
  5379  0F7C  1803               	skipnc
  5380  0F7D  3001               	movlw	1
  5381  0F7E  07BA               	addwf	___flmul@prod+2,f
  5382  0F7F  3000               	movlw	0
  5383  0F80  1803               	skipnc
  5384  0F81  3001               	movlw	1
  5385  0F82  07BB               	addwf	___flmul@prod+3,f
  5386  0F83                     l2855:	
  5387  0F83  1C3B               	btfss	___flmul@prod+3,0
  5388  0F84  2F86               	goto	u4261
  5389  0F85  2F87               	goto	u4260
  5390  0F86                     u4261:	
  5391  0F86  2FA6               	goto	l2861
  5392  0F87                     u4260:	
  5393  0F87                     l2857:	
  5394  0F87  0838               	movf	___flmul@prod,w
  5395  0F88  00AC               	movwf	??___flmul
  5396  0F89  0839               	movf	___flmul@prod+1,w
  5397  0F8A  00AD               	movwf	??___flmul+1
  5398  0F8B  083A               	movf	___flmul@prod+2,w
  5399  0F8C  00AE               	movwf	??___flmul+2
  5400  0F8D  083B               	movf	___flmul@prod+3,w
  5401  0F8E  00AF               	movwf	??___flmul+3
  5402  0F8F  3001               	movlw	1
  5403  0F90  00B0               	movwf	??___flmul+4
  5404  0F91                     u4275:	
  5405  0F91  0D2F               	rlf	??___flmul+3,w
  5406  0F92  0CAF               	rrf	??___flmul+3,f
  5407  0F93  0CAE               	rrf	??___flmul+2,f
  5408  0F94  0CAD               	rrf	??___flmul+1,f
  5409  0F95  0CAC               	rrf	??___flmul,f
  5410  0F96                     u4270:	
  5411  0F96  0BB0               	decfsz	??___flmul+4,f
  5412  0F97  2F91               	goto	u4275
  5413  0F98  082F               	movf	??___flmul+3,w
  5414  0F99  00BB               	movwf	___flmul@prod+3
  5415  0F9A  082E               	movf	??___flmul+2,w
  5416  0F9B  00BA               	movwf	___flmul@prod+2
  5417  0F9C  082D               	movf	??___flmul+1,w
  5418  0F9D  00B9               	movwf	___flmul@prod+1
  5419  0F9E  082C               	movf	??___flmul,w
  5420  0F9F  00B8               	movwf	___flmul@prod
  5421  0FA0                     l2859:	
  5422  0FA0  3001               	movlw	1
  5423  0FA1  07BC               	addwf	___flmul@temp,f
  5424  0FA2  1803               	skipnc
  5425  0FA3  0ABD               	incf	___flmul@temp+1,f
  5426  0FA4  3000               	movlw	0
  5427  0FA5  07BD               	addwf	___flmul@temp+1,f
  5428  0FA6                     l2861:	
  5429  0FA6  083D               	movf	___flmul@temp+1,w
  5430  0FA7  3A80               	xorlw	128
  5431  0FA8  00FF               	movwf	btemp+1
  5432  0FA9  3080               	movlw	128
  5433  0FAA  027F               	subwf	btemp+1,w
  5434  0FAB  1D03               	skipz
  5435  0FAC  2FAF               	goto	u4285
  5436  0FAD  30FF               	movlw	255
  5437  0FAE  023C               	subwf	___flmul@temp,w
  5438  0FAF                     u4285:	
  5439  0FAF  1C03               	skipc
  5440  0FB0  2FB2               	goto	u4281
  5441  0FB1  2FB3               	goto	u4280
  5442  0FB2                     u4281:	
  5443  0FB2  2FBE               	goto	l2865
  5444  0FB3                     u4280:	
  5445  0FB3                     l2863:	
  5446  0FB3  307F               	movlw	127
  5447  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5448  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5449  0FB6  00BB               	movwf	___flmul@prod+3
  5450  0FB7  3080               	movlw	128
  5451  0FB8  00BA               	movwf	___flmul@prod+2
  5452  0FB9  3000               	movlw	0
  5453  0FBA  00B9               	movwf	___flmul@prod+1
  5454  0FBB  3000               	movlw	0
  5455  0FBC  00B8               	movwf	___flmul@prod
  5456  0FBD  2FF3               	goto	l773
  5457  0FBE                     l2865:	
  5458  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5459  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5460  0FC0  083D               	movf	___flmul@temp+1,w
  5461  0FC1  3A80               	xorlw	128
  5462  0FC2  00FF               	movwf	btemp+1
  5463  0FC3  3080               	movlw	128
  5464  0FC4  027F               	subwf	btemp+1,w
  5465  0FC5  1D03               	skipz
  5466  0FC6  2FC9               	goto	u4295
  5467  0FC7  3001               	movlw	1
  5468  0FC8  023C               	subwf	___flmul@temp,w
  5469  0FC9                     u4295:	
  5470  0FC9  1803               	skipnc
  5471  0FCA  2FCC               	goto	u4291
  5472  0FCB  2FCD               	goto	u4290
  5473  0FCC                     u4291:	
  5474  0FCC  2FD9               	goto	l2871
  5475  0FCD                     u4290:	
  5476  0FCD                     l2867:	
  5477  0FCD  3000               	movlw	0
  5478  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5479  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5480  0FD0  00BB               	movwf	___flmul@prod+3
  5481  0FD1  3000               	movlw	0
  5482  0FD2  00BA               	movwf	___flmul@prod+2
  5483  0FD3  3000               	movlw	0
  5484  0FD4  00B9               	movwf	___flmul@prod+1
  5485  0FD5  3000               	movlw	0
  5486  0FD6  00B8               	movwf	___flmul@prod
  5487  0FD7                     l2869:	
  5488  0FD7  01B1               	clrf	___flmul@sign
  5489  0FD8  2FF3               	goto	l773
  5490  0FD9                     l2871:	
  5491  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5492  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5493  0FDB  083C               	movf	___flmul@temp,w
  5494  0FDC  00AC               	movwf	??___flmul
  5495  0FDD  082C               	movf	??___flmul,w
  5496  0FDE  00B7               	movwf	___flmul@bexp
  5497  0FDF  30FF               	movlw	255
  5498  0FE0  05B8               	andwf	___flmul@prod,f
  5499  0FE1  30FF               	movlw	255
  5500  0FE2  05B9               	andwf	___flmul@prod+1,f
  5501  0FE3  307F               	movlw	127
  5502  0FE4  05BA               	andwf	___flmul@prod+2,f
  5503  0FE5  3000               	movlw	0
  5504  0FE6  05BB               	andwf	___flmul@prod+3,f
  5505  0FE7                     l2873:	
  5506  0FE7  1C37               	btfss	___flmul@bexp,0
  5507  0FE8  2FEA               	goto	u4301
  5508  0FE9  2FEB               	goto	u4300
  5509  0FEA                     u4301:	
  5510  0FEA  2FEC               	goto	l2877
  5511  0FEB                     u4300:	
  5512  0FEB                     l2875:	
  5513  0FEB  17BA               	bsf	___flmul@prod+2,7
  5514  0FEC                     l2877:	
  5515  0FEC  0837               	movf	___flmul@bexp,w
  5516  0FED  00AC               	movwf	??___flmul
  5517  0FEE  1003               	clrc
  5518  0FEF  0C2C               	rrf	??___flmul,w
  5519  0FF0  00AD               	movwf	??___flmul+1
  5520  0FF1  082D               	movf	??___flmul+1,w
  5521  0FF2  00BB               	movwf	___flmul@prod+3
  5522  0FF3                     l773:	
  5523  0FF3  0831               	movf	___flmul@sign,w
  5524  0FF4  00AC               	movwf	??___flmul
  5525  0FF5  082C               	movf	??___flmul,w
  5526  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5527  0FF7                     l2879:	
  5528  0FF7  083B               	movf	___flmul@prod+3,w
  5529  0FF8  00A7               	movwf	?___flmul+3
  5530  0FF9  083A               	movf	___flmul@prod+2,w
  5531  0FFA  00A6               	movwf	?___flmul+2
  5532  0FFB  0839               	movf	___flmul@prod+1,w
  5533  0FFC  00A5               	movwf	?___flmul+1
  5534  0FFD  0838               	movf	___flmul@prod,w
  5535  0FFE  00A4               	movwf	?___flmul
  5536  0FFF                     l761:	
  5537  0FFF  0008               	return
  5538  1000                     __end_of___flmul:	
  5539                           
  5540                           	psect	text10
  5541  1999                     __ptext10:	
  5542 ;; *************** function __Umul8_16 *****************
  5543 ;; Defined at:
  5544 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  multiplier      1    wreg     unsigned char 
  5547 ;;  multiplicand    1    0[COMMON] unsigned char 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  multiplier      1    8[COMMON] unsigned char 
  5550 ;;  word_mpld       2    6[COMMON] unsigned int 
  5551 ;;  product         2    4[COMMON] unsigned int 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  2    0[COMMON] unsigned int 
  5554 ;; Registers used:
  5555 ;;		wreg, status,2, status,0
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5561 ;;      Params:         2       0       0       0       0
  5562 ;;      Locals:         5       0       0       0       0
  5563 ;;      Temps:          2       0       0       0       0
  5564 ;;      Totals:         9       0       0       0       0
  5565 ;;Total ram usage:        9 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; This function calls:
  5568 ;;		Nothing
  5569 ;; This function is called by:
  5570 ;;		___flmul
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           
  5575                           ;psect for function __Umul8_16
  5576  1999                     __Umul8_16:	
  5577                           
  5578                           ;incstack = 0
  5579                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5580                           ;__Umul8_16@multiplier stored from wreg
  5581  1999  00F8               	movwf	__Umul8_16@multiplier
  5582  199A                     l2393:	
  5583  199A  01F4               	clrf	__Umul8_16@product
  5584  199B  01F5               	clrf	__Umul8_16@product+1
  5585  199C                     l2395:	
  5586  199C  0870               	movf	__Umul8_16@multiplicand,w
  5587  199D  00F2               	movwf	??__Umul8_16
  5588  199E  01F3               	clrf	??__Umul8_16+1
  5589  199F  0872               	movf	??__Umul8_16,w
  5590  19A0  00F6               	movwf	__Umul8_16@word_mpld
  5591  19A1  0873               	movf	??__Umul8_16+1,w
  5592  19A2  00F7               	movwf	__Umul8_16@word_mpld+1
  5593  19A3                     l2397:	
  5594  19A3  1C78               	btfss	__Umul8_16@multiplier,0
  5595  19A4  29A6               	goto	u3131
  5596  19A5  29A7               	goto	u3130
  5597  19A6                     u3131:	
  5598  19A6  29AD               	goto	l827
  5599  19A7                     u3130:	
  5600  19A7                     l2399:	
  5601  19A7  0876               	movf	__Umul8_16@word_mpld,w
  5602  19A8  07F4               	addwf	__Umul8_16@product,f
  5603  19A9  1803               	skipnc
  5604  19AA  0AF5               	incf	__Umul8_16@product+1,f
  5605  19AB  0877               	movf	__Umul8_16@word_mpld+1,w
  5606  19AC  07F5               	addwf	__Umul8_16@product+1,f
  5607  19AD                     l827:	
  5608  19AD  3001               	movlw	1
  5609  19AE                     u3145:	
  5610  19AE  1003               	clrc
  5611  19AF  0DF6               	rlf	__Umul8_16@word_mpld,f
  5612  19B0  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5613  19B1  3EFF               	addlw	-1
  5614  19B2  1D03               	skipz
  5615  19B3  29AE               	goto	u3145
  5616  19B4  1003               	clrc
  5617  19B5  0CF8               	rrf	__Umul8_16@multiplier,f
  5618  19B6                     l2401:	
  5619  19B6  0878               	movf	__Umul8_16@multiplier,w
  5620  19B7  1D03               	btfss	3,2
  5621  19B8  29BA               	goto	u3151
  5622  19B9  29BB               	goto	u3150
  5623  19BA                     u3151:	
  5624  19BA  29A3               	goto	l2397
  5625  19BB                     u3150:	
  5626  19BB                     l2403:	
  5627  19BB  0875               	movf	__Umul8_16@product+1,w
  5628  19BC  00F1               	movwf	?__Umul8_16+1
  5629  19BD  0874               	movf	__Umul8_16@product,w
  5630  19BE  00F0               	movwf	?__Umul8_16
  5631  19BF                     l829:	
  5632  19BF  0008               	return
  5633  19C0                     __end_of__Umul8_16:	
  5634                           
  5635                           	psect	text11
  5636  1D8D                     __ptext11:	
  5637 ;; *************** function __tdiv_to_l_ *****************
  5638 ;; Defined at:
  5639 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  f1              4    0[COMMON] float 
  5642 ;;  f2              4    4[COMMON] float 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  quot            4    0[BANK0 ] unsigned long 
  5645 ;;  exp1            1    5[BANK0 ] unsigned char 
  5646 ;;  cntr            1    4[BANK0 ] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  4    0[COMMON] unsigned long 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5656 ;;      Params:         8       0       0       0       0
  5657 ;;      Locals:         0       6       0       0       0
  5658 ;;      Temps:          4       0       0       0       0
  5659 ;;      Totals:        12       6       0       0       0
  5660 ;;Total ram usage:       18 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_sprintf
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           
  5670                           ;psect for function __tdiv_to_l_
  5671  1D8D                     __tdiv_to_l_:	
  5672  1D8D                     l2975:	
  5673                           ;incstack = 0
  5674                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5675                           
  5676  1D8D  0870               	movf	__tdiv_to_l_@f1,w
  5677  1D8E  00F8               	movwf	??__tdiv_to_l_
  5678  1D8F  0871               	movf	__tdiv_to_l_@f1+1,w
  5679  1D90  00F9               	movwf	??__tdiv_to_l_+1
  5680  1D91  0872               	movf	__tdiv_to_l_@f1+2,w
  5681  1D92  00FA               	movwf	??__tdiv_to_l_+2
  5682  1D93  1003               	clrc
  5683  1D94  0D79               	rlf	??__tdiv_to_l_+1,w
  5684  1D95  0D7A               	rlf	??__tdiv_to_l_+2,w
  5685  1D96  00FB               	movwf	??__tdiv_to_l_+3
  5686  1D97  087B               	movf	??__tdiv_to_l_+3,w
  5687  1D98  1283               	bcf	3,5	;RP0=0, select bank0
  5688  1D99  1303               	bcf	3,6	;RP1=0, select bank0
  5689  1D9A  00A5               	movwf	__tdiv_to_l_@exp1
  5690  1D9B  0825               	movf	__tdiv_to_l_@exp1,w
  5691  1D9C  1D03               	btfss	3,2
  5692  1D9D  2D9F               	goto	u4581
  5693  1D9E  2DA0               	goto	u4580
  5694  1D9F                     u4581:	
  5695  1D9F  2DA9               	goto	l2981
  5696  1DA0                     u4580:	
  5697  1DA0                     l2977:	
  5698  1DA0  3000               	movlw	0
  5699  1DA1  00F3               	movwf	?__tdiv_to_l_+3
  5700  1DA2  3000               	movlw	0
  5701  1DA3  00F2               	movwf	?__tdiv_to_l_+2
  5702  1DA4  3000               	movlw	0
  5703  1DA5  00F1               	movwf	?__tdiv_to_l_+1
  5704  1DA6  3000               	movlw	0
  5705  1DA7  00F0               	movwf	?__tdiv_to_l_
  5706  1DA8  2E49               	goto	l555
  5707  1DA9                     l2981:	
  5708  1DA9  0874               	movf	__tdiv_to_l_@f2,w
  5709  1DAA  00F8               	movwf	??__tdiv_to_l_
  5710  1DAB  0875               	movf	__tdiv_to_l_@f2+1,w
  5711  1DAC  00F9               	movwf	??__tdiv_to_l_+1
  5712  1DAD  0876               	movf	__tdiv_to_l_@f2+2,w
  5713  1DAE  00FA               	movwf	??__tdiv_to_l_+2
  5714  1DAF  1003               	clrc
  5715  1DB0  0D79               	rlf	??__tdiv_to_l_+1,w
  5716  1DB1  0D7A               	rlf	??__tdiv_to_l_+2,w
  5717  1DB2  00FB               	movwf	??__tdiv_to_l_+3
  5718  1DB3  087B               	movf	??__tdiv_to_l_+3,w
  5719  1DB4  00A4               	movwf	__tdiv_to_l_@cntr
  5720  1DB5  0824               	movf	__tdiv_to_l_@cntr,w
  5721  1DB6  1D03               	btfss	3,2
  5722  1DB7  2DB9               	goto	u4591
  5723  1DB8  2DBA               	goto	u4590
  5724  1DB9                     u4591:	
  5725  1DB9  2DBB               	goto	l556
  5726  1DBA                     u4590:	
  5727  1DBA  2DA0               	goto	l2977
  5728  1DBB                     l556:	
  5729  1DBB  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5730  1DBC                     l2987:	
  5731  1DBC  30FF               	movlw	255
  5732  1DBD  05F0               	andwf	__tdiv_to_l_@f1,f
  5733  1DBE  30FF               	movlw	255
  5734  1DBF  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5735  1DC0  3000               	movlw	0
  5736  1DC1  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5737  1DC2                     l2989:	
  5738  1DC2  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5739  1DC3  30FF               	movlw	255
  5740  1DC4  05F4               	andwf	__tdiv_to_l_@f2,f
  5741  1DC5  30FF               	movlw	255
  5742  1DC6  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5743  1DC7  3000               	movlw	0
  5744  1DC8  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5745  1DC9  3000               	movlw	0
  5746  1DCA  00A3               	movwf	__tdiv_to_l_@quot+3
  5747  1DCB  3000               	movlw	0
  5748  1DCC  00A2               	movwf	__tdiv_to_l_@quot+2
  5749  1DCD  3000               	movlw	0
  5750  1DCE  00A1               	movwf	__tdiv_to_l_@quot+1
  5751  1DCF  3000               	movlw	0
  5752  1DD0  00A0               	movwf	__tdiv_to_l_@quot
  5753  1DD1                     l2991:	
  5754  1DD1  307F               	movlw	127
  5755  1DD2  02A5               	subwf	__tdiv_to_l_@exp1,f
  5756  1DD3                     l2993:	
  5757  1DD3  3098               	movlw	152
  5758  1DD4  0724               	addwf	__tdiv_to_l_@cntr,w
  5759  1DD5  00F8               	movwf	??__tdiv_to_l_
  5760  1DD6  0878               	movf	??__tdiv_to_l_,w
  5761  1DD7  02A5               	subwf	__tdiv_to_l_@exp1,f
  5762  1DD8  3018               	movlw	24
  5763  1DD9  00F8               	movwf	??__tdiv_to_l_
  5764  1DDA  0878               	movf	??__tdiv_to_l_,w
  5765  1DDB  00A4               	movwf	__tdiv_to_l_@cntr
  5766  1DDC                     l2995:	
  5767  1DDC  3001               	movlw	1
  5768  1DDD  00F8               	movwf	??__tdiv_to_l_
  5769  1DDE                     u4605:	
  5770  1DDE  1003               	clrc
  5771  1DDF  0DA0               	rlf	__tdiv_to_l_@quot,f
  5772  1DE0  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5773  1DE1  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5774  1DE2  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5775  1DE3  0BF8               	decfsz	??__tdiv_to_l_,f
  5776  1DE4  2DDE               	goto	u4605
  5777  1DE5                     l2997:	
  5778  1DE5  0876               	movf	__tdiv_to_l_@f2+2,w
  5779  1DE6  0272               	subwf	__tdiv_to_l_@f1+2,w
  5780  1DE7  1D03               	skipz
  5781  1DE8  2DEF               	goto	u4615
  5782  1DE9  0875               	movf	__tdiv_to_l_@f2+1,w
  5783  1DEA  0271               	subwf	__tdiv_to_l_@f1+1,w
  5784  1DEB  1D03               	skipz
  5785  1DEC  2DEF               	goto	u4615
  5786  1DED  0874               	movf	__tdiv_to_l_@f2,w
  5787  1DEE  0270               	subwf	__tdiv_to_l_@f1,w
  5788  1DEF                     u4615:	
  5789  1DEF  1C03               	skipc
  5790  1DF0  2DF2               	goto	u4611
  5791  1DF1  2DF3               	goto	u4610
  5792  1DF2                     u4611:	
  5793  1DF2  2DFE               	goto	l3003
  5794  1DF3                     u4610:	
  5795  1DF3                     l2999:	
  5796  1DF3  0874               	movf	__tdiv_to_l_@f2,w
  5797  1DF4  02F0               	subwf	__tdiv_to_l_@f1,f
  5798  1DF5  0875               	movf	__tdiv_to_l_@f2+1,w
  5799  1DF6  1C03               	skipc
  5800  1DF7  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5801  1DF8  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5802  1DF9  0876               	movf	__tdiv_to_l_@f2+2,w
  5803  1DFA  1C03               	skipc
  5804  1DFB  0A76               	incf	__tdiv_to_l_@f2+2,w
  5805  1DFC  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5806  1DFD                     l3001:	
  5807  1DFD  1420               	bsf	__tdiv_to_l_@quot,0
  5808  1DFE                     l3003:	
  5809  1DFE  3001               	movlw	1
  5810  1DFF                     u4625:	
  5811  1DFF  1003               	clrc
  5812  1E00  0DF0               	rlf	__tdiv_to_l_@f1,f
  5813  1E01  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5814  1E02  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5815  1E03  3EFF               	addlw	-1
  5816  1E04  1D03               	skipz
  5817  1E05  2DFF               	goto	u4625
  5818  1E06                     l3005:	
  5819  1E06  3001               	movlw	1
  5820  1E07  02A4               	subwf	__tdiv_to_l_@cntr,f
  5821  1E08  1D03               	btfss	3,2
  5822  1E09  2E0B               	goto	u4631
  5823  1E0A  2E0C               	goto	u4630
  5824  1E0B                     u4631:	
  5825  1E0B  2DDC               	goto	l2995
  5826  1E0C                     u4630:	
  5827  1E0C                     l559:	
  5828  1E0C  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5829  1E0D  2E0F               	goto	u4641
  5830  1E0E  2E10               	goto	u4640
  5831  1E0F                     u4641:	
  5832  1E0F  2E2A               	goto	l3015
  5833  1E10                     u4640:	
  5834  1E10                     l3007:	
  5835  1E10  0825               	movf	__tdiv_to_l_@exp1,w
  5836  1E11  3A80               	xorlw	128
  5837  1E12  3E97               	addlw	151
  5838  1E13  1803               	skipnc
  5839  1E14  2E16               	goto	u4651
  5840  1E15  2E17               	goto	u4650
  5841  1E16                     u4651:	
  5842  1E16  2E18               	goto	l3013
  5843  1E17                     u4650:	
  5844  1E17  2DA0               	goto	l2977
  5845  1E18                     l3013:	
  5846  1E18  3001               	movlw	1
  5847  1E19                     u4665:	
  5848  1E19  1003               	clrc
  5849  1E1A  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5850  1E1B  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5851  1E1C  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5852  1E1D  0CA0               	rrf	__tdiv_to_l_@quot,f
  5853  1E1E  3EFF               	addlw	-1
  5854  1E1F  1D03               	skipz
  5855  1E20  2E19               	goto	u4665
  5856  1E21  3001               	movlw	1
  5857  1E22  00F8               	movwf	??__tdiv_to_l_
  5858  1E23  0878               	movf	??__tdiv_to_l_,w
  5859  1E24  07A5               	addwf	__tdiv_to_l_@exp1,f
  5860  1E25  1D03               	btfss	3,2
  5861  1E26  2E28               	goto	u4671
  5862  1E27  2E29               	goto	u4670
  5863  1E28                     u4671:	
  5864  1E28  2E18               	goto	l3013
  5865  1E29                     u4670:	
  5866  1E29  2E41               	goto	l3023
  5867  1E2A                     l3015:	
  5868  1E2A  3018               	movlw	24
  5869  1E2B  0225               	subwf	__tdiv_to_l_@exp1,w
  5870  1E2C  1C03               	skipc
  5871  1E2D  2E2F               	goto	u4681
  5872  1E2E  2E30               	goto	u4680
  5873  1E2F                     u4681:	
  5874  1E2F  2E3C               	goto	l566
  5875  1E30                     u4680:	
  5876  1E30  2DA0               	goto	l2977
  5877  1E31                     l3021:	
  5878  1E31  3001               	movlw	1
  5879  1E32  00F8               	movwf	??__tdiv_to_l_
  5880  1E33                     u4695:	
  5881  1E33  1003               	clrc
  5882  1E34  0DA0               	rlf	__tdiv_to_l_@quot,f
  5883  1E35  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5884  1E36  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5885  1E37  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5886  1E38  0BF8               	decfsz	??__tdiv_to_l_,f
  5887  1E39  2E33               	goto	u4695
  5888  1E3A  3001               	movlw	1
  5889  1E3B  02A5               	subwf	__tdiv_to_l_@exp1,f
  5890  1E3C                     l566:	
  5891  1E3C  0825               	movf	__tdiv_to_l_@exp1,w
  5892  1E3D  1D03               	btfss	3,2
  5893  1E3E  2E40               	goto	u4701
  5894  1E3F  2E41               	goto	u4700
  5895  1E40                     u4701:	
  5896  1E40  2E31               	goto	l3021
  5897  1E41                     u4700:	
  5898  1E41                     l3023:	
  5899  1E41  0823               	movf	__tdiv_to_l_@quot+3,w
  5900  1E42  00F3               	movwf	?__tdiv_to_l_+3
  5901  1E43  0822               	movf	__tdiv_to_l_@quot+2,w
  5902  1E44  00F2               	movwf	?__tdiv_to_l_+2
  5903  1E45  0821               	movf	__tdiv_to_l_@quot+1,w
  5904  1E46  00F1               	movwf	?__tdiv_to_l_+1
  5905  1E47  0820               	movf	__tdiv_to_l_@quot,w
  5906  1E48  00F0               	movwf	?__tdiv_to_l_
  5907  1E49                     l555:	
  5908  1E49  0008               	return
  5909  1E4A                     __end_of__tdiv_to_l_:	
  5910                           
  5911                           	psect	text12
  5912  107F                     __ptext12:	
  5913 ;; *************** function __div_to_l_ *****************
  5914 ;; Defined at:
  5915 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  f1              4    0[COMMON] unsigned long 
  5918 ;;  f2              4    4[COMMON] unsigned long 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  quot            4    0[BANK0 ] unsigned long 
  5921 ;;  exp1            1    5[BANK0 ] unsigned char 
  5922 ;;  cntr            1    4[BANK0 ] unsigned char 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  4    0[COMMON] unsigned long 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5932 ;;      Params:         8       0       0       0       0
  5933 ;;      Locals:         0       6       0       0       0
  5934 ;;      Temps:          1       0       0       0       0
  5935 ;;      Totals:         9       6       0       0       0
  5936 ;;Total ram usage:       15 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_sprintf
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function __div_to_l_
  5947  107F                     __div_to_l_:	
  5948  107F                     l3027:	
  5949                           ;incstack = 0
  5950                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5951                           
  5952  107F  1003               	clrc
  5953  1080  0D72               	rlf	__div_to_l_@f1+2,w
  5954  1081  0D73               	rlf	__div_to_l_@f1+3,w
  5955  1082  00F8               	movwf	??__div_to_l_
  5956  1083  0878               	movf	??__div_to_l_,w
  5957  1084  1283               	bcf	3,5	;RP0=0, select bank0
  5958  1085  1303               	bcf	3,6	;RP1=0, select bank0
  5959  1086  00A5               	movwf	__div_to_l_@exp1
  5960  1087  0825               	movf	__div_to_l_@exp1,w
  5961  1088  1D03               	btfss	3,2
  5962  1089  288B               	goto	u4711
  5963  108A  288C               	goto	u4710
  5964  108B                     u4711:	
  5965  108B  2895               	goto	l3033
  5966  108C                     u4710:	
  5967  108C                     l3029:	
  5968  108C  3000               	movlw	0
  5969  108D  00F3               	movwf	?__div_to_l_+3
  5970  108E  3000               	movlw	0
  5971  108F  00F2               	movwf	?__div_to_l_+2
  5972  1090  3000               	movlw	0
  5973  1091  00F1               	movwf	?__div_to_l_+1
  5974  1092  3000               	movlw	0
  5975  1093  00F0               	movwf	?__div_to_l_
  5976  1094  293C               	goto	l508
  5977  1095                     l3033:	
  5978  1095  1003               	clrc
  5979  1096  0D76               	rlf	__div_to_l_@f2+2,w
  5980  1097  0D77               	rlf	__div_to_l_@f2+3,w
  5981  1098  00F8               	movwf	??__div_to_l_
  5982  1099  0878               	movf	??__div_to_l_,w
  5983  109A  00A4               	movwf	__div_to_l_@cntr
  5984  109B  0824               	movf	__div_to_l_@cntr,w
  5985  109C  1D03               	btfss	3,2
  5986  109D  289F               	goto	u4721
  5987  109E  28A0               	goto	u4720
  5988  109F                     u4721:	
  5989  109F  28A1               	goto	l509
  5990  10A0                     u4720:	
  5991  10A0  288C               	goto	l3029
  5992  10A1                     l509:	
  5993  10A1  17F2               	bsf	__div_to_l_@f1+2,7
  5994  10A2                     l3039:	
  5995  10A2  30FF               	movlw	255
  5996  10A3  05F0               	andwf	__div_to_l_@f1,f
  5997  10A4  30FF               	movlw	255
  5998  10A5  05F1               	andwf	__div_to_l_@f1+1,f
  5999  10A6  30FF               	movlw	255
  6000  10A7  05F2               	andwf	__div_to_l_@f1+2,f
  6001  10A8  3000               	movlw	0
  6002  10A9  05F3               	andwf	__div_to_l_@f1+3,f
  6003  10AA                     l3041:	
  6004  10AA  17F6               	bsf	__div_to_l_@f2+2,7
  6005  10AB  30FF               	movlw	255
  6006  10AC  05F4               	andwf	__div_to_l_@f2,f
  6007  10AD  30FF               	movlw	255
  6008  10AE  05F5               	andwf	__div_to_l_@f2+1,f
  6009  10AF  30FF               	movlw	255
  6010  10B0  05F6               	andwf	__div_to_l_@f2+2,f
  6011  10B1  3000               	movlw	0
  6012  10B2  05F7               	andwf	__div_to_l_@f2+3,f
  6013  10B3  3000               	movlw	0
  6014  10B4  00A3               	movwf	__div_to_l_@quot+3
  6015  10B5  3000               	movlw	0
  6016  10B6  00A2               	movwf	__div_to_l_@quot+2
  6017  10B7  3000               	movlw	0
  6018  10B8  00A1               	movwf	__div_to_l_@quot+1
  6019  10B9  3000               	movlw	0
  6020  10BA  00A0               	movwf	__div_to_l_@quot
  6021  10BB                     l3043:	
  6022  10BB  307F               	movlw	127
  6023  10BC  02A5               	subwf	__div_to_l_@exp1,f
  6024  10BD                     l3045:	
  6025  10BD  30A0               	movlw	160
  6026  10BE  0724               	addwf	__div_to_l_@cntr,w
  6027  10BF  00F8               	movwf	??__div_to_l_
  6028  10C0  0878               	movf	??__div_to_l_,w
  6029  10C1  02A5               	subwf	__div_to_l_@exp1,f
  6030  10C2  3020               	movlw	32
  6031  10C3  00F8               	movwf	??__div_to_l_
  6032  10C4  0878               	movf	??__div_to_l_,w
  6033  10C5  00A4               	movwf	__div_to_l_@cntr
  6034  10C6                     l3047:	
  6035  10C6  3001               	movlw	1
  6036  10C7  00F8               	movwf	??__div_to_l_
  6037  10C8                     u4735:	
  6038  10C8  1003               	clrc
  6039  10C9  0DA0               	rlf	__div_to_l_@quot,f
  6040  10CA  0DA1               	rlf	__div_to_l_@quot+1,f
  6041  10CB  0DA2               	rlf	__div_to_l_@quot+2,f
  6042  10CC  0DA3               	rlf	__div_to_l_@quot+3,f
  6043  10CD  0BF8               	decfsz	??__div_to_l_,f
  6044  10CE  28C8               	goto	u4735
  6045  10CF                     l3049:	
  6046  10CF  0877               	movf	__div_to_l_@f2+3,w
  6047  10D0  0273               	subwf	__div_to_l_@f1+3,w
  6048  10D1  1D03               	skipz
  6049  10D2  28DD               	goto	u4745
  6050  10D3  0876               	movf	__div_to_l_@f2+2,w
  6051  10D4  0272               	subwf	__div_to_l_@f1+2,w
  6052  10D5  1D03               	skipz
  6053  10D6  28DD               	goto	u4745
  6054  10D7  0875               	movf	__div_to_l_@f2+1,w
  6055  10D8  0271               	subwf	__div_to_l_@f1+1,w
  6056  10D9  1D03               	skipz
  6057  10DA  28DD               	goto	u4745
  6058  10DB  0874               	movf	__div_to_l_@f2,w
  6059  10DC  0270               	subwf	__div_to_l_@f1,w
  6060  10DD                     u4745:	
  6061  10DD  1C03               	skipc
  6062  10DE  28E0               	goto	u4741
  6063  10DF  28E1               	goto	u4740
  6064  10E0                     u4741:	
  6065  10E0  28F0               	goto	l3055
  6066  10E1                     u4740:	
  6067  10E1                     l3051:	
  6068  10E1  0874               	movf	__div_to_l_@f2,w
  6069  10E2  02F0               	subwf	__div_to_l_@f1,f
  6070  10E3  0875               	movf	__div_to_l_@f2+1,w
  6071  10E4  1C03               	skipc
  6072  10E5  0F75               	incfsz	__div_to_l_@f2+1,w
  6073  10E6  02F1               	subwf	__div_to_l_@f1+1,f
  6074  10E7  0876               	movf	__div_to_l_@f2+2,w
  6075  10E8  1C03               	skipc
  6076  10E9  0F76               	incfsz	__div_to_l_@f2+2,w
  6077  10EA  02F2               	subwf	__div_to_l_@f1+2,f
  6078  10EB  0877               	movf	__div_to_l_@f2+3,w
  6079  10EC  1C03               	skipc
  6080  10ED  0F77               	incfsz	__div_to_l_@f2+3,w
  6081  10EE  02F3               	subwf	__div_to_l_@f1+3,f
  6082  10EF                     l3053:	
  6083  10EF  1420               	bsf	__div_to_l_@quot,0
  6084  10F0                     l3055:	
  6085  10F0  3001               	movlw	1
  6086  10F1  00F8               	movwf	??__div_to_l_
  6087  10F2                     u4755:	
  6088  10F2  1003               	clrc
  6089  10F3  0DF0               	rlf	__div_to_l_@f1,f
  6090  10F4  0DF1               	rlf	__div_to_l_@f1+1,f
  6091  10F5  0DF2               	rlf	__div_to_l_@f1+2,f
  6092  10F6  0DF3               	rlf	__div_to_l_@f1+3,f
  6093  10F7  0BF8               	decfsz	??__div_to_l_,f
  6094  10F8  28F2               	goto	u4755
  6095  10F9                     l3057:	
  6096  10F9  3001               	movlw	1
  6097  10FA  02A4               	subwf	__div_to_l_@cntr,f
  6098  10FB  1D03               	btfss	3,2
  6099  10FC  28FE               	goto	u4761
  6100  10FD  28FF               	goto	u4760
  6101  10FE                     u4761:	
  6102  10FE  28C6               	goto	l3047
  6103  10FF                     u4760:	
  6104  10FF                     l512:	
  6105  10FF  1FA5               	btfss	__div_to_l_@exp1,7
  6106  1100  2902               	goto	u4771
  6107  1101  2903               	goto	u4770
  6108  1102                     u4771:	
  6109  1102  291D               	goto	l3067
  6110  1103                     u4770:	
  6111  1103                     l3059:	
  6112  1103  0825               	movf	__div_to_l_@exp1,w
  6113  1104  3A80               	xorlw	128
  6114  1105  3E9F               	addlw	159
  6115  1106  1803               	skipnc
  6116  1107  2909               	goto	u4781
  6117  1108  290A               	goto	u4780
  6118  1109                     u4781:	
  6119  1109  290B               	goto	l3065
  6120  110A                     u4780:	
  6121  110A  288C               	goto	l3029
  6122  110B                     l3065:	
  6123  110B  3001               	movlw	1
  6124  110C                     u4795:	
  6125  110C  1003               	clrc
  6126  110D  0CA3               	rrf	__div_to_l_@quot+3,f
  6127  110E  0CA2               	rrf	__div_to_l_@quot+2,f
  6128  110F  0CA1               	rrf	__div_to_l_@quot+1,f
  6129  1110  0CA0               	rrf	__div_to_l_@quot,f
  6130  1111  3EFF               	addlw	-1
  6131  1112  1D03               	skipz
  6132  1113  290C               	goto	u4795
  6133  1114  3001               	movlw	1
  6134  1115  00F8               	movwf	??__div_to_l_
  6135  1116  0878               	movf	??__div_to_l_,w
  6136  1117  07A5               	addwf	__div_to_l_@exp1,f
  6137  1118  1D03               	btfss	3,2
  6138  1119  291B               	goto	u4801
  6139  111A  291C               	goto	u4800
  6140  111B                     u4801:	
  6141  111B  290B               	goto	l3065
  6142  111C                     u4800:	
  6143  111C  2934               	goto	l3075
  6144  111D                     l3067:	
  6145  111D  3020               	movlw	32
  6146  111E  0225               	subwf	__div_to_l_@exp1,w
  6147  111F  1C03               	skipc
  6148  1120  2922               	goto	u4811
  6149  1121  2923               	goto	u4810
  6150  1122                     u4811:	
  6151  1122  292F               	goto	l519
  6152  1123                     u4810:	
  6153  1123  288C               	goto	l3029
  6154  1124                     l3073:	
  6155  1124  3001               	movlw	1
  6156  1125  00F8               	movwf	??__div_to_l_
  6157  1126                     u4825:	
  6158  1126  1003               	clrc
  6159  1127  0DA0               	rlf	__div_to_l_@quot,f
  6160  1128  0DA1               	rlf	__div_to_l_@quot+1,f
  6161  1129  0DA2               	rlf	__div_to_l_@quot+2,f
  6162  112A  0DA3               	rlf	__div_to_l_@quot+3,f
  6163  112B  0BF8               	decfsz	??__div_to_l_,f
  6164  112C  2926               	goto	u4825
  6165  112D  3001               	movlw	1
  6166  112E  02A5               	subwf	__div_to_l_@exp1,f
  6167  112F                     l519:	
  6168  112F  0825               	movf	__div_to_l_@exp1,w
  6169  1130  1D03               	btfss	3,2
  6170  1131  2933               	goto	u4831
  6171  1132  2934               	goto	u4830
  6172  1133                     u4831:	
  6173  1133  2924               	goto	l3073
  6174  1134                     u4830:	
  6175  1134                     l3075:	
  6176  1134  0823               	movf	__div_to_l_@quot+3,w
  6177  1135  00F3               	movwf	?__div_to_l_+3
  6178  1136  0822               	movf	__div_to_l_@quot+2,w
  6179  1137  00F2               	movwf	?__div_to_l_+2
  6180  1138  0821               	movf	__div_to_l_@quot+1,w
  6181  1139  00F1               	movwf	?__div_to_l_+1
  6182  113A  0820               	movf	__div_to_l_@quot,w
  6183  113B  00F0               	movwf	?__div_to_l_
  6184  113C                     l508:	
  6185  113C  0008               	return
  6186  113D                     __end_of__div_to_l_:	
  6187                           
  6188                           	psect	text13
  6189  1CD3                     __ptext13:	
  6190 ;; *************** function ___xxtofl *****************
  6191 ;; Defined at:
  6192 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  sign            1    wreg     unsigned char 
  6195 ;;  val             4    0[COMMON] long 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;  sign            1    8[COMMON] unsigned char 
  6198 ;;  arg             4   10[COMMON] unsigned long 
  6199 ;;  exp             1    9[COMMON] unsigned char 
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  4    0[COMMON] unsigned char 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2, status,0
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6209 ;;      Params:         4       0       0       0       0
  6210 ;;      Locals:         6       0       0       0       0
  6211 ;;      Temps:          4       0       0       0       0
  6212 ;;      Totals:        14       0       0       0       0
  6213 ;;Total ram usage:       14 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; This function calls:
  6216 ;;		Nothing
  6217 ;; This function is called by:
  6218 ;;		_main
  6219 ;;		_sprintf
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           
  6224                           ;psect for function ___xxtofl
  6225  1CD3                     ___xxtofl:	
  6226                           
  6227                           ;incstack = 0
  6228                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6229                           ;___xxtofl@sign stored from wreg
  6230  1CD3  00F8               	movwf	___xxtofl@sign
  6231  1CD4                     l3219:	
  6232  1CD4  0878               	movf	___xxtofl@sign,w
  6233  1CD5  1903               	btfsc	3,2
  6234  1CD6  2CD8               	goto	u5221
  6235  1CD7  2CD9               	goto	u5220
  6236  1CD8                     u5221:	
  6237  1CD8  2CED               	goto	l3225
  6238  1CD9                     u5220:	
  6239  1CD9                     l3221:	
  6240  1CD9  1FF3               	btfss	___xxtofl@val+3,7
  6241  1CDA  2CDC               	goto	u5231
  6242  1CDB  2CDD               	goto	u5230
  6243  1CDC                     u5231:	
  6244  1CDC  2CED               	goto	l3225
  6245  1CDD                     u5230:	
  6246  1CDD                     l3223:	
  6247  1CDD  0970               	comf	___xxtofl@val,w
  6248  1CDE  00FA               	movwf	___xxtofl@arg
  6249  1CDF  0971               	comf	___xxtofl@val+1,w
  6250  1CE0  00FB               	movwf	___xxtofl@arg+1
  6251  1CE1  0972               	comf	___xxtofl@val+2,w
  6252  1CE2  00FC               	movwf	___xxtofl@arg+2
  6253  1CE3  0973               	comf	___xxtofl@val+3,w
  6254  1CE4  00FD               	movwf	___xxtofl@arg+3
  6255  1CE5  0AFA               	incf	___xxtofl@arg,f
  6256  1CE6  1903               	skipnz
  6257  1CE7  0AFB               	incf	___xxtofl@arg+1,f
  6258  1CE8  1903               	skipnz
  6259  1CE9  0AFC               	incf	___xxtofl@arg+2,f
  6260  1CEA  1903               	skipnz
  6261  1CEB  0AFD               	incf	___xxtofl@arg+3,f
  6262  1CEC  2CF5               	goto	l799
  6263  1CED                     l3225:	
  6264  1CED  0873               	movf	___xxtofl@val+3,w
  6265  1CEE  00FD               	movwf	___xxtofl@arg+3
  6266  1CEF  0872               	movf	___xxtofl@val+2,w
  6267  1CF0  00FC               	movwf	___xxtofl@arg+2
  6268  1CF1  0871               	movf	___xxtofl@val+1,w
  6269  1CF2  00FB               	movwf	___xxtofl@arg+1
  6270  1CF3  0870               	movf	___xxtofl@val,w
  6271  1CF4  00FA               	movwf	___xxtofl@arg
  6272  1CF5                     l799:	
  6273  1CF5  0873               	movf	___xxtofl@val+3,w
  6274  1CF6  0472               	iorwf	___xxtofl@val+2,w
  6275  1CF7  0471               	iorwf	___xxtofl@val+1,w
  6276  1CF8  0470               	iorwf	___xxtofl@val,w
  6277  1CF9  1D03               	skipz
  6278  1CFA  2CFC               	goto	u5241
  6279  1CFB  2CFD               	goto	u5240
  6280  1CFC                     u5241:	
  6281  1CFC  2D06               	goto	l3231
  6282  1CFD                     u5240:	
  6283  1CFD                     l3227:	
  6284  1CFD  3000               	movlw	0
  6285  1CFE  00F3               	movwf	?___xxtofl+3
  6286  1CFF  3000               	movlw	0
  6287  1D00  00F2               	movwf	?___xxtofl+2
  6288  1D01  3000               	movlw	0
  6289  1D02  00F1               	movwf	?___xxtofl+1
  6290  1D03  3000               	movlw	0
  6291  1D04  00F0               	movwf	?___xxtofl
  6292  1D05  2D8C               	goto	l801
  6293  1D06                     l3231:	
  6294  1D06  3096               	movlw	150
  6295  1D07  00F4               	movwf	??___xxtofl
  6296  1D08  0874               	movf	??___xxtofl,w
  6297  1D09  00F9               	movwf	___xxtofl@exp
  6298  1D0A  2D18               	goto	l3235
  6299  1D0B                     l3233:	
  6300  1D0B  3001               	movlw	1
  6301  1D0C  00F4               	movwf	??___xxtofl
  6302  1D0D  0874               	movf	??___xxtofl,w
  6303  1D0E  07F9               	addwf	___xxtofl@exp,f
  6304  1D0F  3001               	movlw	1
  6305  1D10                     u5255:	
  6306  1D10  1003               	clrc
  6307  1D11  0CFD               	rrf	___xxtofl@arg+3,f
  6308  1D12  0CFC               	rrf	___xxtofl@arg+2,f
  6309  1D13  0CFB               	rrf	___xxtofl@arg+1,f
  6310  1D14  0CFA               	rrf	___xxtofl@arg,f
  6311  1D15  3EFF               	addlw	-1
  6312  1D16  1D03               	skipz
  6313  1D17  2D10               	goto	u5255
  6314  1D18                     l3235:	
  6315  1D18  30FE               	movlw	254
  6316  1D19  057D               	andwf	___xxtofl@arg+3,w
  6317  1D1A  1D03               	btfss	3,2
  6318  1D1B  2D1D               	goto	u5261
  6319  1D1C  2D1E               	goto	u5260
  6320  1D1D                     u5261:	
  6321  1D1D  2D0B               	goto	l3233
  6322  1D1E                     u5260:	
  6323  1D1E  2D3A               	goto	l805
  6324  1D1F                     l3237:	
  6325  1D1F  3001               	movlw	1
  6326  1D20  00F4               	movwf	??___xxtofl
  6327  1D21  0874               	movf	??___xxtofl,w
  6328  1D22  07F9               	addwf	___xxtofl@exp,f
  6329  1D23                     l3239:	
  6330  1D23  3001               	movlw	1
  6331  1D24  07FA               	addwf	___xxtofl@arg,f
  6332  1D25  3000               	movlw	0
  6333  1D26  1803               	skipnc
  6334  1D27  3001               	movlw	1
  6335  1D28  07FB               	addwf	___xxtofl@arg+1,f
  6336  1D29  3000               	movlw	0
  6337  1D2A  1803               	skipnc
  6338  1D2B  3001               	movlw	1
  6339  1D2C  07FC               	addwf	___xxtofl@arg+2,f
  6340  1D2D  3000               	movlw	0
  6341  1D2E  1803               	skipnc
  6342  1D2F  3001               	movlw	1
  6343  1D30  07FD               	addwf	___xxtofl@arg+3,f
  6344  1D31                     l3241:	
  6345  1D31  3001               	movlw	1
  6346  1D32                     u5275:	
  6347  1D32  1003               	clrc
  6348  1D33  0CFD               	rrf	___xxtofl@arg+3,f
  6349  1D34  0CFC               	rrf	___xxtofl@arg+2,f
  6350  1D35  0CFB               	rrf	___xxtofl@arg+1,f
  6351  1D36  0CFA               	rrf	___xxtofl@arg,f
  6352  1D37  3EFF               	addlw	-1
  6353  1D38  1D03               	skipz
  6354  1D39  2D32               	goto	u5275
  6355  1D3A                     l805:	
  6356  1D3A  30FF               	movlw	255
  6357  1D3B  057D               	andwf	___xxtofl@arg+3,w
  6358  1D3C  1D03               	btfss	3,2
  6359  1D3D  2D3F               	goto	u5281
  6360  1D3E  2D40               	goto	u5280
  6361  1D3F                     u5281:	
  6362  1D3F  2D1F               	goto	l3237
  6363  1D40                     u5280:	
  6364  1D40  2D4C               	goto	l3245
  6365  1D41                     l3243:	
  6366  1D41  3001               	movlw	1
  6367  1D42  02F9               	subwf	___xxtofl@exp,f
  6368  1D43  3001               	movlw	1
  6369  1D44  00F4               	movwf	??___xxtofl
  6370  1D45                     u5295:	
  6371  1D45  1003               	clrc
  6372  1D46  0DFA               	rlf	___xxtofl@arg,f
  6373  1D47  0DFB               	rlf	___xxtofl@arg+1,f
  6374  1D48  0DFC               	rlf	___xxtofl@arg+2,f
  6375  1D49  0DFD               	rlf	___xxtofl@arg+3,f
  6376  1D4A  0BF4               	decfsz	??___xxtofl,f
  6377  1D4B  2D45               	goto	u5295
  6378  1D4C                     l3245:	
  6379  1D4C  1BFC               	btfsc	___xxtofl@arg+2,7
  6380  1D4D  2D4F               	goto	u5301
  6381  1D4E  2D50               	goto	u5300
  6382  1D4F                     u5301:	
  6383  1D4F  2D56               	goto	l812
  6384  1D50                     u5300:	
  6385  1D50                     l3247:	
  6386  1D50  3002               	movlw	2
  6387  1D51  0279               	subwf	___xxtofl@exp,w
  6388  1D52  1803               	skipnc
  6389  1D53  2D55               	goto	u5311
  6390  1D54  2D56               	goto	u5310
  6391  1D55                     u5311:	
  6392  1D55  2D41               	goto	l3243
  6393  1D56                     u5310:	
  6394  1D56                     l812:	
  6395  1D56  1879               	btfsc	___xxtofl@exp,0
  6396  1D57  2D59               	goto	u5321
  6397  1D58  2D5A               	goto	u5320
  6398  1D59                     u5321:	
  6399  1D59  2D62               	goto	l813
  6400  1D5A                     u5320:	
  6401  1D5A                     l3249:	
  6402  1D5A  30FF               	movlw	255
  6403  1D5B  05FA               	andwf	___xxtofl@arg,f
  6404  1D5C  30FF               	movlw	255
  6405  1D5D  05FB               	andwf	___xxtofl@arg+1,f
  6406  1D5E  307F               	movlw	127
  6407  1D5F  05FC               	andwf	___xxtofl@arg+2,f
  6408  1D60  30FF               	movlw	255
  6409  1D61  05FD               	andwf	___xxtofl@arg+3,f
  6410  1D62                     l813:	
  6411  1D62  1003               	clrc
  6412  1D63  0CF9               	rrf	___xxtofl@exp,f
  6413  1D64                     l3251:	
  6414  1D64  0879               	movf	___xxtofl@exp,w
  6415  1D65  00F4               	movwf	??___xxtofl
  6416  1D66  01F5               	clrf	??___xxtofl+1
  6417  1D67  01F6               	clrf	??___xxtofl+2
  6418  1D68  01F7               	clrf	??___xxtofl+3
  6419  1D69  3018               	movlw	24
  6420  1D6A                     u5335:	
  6421  1D6A  1003               	clrc
  6422  1D6B  0DF4               	rlf	??___xxtofl,f
  6423  1D6C  0DF5               	rlf	??___xxtofl+1,f
  6424  1D6D  0DF6               	rlf	??___xxtofl+2,f
  6425  1D6E  0DF7               	rlf	??___xxtofl+3,f
  6426  1D6F                     u5330:	
  6427  1D6F  3EFF               	addlw	-1
  6428  1D70  1D03               	skipz
  6429  1D71  2D6A               	goto	u5335
  6430  1D72  0874               	movf	??___xxtofl,w
  6431  1D73  04FA               	iorwf	___xxtofl@arg,f
  6432  1D74  0875               	movf	??___xxtofl+1,w
  6433  1D75  04FB               	iorwf	___xxtofl@arg+1,f
  6434  1D76  0876               	movf	??___xxtofl+2,w
  6435  1D77  04FC               	iorwf	___xxtofl@arg+2,f
  6436  1D78  0877               	movf	??___xxtofl+3,w
  6437  1D79  04FD               	iorwf	___xxtofl@arg+3,f
  6438  1D7A                     l3253:	
  6439  1D7A  0878               	movf	___xxtofl@sign,w
  6440  1D7B  1903               	btfsc	3,2
  6441  1D7C  2D7E               	goto	u5341
  6442  1D7D  2D7F               	goto	u5340
  6443  1D7E                     u5341:	
  6444  1D7E  2D84               	goto	l3259
  6445  1D7F                     u5340:	
  6446  1D7F                     l3255:	
  6447  1D7F  1FF3               	btfss	___xxtofl@val+3,7
  6448  1D80  2D82               	goto	u5351
  6449  1D81  2D83               	goto	u5350
  6450  1D82                     u5351:	
  6451  1D82  2D84               	goto	l3259
  6452  1D83                     u5350:	
  6453  1D83                     l3257:	
  6454  1D83  17FD               	bsf	___xxtofl@arg+3,7
  6455  1D84                     l3259:	
  6456  1D84  087D               	movf	___xxtofl@arg+3,w
  6457  1D85  00F3               	movwf	?___xxtofl+3
  6458  1D86  087C               	movf	___xxtofl@arg+2,w
  6459  1D87  00F2               	movwf	?___xxtofl+2
  6460  1D88  087B               	movf	___xxtofl@arg+1,w
  6461  1D89  00F1               	movwf	?___xxtofl+1
  6462  1D8A  087A               	movf	___xxtofl@arg,w
  6463  1D8B  00F0               	movwf	?___xxtofl
  6464  1D8C                     l801:	
  6465  1D8C  0008               	return
  6466  1D8D                     __end_of___xxtofl:	
  6467                           
  6468                           	psect	text14
  6469  194D                     __ptext14:	
  6470 ;; *************** function ___wmul *****************
  6471 ;; Defined at:
  6472 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  multiplier      2    0[COMMON] unsigned int 
  6475 ;;  multiplicand    2    2[COMMON] unsigned int 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  product         2    4[COMMON] unsigned int 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  2    0[COMMON] unsigned int 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6487 ;;      Params:         4       0       0       0       0
  6488 ;;      Locals:         2       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0
  6490 ;;      Totals:         6       0       0       0       0
  6491 ;;Total ram usage:        6 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_sprintf
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           
  6501                           ;psect for function ___wmul
  6502  194D                     ___wmul:	
  6503  194D                     l3079:	
  6504                           ;incstack = 0
  6505                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6506                           
  6507  194D  01F4               	clrf	___wmul@product
  6508  194E  01F5               	clrf	___wmul@product+1
  6509  194F                     l3081:	
  6510  194F  1C70               	btfss	___wmul@multiplier,0
  6511  1950  2952               	goto	u4841
  6512  1951  2953               	goto	u4840
  6513  1952                     u4841:	
  6514  1952  2959               	goto	l338
  6515  1953                     u4840:	
  6516  1953                     l3083:	
  6517  1953  0872               	movf	___wmul@multiplicand,w
  6518  1954  07F4               	addwf	___wmul@product,f
  6519  1955  1803               	skipnc
  6520  1956  0AF5               	incf	___wmul@product+1,f
  6521  1957  0873               	movf	___wmul@multiplicand+1,w
  6522  1958  07F5               	addwf	___wmul@product+1,f
  6523  1959                     l338:	
  6524  1959  3001               	movlw	1
  6525  195A                     u4855:	
  6526  195A  1003               	clrc
  6527  195B  0DF2               	rlf	___wmul@multiplicand,f
  6528  195C  0DF3               	rlf	___wmul@multiplicand+1,f
  6529  195D  3EFF               	addlw	-1
  6530  195E  1D03               	skipz
  6531  195F  295A               	goto	u4855
  6532  1960                     l3085:	
  6533  1960  3001               	movlw	1
  6534  1961                     u4865:	
  6535  1961  1003               	clrc
  6536  1962  0CF1               	rrf	___wmul@multiplier+1,f
  6537  1963  0CF0               	rrf	___wmul@multiplier,f
  6538  1964  3EFF               	addlw	-1
  6539  1965  1D03               	skipz
  6540  1966  2961               	goto	u4865
  6541  1967                     l3087:	
  6542  1967  0870               	movf	___wmul@multiplier,w
  6543  1968  0471               	iorwf	___wmul@multiplier+1,w
  6544  1969  1D03               	btfss	3,2
  6545  196A  296C               	goto	u4871
  6546  196B  296D               	goto	u4870
  6547  196C                     u4871:	
  6548  196C  294F               	goto	l3081
  6549  196D                     u4870:	
  6550  196D                     l3089:	
  6551  196D  0875               	movf	___wmul@product+1,w
  6552  196E  00F1               	movwf	?___wmul+1
  6553  196F  0874               	movf	___wmul@product,w
  6554  1970  00F0               	movwf	?___wmul
  6555  1971                     l340:	
  6556  1971  0008               	return
  6557  1972                     __end_of___wmul:	
  6558                           
  6559                           	psect	text15
  6560  1B1E                     __ptext15:	
  6561 ;; *************** function ___llmod *****************
  6562 ;; Defined at:
  6563 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  divisor         4    0[COMMON] unsigned long 
  6566 ;;  dividend        4    4[COMMON] unsigned long 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  counter         1    9[COMMON] unsigned char 
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  4    0[COMMON] unsigned long 
  6571 ;; Registers used:
  6572 ;;		wreg, status,2, status,0
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6578 ;;      Params:         8       0       0       0       0
  6579 ;;      Locals:         1       0       0       0       0
  6580 ;;      Temps:          1       0       0       0       0
  6581 ;;      Totals:        10       0       0       0       0
  6582 ;;Total ram usage:       10 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_sprintf
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           
  6592                           ;psect for function ___llmod
  6593  1B1E                     ___llmod:	
  6594  1B1E                     l3193:	
  6595                           ;incstack = 0
  6596                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6597                           
  6598  1B1E  0873               	movf	___llmod@divisor+3,w
  6599  1B1F  0472               	iorwf	___llmod@divisor+2,w
  6600  1B20  0471               	iorwf	___llmod@divisor+1,w
  6601  1B21  0470               	iorwf	___llmod@divisor,w
  6602  1B22  1903               	skipnz
  6603  1B23  2B25               	goto	u5161
  6604  1B24  2B26               	goto	u5160
  6605  1B25                     u5161:	
  6606  1B25  2B69               	goto	l3209
  6607  1B26                     u5160:	
  6608  1B26                     l3195:	
  6609  1B26  01F9               	clrf	___llmod@counter
  6610  1B27  0AF9               	incf	___llmod@counter,f
  6611  1B28  2B36               	goto	l3199
  6612  1B29                     l3197:	
  6613  1B29  3001               	movlw	1
  6614  1B2A  00F8               	movwf	??___llmod
  6615  1B2B                     u5175:	
  6616  1B2B  1003               	clrc
  6617  1B2C  0DF0               	rlf	___llmod@divisor,f
  6618  1B2D  0DF1               	rlf	___llmod@divisor+1,f
  6619  1B2E  0DF2               	rlf	___llmod@divisor+2,f
  6620  1B2F  0DF3               	rlf	___llmod@divisor+3,f
  6621  1B30  0BF8               	decfsz	??___llmod,f
  6622  1B31  2B2B               	goto	u5175
  6623  1B32  3001               	movlw	1
  6624  1B33  00F8               	movwf	??___llmod
  6625  1B34  0878               	movf	??___llmod,w
  6626  1B35  07F9               	addwf	___llmod@counter,f
  6627  1B36                     l3199:	
  6628  1B36  1FF3               	btfss	___llmod@divisor+3,7
  6629  1B37  2B39               	goto	u5181
  6630  1B38  2B3A               	goto	u5180
  6631  1B39                     u5181:	
  6632  1B39  2B29               	goto	l3197
  6633  1B3A                     u5180:	
  6634  1B3A                     l3201:	
  6635  1B3A  0873               	movf	___llmod@divisor+3,w
  6636  1B3B  0277               	subwf	___llmod@dividend+3,w
  6637  1B3C  1D03               	skipz
  6638  1B3D  2B48               	goto	u5195
  6639  1B3E  0872               	movf	___llmod@divisor+2,w
  6640  1B3F  0276               	subwf	___llmod@dividend+2,w
  6641  1B40  1D03               	skipz
  6642  1B41  2B48               	goto	u5195
  6643  1B42  0871               	movf	___llmod@divisor+1,w
  6644  1B43  0275               	subwf	___llmod@dividend+1,w
  6645  1B44  1D03               	skipz
  6646  1B45  2B48               	goto	u5195
  6647  1B46  0870               	movf	___llmod@divisor,w
  6648  1B47  0274               	subwf	___llmod@dividend,w
  6649  1B48                     u5195:	
  6650  1B48  1C03               	skipc
  6651  1B49  2B4B               	goto	u5191
  6652  1B4A  2B4C               	goto	u5190
  6653  1B4B                     u5191:	
  6654  1B4B  2B5A               	goto	l3205
  6655  1B4C                     u5190:	
  6656  1B4C                     l3203:	
  6657  1B4C  0870               	movf	___llmod@divisor,w
  6658  1B4D  02F4               	subwf	___llmod@dividend,f
  6659  1B4E  0871               	movf	___llmod@divisor+1,w
  6660  1B4F  1C03               	skipc
  6661  1B50  0F71               	incfsz	___llmod@divisor+1,w
  6662  1B51  02F5               	subwf	___llmod@dividend+1,f
  6663  1B52  0872               	movf	___llmod@divisor+2,w
  6664  1B53  1C03               	skipc
  6665  1B54  0F72               	incfsz	___llmod@divisor+2,w
  6666  1B55  02F6               	subwf	___llmod@dividend+2,f
  6667  1B56  0873               	movf	___llmod@divisor+3,w
  6668  1B57  1C03               	skipc
  6669  1B58  0F73               	incfsz	___llmod@divisor+3,w
  6670  1B59  02F7               	subwf	___llmod@dividend+3,f
  6671  1B5A                     l3205:	
  6672  1B5A  3001               	movlw	1
  6673  1B5B                     u5205:	
  6674  1B5B  1003               	clrc
  6675  1B5C  0CF3               	rrf	___llmod@divisor+3,f
  6676  1B5D  0CF2               	rrf	___llmod@divisor+2,f
  6677  1B5E  0CF1               	rrf	___llmod@divisor+1,f
  6678  1B5F  0CF0               	rrf	___llmod@divisor,f
  6679  1B60  3EFF               	addlw	-1
  6680  1B61  1D03               	skipz
  6681  1B62  2B5B               	goto	u5205
  6682  1B63                     l3207:	
  6683  1B63  3001               	movlw	1
  6684  1B64  02F9               	subwf	___llmod@counter,f
  6685  1B65  1D03               	btfss	3,2
  6686  1B66  2B68               	goto	u5211
  6687  1B67  2B69               	goto	u5210
  6688  1B68                     u5211:	
  6689  1B68  2B3A               	goto	l3201
  6690  1B69                     u5210:	
  6691  1B69                     l3209:	
  6692  1B69  0877               	movf	___llmod@dividend+3,w
  6693  1B6A  00F3               	movwf	?___llmod+3
  6694  1B6B  0876               	movf	___llmod@dividend+2,w
  6695  1B6C  00F2               	movwf	?___llmod+2
  6696  1B6D  0875               	movf	___llmod@dividend+1,w
  6697  1B6E  00F1               	movwf	?___llmod+1
  6698  1B6F  0874               	movf	___llmod@dividend,w
  6699  1B70  00F0               	movwf	?___llmod
  6700  1B71                     l594:	
  6701  1B71  0008               	return
  6702  1B72                     __end_of___llmod:	
  6703                           
  6704                           	psect	text16
  6705  1BCB                     __ptext16:	
  6706 ;; *************** function ___lldiv *****************
  6707 ;; Defined at:
  6708 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  divisor         4    0[COMMON] unsigned long 
  6711 ;;  dividend        4    4[COMMON] unsigned long 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  quotient        4    9[COMMON] unsigned long 
  6714 ;;  counter         1   13[COMMON] unsigned char 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  4    0[COMMON] unsigned long 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6724 ;;      Params:         8       0       0       0       0
  6725 ;;      Locals:         5       0       0       0       0
  6726 ;;      Temps:          1       0       0       0       0
  6727 ;;      Totals:        14       0       0       0       0
  6728 ;;Total ram usage:       14 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_sprintf
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           
  6738                           ;psect for function ___lldiv
  6739  1BCB                     ___lldiv:	
  6740  1BCB                     l3093:	
  6741                           ;incstack = 0
  6742                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6743                           
  6744  1BCB  3000               	movlw	0
  6745  1BCC  00FC               	movwf	___lldiv@quotient+3
  6746  1BCD  3000               	movlw	0
  6747  1BCE  00FB               	movwf	___lldiv@quotient+2
  6748  1BCF  3000               	movlw	0
  6749  1BD0  00FA               	movwf	___lldiv@quotient+1
  6750  1BD1  3000               	movlw	0
  6751  1BD2  00F9               	movwf	___lldiv@quotient
  6752  1BD3  0873               	movf	___lldiv@divisor+3,w
  6753  1BD4  0472               	iorwf	___lldiv@divisor+2,w
  6754  1BD5  0471               	iorwf	___lldiv@divisor+1,w
  6755  1BD6  0470               	iorwf	___lldiv@divisor,w
  6756  1BD7  1903               	skipnz
  6757  1BD8  2BDA               	goto	u4881
  6758  1BD9  2BDB               	goto	u4880
  6759  1BDA                     u4881:	
  6760  1BDA  2C28               	goto	l3113
  6761  1BDB                     u4880:	
  6762  1BDB                     l3095:	
  6763  1BDB  01FD               	clrf	___lldiv@counter
  6764  1BDC  0AFD               	incf	___lldiv@counter,f
  6765  1BDD  2BEB               	goto	l3099
  6766  1BDE                     l3097:	
  6767  1BDE  3001               	movlw	1
  6768  1BDF  00F8               	movwf	??___lldiv
  6769  1BE0                     u4895:	
  6770  1BE0  1003               	clrc
  6771  1BE1  0DF0               	rlf	___lldiv@divisor,f
  6772  1BE2  0DF1               	rlf	___lldiv@divisor+1,f
  6773  1BE3  0DF2               	rlf	___lldiv@divisor+2,f
  6774  1BE4  0DF3               	rlf	___lldiv@divisor+3,f
  6775  1BE5  0BF8               	decfsz	??___lldiv,f
  6776  1BE6  2BE0               	goto	u4895
  6777  1BE7  3001               	movlw	1
  6778  1BE8  00F8               	movwf	??___lldiv
  6779  1BE9  0878               	movf	??___lldiv,w
  6780  1BEA  07FD               	addwf	___lldiv@counter,f
  6781  1BEB                     l3099:	
  6782  1BEB  1FF3               	btfss	___lldiv@divisor+3,7
  6783  1BEC  2BEE               	goto	u4901
  6784  1BED  2BEF               	goto	u4900
  6785  1BEE                     u4901:	
  6786  1BEE  2BDE               	goto	l3097
  6787  1BEF                     u4900:	
  6788  1BEF                     l3101:	
  6789  1BEF  3001               	movlw	1
  6790  1BF0  00F8               	movwf	??___lldiv
  6791  1BF1                     u4915:	
  6792  1BF1  1003               	clrc
  6793  1BF2  0DF9               	rlf	___lldiv@quotient,f
  6794  1BF3  0DFA               	rlf	___lldiv@quotient+1,f
  6795  1BF4  0DFB               	rlf	___lldiv@quotient+2,f
  6796  1BF5  0DFC               	rlf	___lldiv@quotient+3,f
  6797  1BF6  0BF8               	decfsz	??___lldiv,f
  6798  1BF7  2BF1               	goto	u4915
  6799  1BF8                     l3103:	
  6800  1BF8  0873               	movf	___lldiv@divisor+3,w
  6801  1BF9  0277               	subwf	___lldiv@dividend+3,w
  6802  1BFA  1D03               	skipz
  6803  1BFB  2C06               	goto	u4925
  6804  1BFC  0872               	movf	___lldiv@divisor+2,w
  6805  1BFD  0276               	subwf	___lldiv@dividend+2,w
  6806  1BFE  1D03               	skipz
  6807  1BFF  2C06               	goto	u4925
  6808  1C00  0871               	movf	___lldiv@divisor+1,w
  6809  1C01  0275               	subwf	___lldiv@dividend+1,w
  6810  1C02  1D03               	skipz
  6811  1C03  2C06               	goto	u4925
  6812  1C04  0870               	movf	___lldiv@divisor,w
  6813  1C05  0274               	subwf	___lldiv@dividend,w
  6814  1C06                     u4925:	
  6815  1C06  1C03               	skipc
  6816  1C07  2C09               	goto	u4921
  6817  1C08  2C0A               	goto	u4920
  6818  1C09                     u4921:	
  6819  1C09  2C19               	goto	l3109
  6820  1C0A                     u4920:	
  6821  1C0A                     l3105:	
  6822  1C0A  0870               	movf	___lldiv@divisor,w
  6823  1C0B  02F4               	subwf	___lldiv@dividend,f
  6824  1C0C  0871               	movf	___lldiv@divisor+1,w
  6825  1C0D  1C03               	skipc
  6826  1C0E  0F71               	incfsz	___lldiv@divisor+1,w
  6827  1C0F  02F5               	subwf	___lldiv@dividend+1,f
  6828  1C10  0872               	movf	___lldiv@divisor+2,w
  6829  1C11  1C03               	skipc
  6830  1C12  0F72               	incfsz	___lldiv@divisor+2,w
  6831  1C13  02F6               	subwf	___lldiv@dividend+2,f
  6832  1C14  0873               	movf	___lldiv@divisor+3,w
  6833  1C15  1C03               	skipc
  6834  1C16  0F73               	incfsz	___lldiv@divisor+3,w
  6835  1C17  02F7               	subwf	___lldiv@dividend+3,f
  6836  1C18                     l3107:	
  6837  1C18  1479               	bsf	___lldiv@quotient,0
  6838  1C19                     l3109:	
  6839  1C19  3001               	movlw	1
  6840  1C1A                     u4935:	
  6841  1C1A  1003               	clrc
  6842  1C1B  0CF3               	rrf	___lldiv@divisor+3,f
  6843  1C1C  0CF2               	rrf	___lldiv@divisor+2,f
  6844  1C1D  0CF1               	rrf	___lldiv@divisor+1,f
  6845  1C1E  0CF0               	rrf	___lldiv@divisor,f
  6846  1C1F  3EFF               	addlw	-1
  6847  1C20  1D03               	skipz
  6848  1C21  2C1A               	goto	u4935
  6849  1C22                     l3111:	
  6850  1C22  3001               	movlw	1
  6851  1C23  02FD               	subwf	___lldiv@counter,f
  6852  1C24  1D03               	btfss	3,2
  6853  1C25  2C27               	goto	u4941
  6854  1C26  2C28               	goto	u4940
  6855  1C27                     u4941:	
  6856  1C27  2BEF               	goto	l3101
  6857  1C28                     u4940:	
  6858  1C28                     l3113:	
  6859  1C28  087C               	movf	___lldiv@quotient+3,w
  6860  1C29  00F3               	movwf	?___lldiv+3
  6861  1C2A  087B               	movf	___lldiv@quotient+2,w
  6862  1C2B  00F2               	movwf	?___lldiv+2
  6863  1C2C  087A               	movf	___lldiv@quotient+1,w
  6864  1C2D  00F1               	movwf	?___lldiv+1
  6865  1C2E  0879               	movf	___lldiv@quotient,w
  6866  1C2F  00F0               	movwf	?___lldiv
  6867  1C30                     l374:	
  6868  1C30  0008               	return
  6869  1C31                     __end_of___lldiv:	
  6870                           
  6871                           	psect	text17
  6872  1003                     __ptext17:	
  6873 ;; *************** function ___fltol *****************
  6874 ;; Defined at:
  6875 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  f1              4   49[BANK0 ] unsigned long 
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;  exp1            1   59[BANK0 ] unsigned char 
  6880 ;;  sign1           1   58[BANK0 ] unsigned char 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  4   49[BANK0 ] long 
  6883 ;; Registers used:
  6884 ;;		wreg, status,2, status,0
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6890 ;;      Params:         0       4       0       0       0
  6891 ;;      Locals:         0       2       0       0       0
  6892 ;;      Temps:          0       5       0       0       0
  6893 ;;      Totals:         0      11       0       0       0
  6894 ;;Total ram usage:       11 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; This function calls:
  6897 ;;		Nothing
  6898 ;; This function is called by:
  6899 ;;		_sprintf
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903                           
  6904                           ;psect for function ___fltol
  6905  1003                     ___fltol:	
  6906  1003                     l3157:	
  6907                           ;incstack = 0
  6908                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6909                           
  6910  1003  1003               	clrc
  6911  1004  1283               	bcf	3,5	;RP0=0, select bank0
  6912  1005  1303               	bcf	3,6	;RP1=0, select bank0
  6913  1006  0D53               	rlf	___fltol@f1+2,w
  6914  1007  0D54               	rlf	___fltol@f1+3,w
  6915  1008  00D5               	movwf	??___fltol
  6916  1009  0855               	movf	??___fltol,w
  6917  100A  00DB               	movwf	___fltol@exp1
  6918  100B  085B               	movf	___fltol@exp1,w
  6919  100C  1D03               	btfss	3,2
  6920  100D  280F               	goto	u5061
  6921  100E  2810               	goto	u5060
  6922  100F                     u5061:	
  6923  100F  2819               	goto	l3163
  6924  1010                     u5060:	
  6925  1010                     l3159:	
  6926  1010  3000               	movlw	0
  6927  1011  00D4               	movwf	?___fltol+3
  6928  1012  3000               	movlw	0
  6929  1013  00D3               	movwf	?___fltol+2
  6930  1014  3000               	movlw	0
  6931  1015  00D2               	movwf	?___fltol+1
  6932  1016  3000               	movlw	0
  6933  1017  00D1               	movwf	?___fltol
  6934  1018  287E               	goto	l541
  6935  1019                     l3163:	
  6936  1019  0851               	movf	___fltol@f1,w
  6937  101A  00D5               	movwf	??___fltol
  6938  101B  0852               	movf	___fltol@f1+1,w
  6939  101C  00D6               	movwf	??___fltol+1
  6940  101D  0853               	movf	___fltol@f1+2,w
  6941  101E  00D7               	movwf	??___fltol+2
  6942  101F  0854               	movf	___fltol@f1+3,w
  6943  1020  00D8               	movwf	??___fltol+3
  6944  1021  301F               	movlw	31
  6945  1022                     u5075:	
  6946  1022  1003               	clrc
  6947  1023  0CD8               	rrf	??___fltol+3,f
  6948  1024  0CD7               	rrf	??___fltol+2,f
  6949  1025  0CD6               	rrf	??___fltol+1,f
  6950  1026  0CD5               	rrf	??___fltol,f
  6951  1027                     u5070:	
  6952  1027  3EFF               	addlw	-1
  6953  1028  1D03               	skipz
  6954  1029  2822               	goto	u5075
  6955  102A  0855               	movf	??___fltol,w
  6956  102B  00D9               	movwf	??___fltol+4
  6957  102C  0859               	movf	??___fltol+4,w
  6958  102D  00DA               	movwf	___fltol@sign1
  6959  102E                     l3165:	
  6960  102E  17D3               	bsf	___fltol@f1+2,7
  6961  102F                     l3167:	
  6962  102F  30FF               	movlw	255
  6963  1030  05D1               	andwf	___fltol@f1,f
  6964  1031  30FF               	movlw	255
  6965  1032  05D2               	andwf	___fltol@f1+1,f
  6966  1033  30FF               	movlw	255
  6967  1034  05D3               	andwf	___fltol@f1+2,f
  6968  1035  3000               	movlw	0
  6969  1036  05D4               	andwf	___fltol@f1+3,f
  6970  1037                     l3169:	
  6971  1037  3096               	movlw	150
  6972  1038  02DB               	subwf	___fltol@exp1,f
  6973  1039                     l3171:	
  6974  1039  1FDB               	btfss	___fltol@exp1,7
  6975  103A  283C               	goto	u5081
  6976  103B  283D               	goto	u5080
  6977  103C                     u5081:	
  6978  103C  2857               	goto	l3181
  6979  103D                     u5080:	
  6980  103D                     l3173:	
  6981  103D  085B               	movf	___fltol@exp1,w
  6982  103E  3A80               	xorlw	128
  6983  103F  3E97               	addlw	151
  6984  1040  1803               	skipnc
  6985  1041  2843               	goto	u5091
  6986  1042  2844               	goto	u5090
  6987  1043                     u5091:	
  6988  1043  2845               	goto	l3179
  6989  1044                     u5090:	
  6990  1044  2810               	goto	l3159
  6991  1045                     l3179:	
  6992  1045  3001               	movlw	1
  6993  1046                     u5105:	
  6994  1046  1003               	clrc
  6995  1047  0CD4               	rrf	___fltol@f1+3,f
  6996  1048  0CD3               	rrf	___fltol@f1+2,f
  6997  1049  0CD2               	rrf	___fltol@f1+1,f
  6998  104A  0CD1               	rrf	___fltol@f1,f
  6999  104B  3EFF               	addlw	-1
  7000  104C  1D03               	skipz
  7001  104D  2846               	goto	u5105
  7002  104E  3001               	movlw	1
  7003  104F  00D5               	movwf	??___fltol
  7004  1050  0855               	movf	??___fltol,w
  7005  1051  07DB               	addwf	___fltol@exp1,f
  7006  1052  1D03               	btfss	3,2
  7007  1053  2855               	goto	u5111
  7008  1054  2856               	goto	u5110
  7009  1055                     u5111:	
  7010  1055  2845               	goto	l3179
  7011  1056                     u5110:	
  7012  1056  286E               	goto	l3189
  7013  1057                     l3181:	
  7014  1057  3020               	movlw	32
  7015  1058  025B               	subwf	___fltol@exp1,w
  7016  1059  1C03               	skipc
  7017  105A  285C               	goto	u5121
  7018  105B  285D               	goto	u5120
  7019  105C                     u5121:	
  7020  105C  2869               	goto	l548
  7021  105D                     u5120:	
  7022  105D  2810               	goto	l3159
  7023  105E                     l3187:	
  7024  105E  3001               	movlw	1
  7025  105F  00D5               	movwf	??___fltol
  7026  1060                     u5135:	
  7027  1060  1003               	clrc
  7028  1061  0DD1               	rlf	___fltol@f1,f
  7029  1062  0DD2               	rlf	___fltol@f1+1,f
  7030  1063  0DD3               	rlf	___fltol@f1+2,f
  7031  1064  0DD4               	rlf	___fltol@f1+3,f
  7032  1065  0BD5               	decfsz	??___fltol,f
  7033  1066  2860               	goto	u5135
  7034  1067  3001               	movlw	1
  7035  1068  02DB               	subwf	___fltol@exp1,f
  7036  1069                     l548:	
  7037  1069  085B               	movf	___fltol@exp1,w
  7038  106A  1D03               	btfss	3,2
  7039  106B  286D               	goto	u5141
  7040  106C  286E               	goto	u5140
  7041  106D                     u5141:	
  7042  106D  285E               	goto	l3187
  7043  106E                     u5140:	
  7044  106E                     l3189:	
  7045  106E  085A               	movf	___fltol@sign1,w
  7046  106F  1903               	btfsc	3,2
  7047  1070  2872               	goto	u5151
  7048  1071  2873               	goto	u5150
  7049  1072                     u5151:	
  7050  1072  287E               	goto	l551
  7051  1073                     u5150:	
  7052  1073                     l3191:	
  7053  1073  09D1               	comf	___fltol@f1,f
  7054  1074  09D2               	comf	___fltol@f1+1,f
  7055  1075  09D3               	comf	___fltol@f1+2,f
  7056  1076  09D4               	comf	___fltol@f1+3,f
  7057  1077  0AD1               	incf	___fltol@f1,f
  7058  1078  1903               	skipnz
  7059  1079  0AD2               	incf	___fltol@f1+1,f
  7060  107A  1903               	skipnz
  7061  107B  0AD3               	incf	___fltol@f1+2,f
  7062  107C  1903               	skipnz
  7063  107D  0AD4               	incf	___fltol@f1+3,f
  7064  107E                     l551:	
  7065  107E                     l541:	
  7066  107E  0008               	return
  7067  107F                     __end_of___fltol:	
  7068                           
  7069                           	psect	text18
  7070  1929                     __ptext18:	
  7071 ;; *************** function ___flsub *****************
  7072 ;; Defined at:
  7073 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  a               4   70[BANK0 ] long 
  7076 ;;  b               4   74[BANK0 ] long 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;		None
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  4   70[BANK0 ] long 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7088 ;;      Params:         0       8       0       0       0
  7089 ;;      Locals:         0       0       0       0       0
  7090 ;;      Temps:          0       0       0       0       0
  7091 ;;      Totals:         0       8       0       0       0
  7092 ;;Total ram usage:        8 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    1
  7095 ;; This function calls:
  7096 ;;		___fladd
  7097 ;; This function is called by:
  7098 ;;		_sprintf
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           
  7103                           ;psect for function ___flsub
  7104  1929                     ___flsub:	
  7105  1929                     l3213:	
  7106                           ;incstack = 0
  7107                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7108                           
  7109  1929  3080               	movlw	128
  7110  192A  1283               	bcf	3,5	;RP0=0, select bank0
  7111  192B  1303               	bcf	3,6	;RP1=0, select bank0
  7112  192C  06E9               	xorwf	___flsub@a+3,f
  7113  192D                     l3215:	
  7114  192D  086D               	movf	___flsub@b+3,w
  7115  192E  00D5               	movwf	___fladd@b+3
  7116  192F  086C               	movf	___flsub@b+2,w
  7117  1930  00D4               	movwf	___fladd@b+2
  7118  1931  086B               	movf	___flsub@b+1,w
  7119  1932  00D3               	movwf	___fladd@b+1
  7120  1933  086A               	movf	___flsub@b,w
  7121  1934  00D2               	movwf	___fladd@b
  7122  1935  0869               	movf	___flsub@a+3,w
  7123  1936  00D9               	movwf	___fladd@a+3
  7124  1937  0868               	movf	___flsub@a+2,w
  7125  1938  00D8               	movwf	___fladd@a+2
  7126  1939  0867               	movf	___flsub@a+1,w
  7127  193A  00D7               	movwf	___fladd@a+1
  7128  193B  0866               	movf	___flsub@a,w
  7129  193C  00D6               	movwf	___fladd@a
  7130  193D  120A  118A  2021  160A  158A  	fcall	___fladd
  7131  1942  1283               	bcf	3,5	;RP0=0, select bank0
  7132  1943  1303               	bcf	3,6	;RP1=0, select bank0
  7133  1944  0855               	movf	?___fladd+3,w
  7134  1945  00E9               	movwf	?___flsub+3
  7135  1946  0854               	movf	?___fladd+2,w
  7136  1947  00E8               	movwf	?___flsub+2
  7137  1948  0853               	movf	?___fladd+1,w
  7138  1949  00E7               	movwf	?___flsub+1
  7139  194A  0852               	movf	?___fladd,w
  7140  194B  00E6               	movwf	?___flsub
  7141  194C                     l711:	
  7142  194C  0008               	return
  7143  194D                     __end_of___flsub:	
  7144                           
  7145                           	psect	text19
  7146  0021                     __ptext19:	
  7147 ;; *************** function ___fladd *****************
  7148 ;; Defined at:
  7149 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;  b               4   50[BANK0 ] long 
  7152 ;;  a               4   54[BANK0 ] long 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  grs             1   69[BANK0 ] unsigned char 
  7155 ;;  bexp            1   68[BANK0 ] unsigned char 
  7156 ;;  aexp            1   67[BANK0 ] unsigned char 
  7157 ;;  signs           1   66[BANK0 ] unsigned char 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  4   50[BANK0 ] unsigned char 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0, btemp+1
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7167 ;;      Params:         0       8       0       0       0
  7168 ;;      Locals:         0       4       0       0       0
  7169 ;;      Temps:          0       8       0       0       0
  7170 ;;      Totals:         0      20       0       0       0
  7171 ;;Total ram usage:       20 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; This function calls:
  7174 ;;		Nothing
  7175 ;; This function is called by:
  7176 ;;		_sprintf
  7177 ;;		___flsub
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           
  7182                           ;psect for function ___fladd
  7183  0021                     ___fladd:	
  7184  0021                     l2549:	
  7185                           ;incstack = 0
  7186                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7187                           
  7188  0021  1283               	bcf	3,5	;RP0=0, select bank0
  7189  0022  1303               	bcf	3,6	;RP1=0, select bank0
  7190  0023  0855               	movf	___fladd@b+3,w
  7191  0024  3980               	andlw	128
  7192  0025  00DA               	movwf	??___fladd
  7193  0026  085A               	movf	??___fladd,w
  7194  0027  00E2               	movwf	___fladd@signs
  7195  0028                     l2551:	
  7196  0028  0855               	movf	___fladd@b+3,w
  7197  0029  00DA               	movwf	??___fladd
  7198  002A  075A               	addwf	??___fladd,w
  7199  002B  00DB               	movwf	??___fladd+1
  7200  002C  085B               	movf	??___fladd+1,w
  7201  002D  00E4               	movwf	___fladd@bexp
  7202  002E                     l2553:	
  7203  002E  1FD4               	btfss	___fladd@b+2,7
  7204  002F  2831               	goto	u3481
  7205  0030  2832               	goto	u3480
  7206  0031                     u3481:	
  7207  0031  2833               	goto	l2557
  7208  0032                     u3480:	
  7209  0032                     l2555:	
  7210  0032  1464               	bsf	___fladd@bexp,0
  7211  0033                     l2557:	
  7212  0033  0864               	movf	___fladd@bexp,w
  7213  0034  1903               	btfsc	3,2
  7214  0035  2837               	goto	u3491
  7215  0036  2838               	goto	u3490
  7216  0037                     u3491:	
  7217  0037  2848               	goto	l2567
  7218  0038                     u3490:	
  7219  0038                     l2559:	
  7220  0038  0A64               	incf	___fladd@bexp,w
  7221  0039  1D03               	btfss	3,2
  7222  003A  283C               	goto	u3501
  7223  003B  283D               	goto	u3500
  7224  003C                     u3501:	
  7225  003C  2845               	goto	l2563
  7226  003D                     u3500:	
  7227  003D                     l2561:	
  7228  003D  3000               	movlw	0
  7229  003E  00D5               	movwf	___fladd@b+3
  7230  003F  3000               	movlw	0
  7231  0040  00D4               	movwf	___fladd@b+2
  7232  0041  3000               	movlw	0
  7233  0042  00D3               	movwf	___fladd@b+1
  7234  0043  3000               	movlw	0
  7235  0044  00D2               	movwf	___fladd@b
  7236  0045                     l2563:	
  7237  0045  17D4               	bsf	___fladd@b+2,7
  7238  0046                     l2565:	
  7239  0046  01D5               	clrf	___fladd@b+3
  7240  0047  2850               	goto	l2569
  7241  0048                     l2567:	
  7242  0048  3000               	movlw	0
  7243  0049  00D5               	movwf	___fladd@b+3
  7244  004A  3000               	movlw	0
  7245  004B  00D4               	movwf	___fladd@b+2
  7246  004C  3000               	movlw	0
  7247  004D  00D3               	movwf	___fladd@b+1
  7248  004E  3000               	movlw	0
  7249  004F  00D2               	movwf	___fladd@b
  7250  0050                     l2569:	
  7251  0050  0859               	movf	___fladd@a+3,w
  7252  0051  3980               	andlw	128
  7253  0052  00DA               	movwf	??___fladd
  7254  0053  085A               	movf	??___fladd,w
  7255  0054  00E3               	movwf	___fladd@aexp
  7256  0055                     l2571:	
  7257  0055  0863               	movf	___fladd@aexp,w
  7258  0056  0662               	xorwf	___fladd@signs,w
  7259  0057  1903               	skipnz
  7260  0058  285A               	goto	u3511
  7261  0059  285B               	goto	u3510
  7262  005A                     u3511:	
  7263  005A  285C               	goto	l2575
  7264  005B                     u3510:	
  7265  005B                     l2573:	
  7266  005B  1762               	bsf	___fladd@signs,6
  7267  005C                     l2575:	
  7268  005C  0859               	movf	___fladd@a+3,w
  7269  005D  00DA               	movwf	??___fladd
  7270  005E  075A               	addwf	??___fladd,w
  7271  005F  00DB               	movwf	??___fladd+1
  7272  0060  085B               	movf	??___fladd+1,w
  7273  0061  00E3               	movwf	___fladd@aexp
  7274  0062                     l2577:	
  7275  0062  1FD8               	btfss	___fladd@a+2,7
  7276  0063  2865               	goto	u3521
  7277  0064  2866               	goto	u3520
  7278  0065                     u3521:	
  7279  0065  2867               	goto	l2581
  7280  0066                     u3520:	
  7281  0066                     l2579:	
  7282  0066  1463               	bsf	___fladd@aexp,0
  7283  0067                     l2581:	
  7284  0067  0863               	movf	___fladd@aexp,w
  7285  0068  1903               	btfsc	3,2
  7286  0069  286B               	goto	u3531
  7287  006A  286C               	goto	u3530
  7288  006B                     u3531:	
  7289  006B  287C               	goto	l2591
  7290  006C                     u3530:	
  7291  006C                     l2583:	
  7292  006C  0A63               	incf	___fladd@aexp,w
  7293  006D  1D03               	btfss	3,2
  7294  006E  2870               	goto	u3541
  7295  006F  2871               	goto	u3540
  7296  0070                     u3541:	
  7297  0070  2879               	goto	l2587
  7298  0071                     u3540:	
  7299  0071                     l2585:	
  7300  0071  3000               	movlw	0
  7301  0072  00D9               	movwf	___fladd@a+3
  7302  0073  3000               	movlw	0
  7303  0074  00D8               	movwf	___fladd@a+2
  7304  0075  3000               	movlw	0
  7305  0076  00D7               	movwf	___fladd@a+1
  7306  0077  3000               	movlw	0
  7307  0078  00D6               	movwf	___fladd@a
  7308  0079                     l2587:	
  7309  0079  17D8               	bsf	___fladd@a+2,7
  7310  007A                     l2589:	
  7311  007A  01D9               	clrf	___fladd@a+3
  7312  007B  2884               	goto	l665
  7313  007C                     l2591:	
  7314  007C  3000               	movlw	0
  7315  007D  00D9               	movwf	___fladd@a+3
  7316  007E  3000               	movlw	0
  7317  007F  00D8               	movwf	___fladd@a+2
  7318  0080  3000               	movlw	0
  7319  0081  00D7               	movwf	___fladd@a+1
  7320  0082  3000               	movlw	0
  7321  0083  00D6               	movwf	___fladd@a
  7322  0084                     l665:	
  7323  0084  0864               	movf	___fladd@bexp,w
  7324  0085  0263               	subwf	___fladd@aexp,w
  7325  0086  1803               	skipnc
  7326  0087  2889               	goto	u3551
  7327  0088  288A               	goto	u3550
  7328  0089                     u3551:	
  7329  0089  28CE               	goto	l2627
  7330  008A                     u3550:	
  7331  008A                     l2593:	
  7332  008A  1F62               	btfss	___fladd@signs,6
  7333  008B  288D               	goto	u3561
  7334  008C  288E               	goto	u3560
  7335  008D                     u3561:	
  7336  008D  2892               	goto	l2597
  7337  008E                     u3560:	
  7338  008E                     l2595:	
  7339  008E  3080               	movlw	128
  7340  008F  00DA               	movwf	??___fladd
  7341  0090  085A               	movf	??___fladd,w
  7342  0091  06E2               	xorwf	___fladd@signs,f
  7343  0092                     l2597:	
  7344  0092  0864               	movf	___fladd@bexp,w
  7345  0093  00DA               	movwf	??___fladd
  7346  0094  085A               	movf	??___fladd,w
  7347  0095  00E5               	movwf	___fladd@grs
  7348  0096                     l2599:	
  7349  0096  0863               	movf	___fladd@aexp,w
  7350  0097  00DA               	movwf	??___fladd
  7351  0098  085A               	movf	??___fladd,w
  7352  0099  00E4               	movwf	___fladd@bexp
  7353  009A                     l2601:	
  7354  009A  0865               	movf	___fladd@grs,w
  7355  009B  00DA               	movwf	??___fladd
  7356  009C  085A               	movf	??___fladd,w
  7357  009D  00E3               	movwf	___fladd@aexp
  7358  009E                     l2603:	
  7359  009E  0852               	movf	___fladd@b,w
  7360  009F  00DA               	movwf	??___fladd
  7361  00A0  085A               	movf	??___fladd,w
  7362  00A1  00E5               	movwf	___fladd@grs
  7363  00A2                     l2605:	
  7364  00A2  0856               	movf	___fladd@a,w
  7365  00A3  00DA               	movwf	??___fladd
  7366  00A4  085A               	movf	??___fladd,w
  7367  00A5  00D2               	movwf	___fladd@b
  7368  00A6                     l2607:	
  7369  00A6  0865               	movf	___fladd@grs,w
  7370  00A7  00DA               	movwf	??___fladd
  7371  00A8  085A               	movf	??___fladd,w
  7372  00A9  00D6               	movwf	___fladd@a
  7373  00AA                     l2609:	
  7374  00AA  0853               	movf	___fladd@b+1,w
  7375  00AB  00DA               	movwf	??___fladd
  7376  00AC  085A               	movf	??___fladd,w
  7377  00AD  00E5               	movwf	___fladd@grs
  7378  00AE                     l2611:	
  7379  00AE  0857               	movf	___fladd@a+1,w
  7380  00AF  00DA               	movwf	??___fladd
  7381  00B0  085A               	movf	??___fladd,w
  7382  00B1  00D3               	movwf	___fladd@b+1
  7383  00B2                     l2613:	
  7384  00B2  0865               	movf	___fladd@grs,w
  7385  00B3  00DA               	movwf	??___fladd
  7386  00B4  085A               	movf	??___fladd,w
  7387  00B5  00D7               	movwf	___fladd@a+1
  7388  00B6                     l2615:	
  7389  00B6  0854               	movf	___fladd@b+2,w
  7390  00B7  00DA               	movwf	??___fladd
  7391  00B8  085A               	movf	??___fladd,w
  7392  00B9  00E5               	movwf	___fladd@grs
  7393  00BA                     l2617:	
  7394  00BA  0858               	movf	___fladd@a+2,w
  7395  00BB  00DA               	movwf	??___fladd
  7396  00BC  085A               	movf	??___fladd,w
  7397  00BD  00D4               	movwf	___fladd@b+2
  7398  00BE                     l2619:	
  7399  00BE  0865               	movf	___fladd@grs,w
  7400  00BF  00DA               	movwf	??___fladd
  7401  00C0  085A               	movf	??___fladd,w
  7402  00C1  00D8               	movwf	___fladd@a+2
  7403  00C2                     l2621:	
  7404  00C2  0855               	movf	___fladd@b+3,w
  7405  00C3  00DA               	movwf	??___fladd
  7406  00C4  085A               	movf	??___fladd,w
  7407  00C5  00E5               	movwf	___fladd@grs
  7408  00C6                     l2623:	
  7409  00C6  0859               	movf	___fladd@a+3,w
  7410  00C7  00DA               	movwf	??___fladd
  7411  00C8  085A               	movf	??___fladd,w
  7412  00C9  00D5               	movwf	___fladd@b+3
  7413  00CA                     l2625:	
  7414  00CA  0865               	movf	___fladd@grs,w
  7415  00CB  00DA               	movwf	??___fladd
  7416  00CC  085A               	movf	??___fladd,w
  7417  00CD  00D9               	movwf	___fladd@a+3
  7418  00CE                     l2627:	
  7419  00CE  01E5               	clrf	___fladd@grs
  7420  00CF                     l2629:	
  7421  00CF  0863               	movf	___fladd@aexp,w
  7422  00D0  00DA               	movwf	??___fladd
  7423  00D1  01DB               	clrf	??___fladd+1
  7424  00D2  085B               	movf	??___fladd+1,w
  7425  00D3  00DD               	movwf	??___fladd+3
  7426  00D4  0864               	movf	___fladd@bexp,w
  7427  00D5  025A               	subwf	??___fladd,w
  7428  00D6  00DC               	movwf	??___fladd+2
  7429  00D7  1C03               	skipc
  7430  00D8  03DD               	decf	??___fladd+3,f
  7431  00D9  085D               	movf	??___fladd+3,w
  7432  00DA  3A80               	xorlw	128
  7433  00DB  00FF               	movwf	btemp+1
  7434  00DC  3080               	movlw	128
  7435  00DD  027F               	subwf	btemp+1,w
  7436  00DE  1D03               	skipz
  7437  00DF  28E2               	goto	u3575
  7438  00E0  301A               	movlw	26
  7439  00E1  025C               	subwf	??___fladd+2,w
  7440  00E2                     u3575:	
  7441  00E2  1C03               	skipc
  7442  00E3  28E5               	goto	u3571
  7443  00E4  28E6               	goto	u3570
  7444  00E5                     u3571:	
  7445  00E5  2923               	goto	l2645
  7446  00E6                     u3570:	
  7447  00E6                     l2631:	
  7448  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  7449  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  7450  00E8  0855               	movf	___fladd@b+3,w
  7451  00E9  0454               	iorwf	___fladd@b+2,w
  7452  00EA  0453               	iorwf	___fladd@b+1,w
  7453  00EB  0452               	iorwf	___fladd@b,w
  7454  00EC  1D03               	skipz
  7455  00ED  28EF               	goto	u3581
  7456  00EE  28F1               	goto	u3580
  7457  00EF                     u3581:	
  7458  00EF  3001               	movlw	1
  7459  00F0  28F2               	goto	u3590
  7460  00F1                     u3580:	
  7461  00F1  3000               	movlw	0
  7462  00F2                     u3590:	
  7463  00F2  00DA               	movwf	??___fladd
  7464  00F3  085A               	movf	??___fladd,w
  7465  00F4  00E5               	movwf	___fladd@grs
  7466  00F5  3000               	movlw	0
  7467  00F6  00D5               	movwf	___fladd@b+3
  7468  00F7  3000               	movlw	0
  7469  00F8  00D4               	movwf	___fladd@b+2
  7470  00F9  3000               	movlw	0
  7471  00FA  00D3               	movwf	___fladd@b+1
  7472  00FB  3000               	movlw	0
  7473  00FC  00D2               	movwf	___fladd@b
  7474  00FD  0863               	movf	___fladd@aexp,w
  7475  00FE  00DA               	movwf	??___fladd
  7476  00FF  085A               	movf	??___fladd,w
  7477  0100  00E4               	movwf	___fladd@bexp
  7478  0101  292B               	goto	l669
  7479  0102                     l671:	
  7480  0102  1C65               	btfss	___fladd@grs,0
  7481  0103  2905               	goto	u3601
  7482  0104  2906               	goto	u3600
  7483  0105                     u3601:	
  7484  0105  290F               	goto	l2635
  7485  0106                     u3600:	
  7486  0106                     l2633:	
  7487  0106  0865               	movf	___fladd@grs,w
  7488  0107  00DA               	movwf	??___fladd
  7489  0108  1003               	clrc
  7490  0109  0C5A               	rrf	??___fladd,w
  7491  010A  3801               	iorlw	1
  7492  010B  00DB               	movwf	??___fladd+1
  7493  010C  085B               	movf	??___fladd+1,w
  7494  010D  00E5               	movwf	___fladd@grs
  7495  010E  2911               	goto	l2637
  7496  010F                     l2635:	
  7497  010F  1003               	clrc
  7498  0110  0CE5               	rrf	___fladd@grs,f
  7499  0111                     l2637:	
  7500  0111  1C52               	btfss	___fladd@b,0
  7501  0112  2914               	goto	u3611
  7502  0113  2915               	goto	u3610
  7503  0114                     u3611:	
  7504  0114  2916               	goto	l2641
  7505  0115                     u3610:	
  7506  0115                     l2639:	
  7507  0115  17E5               	bsf	___fladd@grs,7
  7508  0116                     l2641:	
  7509  0116  3001               	movlw	1
  7510  0117  00DA               	movwf	??___fladd
  7511  0118                     u3625:	
  7512  0118  0D55               	rlf	___fladd@b+3,w
  7513  0119  0CD5               	rrf	___fladd@b+3,f
  7514  011A  0CD4               	rrf	___fladd@b+2,f
  7515  011B  0CD3               	rrf	___fladd@b+1,f
  7516  011C  0CD2               	rrf	___fladd@b,f
  7517  011D  0BDA               	decfsz	??___fladd& (0+127),f
  7518  011E  2918               	goto	u3625
  7519  011F                     l2643:	
  7520  011F  3001               	movlw	1
  7521  0120  00DA               	movwf	??___fladd
  7522  0121  085A               	movf	??___fladd,w
  7523  0122  07E4               	addwf	___fladd@bexp,f
  7524  0123                     l2645:	
  7525  0123  1283               	bcf	3,5	;RP0=0, select bank0
  7526  0124  1303               	bcf	3,6	;RP1=0, select bank0
  7527  0125  0863               	movf	___fladd@aexp,w
  7528  0126  0264               	subwf	___fladd@bexp,w
  7529  0127  1C03               	skipc
  7530  0128  292A               	goto	u3631
  7531  0129  292B               	goto	u3630
  7532  012A                     u3631:	
  7533  012A  2902               	goto	l671
  7534  012B                     u3630:	
  7535  012B                     l669:	
  7536  012B  1B62               	btfsc	___fladd@signs,6
  7537  012C  292E               	goto	u3641
  7538  012D  292F               	goto	u3640
  7539  012E                     u3641:	
  7540  012E  297A               	goto	l2671
  7541  012F                     u3640:	
  7542  012F                     l2647:	
  7543  012F  0864               	movf	___fladd@bexp,w
  7544  0130  1D03               	btfss	3,2
  7545  0131  2933               	goto	u3651
  7546  0132  2934               	goto	u3650
  7547  0133                     u3651:	
  7548  0133  293D               	goto	l2653
  7549  0134                     u3650:	
  7550  0134                     l2649:	
  7551  0134  3000               	movlw	0
  7552  0135  00D5               	movwf	?___fladd+3
  7553  0136  3000               	movlw	0
  7554  0137  00D4               	movwf	?___fladd+2
  7555  0138  3000               	movlw	0
  7556  0139  00D3               	movwf	?___fladd+1
  7557  013A  3000               	movlw	0
  7558  013B  00D2               	movwf	?___fladd
  7559  013C  2AA8               	goto	l678
  7560  013D                     l2653:	
  7561  013D  0856               	movf	___fladd@a,w
  7562  013E  07D2               	addwf	___fladd@b,f
  7563  013F  0857               	movf	___fladd@a+1,w
  7564  0140  1103               	clrz
  7565  0141  1803               	skipnc
  7566  0142  3E01               	addlw	1
  7567  0143  1903               	skipnz
  7568  0144  2946               	goto	u3661
  7569  0145  07D3               	addwf	___fladd@b+1,f
  7570  0146                     u3661:	
  7571  0146  0858               	movf	___fladd@a+2,w
  7572  0147  1103               	clrz
  7573  0148  1803               	skipnc
  7574  0149  3E01               	addlw	1
  7575  014A  1903               	skipnz
  7576  014B  294D               	goto	u3662
  7577  014C  07D4               	addwf	___fladd@b+2,f
  7578  014D                     u3662:	
  7579  014D  0859               	movf	___fladd@a+3,w
  7580  014E  1103               	clrz
  7581  014F  1803               	skipnc
  7582  0150  3E01               	addlw	1
  7583  0151  1903               	skipnz
  7584  0152  2954               	goto	u3663
  7585  0153  07D5               	addwf	___fladd@b+3,f
  7586  0154                     u3663:	
  7587  0154                     l2655:	
  7588  0154  1C55               	btfss	___fladd@b+3,0
  7589  0155  2957               	goto	u3671
  7590  0156  2958               	goto	u3670
  7591  0157                     u3671:	
  7592  0157  2A2E               	goto	l2705
  7593  0158                     u3670:	
  7594  0158                     l2657:	
  7595  0158  1C65               	btfss	___fladd@grs,0
  7596  0159  295B               	goto	u3681
  7597  015A  295C               	goto	u3680
  7598  015B                     u3681:	
  7599  015B  2965               	goto	l2661
  7600  015C                     u3680:	
  7601  015C                     l2659:	
  7602  015C  0865               	movf	___fladd@grs,w
  7603  015D  00DA               	movwf	??___fladd
  7604  015E  1003               	clrc
  7605  015F  0C5A               	rrf	??___fladd,w
  7606  0160  3801               	iorlw	1
  7607  0161  00DB               	movwf	??___fladd+1
  7608  0162  085B               	movf	??___fladd+1,w
  7609  0163  00E5               	movwf	___fladd@grs
  7610  0164  2967               	goto	l2663
  7611  0165                     l2661:	
  7612  0165  1003               	clrc
  7613  0166  0CE5               	rrf	___fladd@grs,f
  7614  0167                     l2663:	
  7615  0167  1C52               	btfss	___fladd@b,0
  7616  0168  296A               	goto	u3691
  7617  0169  296B               	goto	u3690
  7618  016A                     u3691:	
  7619  016A  296C               	goto	l2667
  7620  016B                     u3690:	
  7621  016B                     l2665:	
  7622  016B  17E5               	bsf	___fladd@grs,7
  7623  016C                     l2667:	
  7624  016C  3001               	movlw	1
  7625  016D  00DA               	movwf	??___fladd
  7626  016E                     u3705:	
  7627  016E  0D55               	rlf	___fladd@b+3,w
  7628  016F  0CD5               	rrf	___fladd@b+3,f
  7629  0170  0CD4               	rrf	___fladd@b+2,f
  7630  0171  0CD3               	rrf	___fladd@b+1,f
  7631  0172  0CD2               	rrf	___fladd@b,f
  7632  0173  0BDA               	decfsz	??___fladd& (0+127),f
  7633  0174  296E               	goto	u3705
  7634  0175                     l2669:	
  7635  0175  3001               	movlw	1
  7636  0176  00DA               	movwf	??___fladd
  7637  0177  085A               	movf	??___fladd,w
  7638  0178  07E4               	addwf	___fladd@bexp,f
  7639  0179  2A2E               	goto	l2705
  7640  017A                     l2671:	
  7641  017A  0855               	movf	___fladd@b+3,w
  7642  017B  3A80               	xorlw	128
  7643  017C  00FF               	movwf	btemp+1
  7644  017D  0859               	movf	___fladd@a+3,w
  7645  017E  3A80               	xorlw	128
  7646  017F  027F               	subwf	btemp+1,w
  7647  0180  1D03               	skipz
  7648  0181  298C               	goto	u3713
  7649  0182  0858               	movf	___fladd@a+2,w
  7650  0183  0254               	subwf	___fladd@b+2,w
  7651  0184  1D03               	skipz
  7652  0185  298C               	goto	u3713
  7653  0186  0857               	movf	___fladd@a+1,w
  7654  0187  0253               	subwf	___fladd@b+1,w
  7655  0188  1D03               	skipz
  7656  0189  298C               	goto	u3713
  7657  018A  0856               	movf	___fladd@a,w
  7658  018B  0252               	subwf	___fladd@b,w
  7659  018C                     u3713:	
  7660  018C  1803               	skipnc
  7661  018D  298F               	goto	u3711
  7662  018E  2990               	goto	u3710
  7663  018F                     u3711:	
  7664  018F  29E8               	goto	l2681
  7665  0190                     u3710:	
  7666  0190                     l2673:	
  7667  0190  30FF               	movlw	255
  7668  0191  00DA               	movwf	??___fladd
  7669  0192  30FF               	movlw	255
  7670  0193  00DB               	movwf	??___fladd+1
  7671  0194  30FF               	movlw	255
  7672  0195  00DC               	movwf	??___fladd+2
  7673  0196  30FF               	movlw	255
  7674  0197  00DD               	movwf	??___fladd+3
  7675  0198  0856               	movf	___fladd@a,w
  7676  0199  00DE               	movwf	??___fladd+4
  7677  019A  0857               	movf	___fladd@a+1,w
  7678  019B  00DF               	movwf	??___fladd+5
  7679  019C  0858               	movf	___fladd@a+2,w
  7680  019D  00E0               	movwf	??___fladd+6
  7681  019E  0859               	movf	___fladd@a+3,w
  7682  019F  00E1               	movwf	??___fladd+7
  7683  01A0  0852               	movf	___fladd@b,w
  7684  01A1  02DE               	subwf	??___fladd+4,f
  7685  01A2  0853               	movf	___fladd@b+1,w
  7686  01A3  1C03               	skipc
  7687  01A4  0F53               	incfsz	___fladd@b+1,w
  7688  01A5  29A7               	goto	u3721
  7689  01A6  29A8               	goto	u3722
  7690  01A7                     u3721:	
  7691  01A7  02DF               	subwf	??___fladd+5,f
  7692  01A8                     u3722:	
  7693  01A8  0854               	movf	___fladd@b+2,w
  7694  01A9  1C03               	skipc
  7695  01AA  0F54               	incfsz	___fladd@b+2,w
  7696  01AB  29AD               	goto	u3723
  7697  01AC  29AE               	goto	u3724
  7698  01AD                     u3723:	
  7699  01AD  02E0               	subwf	??___fladd+6,f
  7700  01AE                     u3724:	
  7701  01AE  0855               	movf	___fladd@b+3,w
  7702  01AF  1C03               	skipc
  7703  01B0  0F55               	incfsz	___fladd@b+3,w
  7704  01B1  29B3               	goto	u3725
  7705  01B2  29B4               	goto	u3726
  7706  01B3                     u3725:	
  7707  01B3  02E1               	subwf	??___fladd+7,f
  7708  01B4                     u3726:	
  7709  01B4  085E               	movf	??___fladd+4,w
  7710  01B5  07DA               	addwf	??___fladd,f
  7711  01B6  085F               	movf	??___fladd+5,w
  7712  01B7  1803               	skipnc
  7713  01B8  0F5F               	incfsz	??___fladd+5,w
  7714  01B9  29BB               	goto	u3730
  7715  01BA  29BC               	goto	u3731
  7716  01BB                     u3730:	
  7717  01BB  07DB               	addwf	??___fladd+1,f
  7718  01BC                     u3731:	
  7719  01BC  0860               	movf	??___fladd+6,w
  7720  01BD  1803               	skipnc
  7721  01BE  0F60               	incfsz	??___fladd+6,w
  7722  01BF  29C1               	goto	u3732
  7723  01C0  29C2               	goto	u3733
  7724  01C1                     u3732:	
  7725  01C1  07DC               	addwf	??___fladd+2,f
  7726  01C2                     u3733:	
  7727  01C2  0861               	movf	??___fladd+7,w
  7728  01C3  1803               	skipnc
  7729  01C4  0A61               	incf	??___fladd+7,w
  7730  01C5  07DD               	addwf	??___fladd+3,f
  7731  01C6  085D               	movf	??___fladd+3,w
  7732  01C7  00D5               	movwf	___fladd@b+3
  7733  01C8  085C               	movf	??___fladd+2,w
  7734  01C9  00D4               	movwf	___fladd@b+2
  7735  01CA  085B               	movf	??___fladd+1,w
  7736  01CB  00D3               	movwf	___fladd@b+1
  7737  01CC  085A               	movf	??___fladd,w
  7738  01CD  00D2               	movwf	___fladd@b
  7739  01CE                     l2675:	
  7740  01CE  3080               	movlw	128
  7741  01CF  00DA               	movwf	??___fladd
  7742  01D0  085A               	movf	??___fladd,w
  7743  01D1  06E2               	xorwf	___fladd@signs,f
  7744  01D2  09E5               	comf	___fladd@grs,f
  7745  01D3  0AE5               	incf	___fladd@grs,f
  7746  01D4                     l2677:	
  7747  01D4  0865               	movf	___fladd@grs,w
  7748  01D5  1D03               	btfss	3,2
  7749  01D6  29D8               	goto	u3741
  7750  01D7  29D9               	goto	u3740
  7751  01D8                     u3741:	
  7752  01D8  29F6               	goto	l686
  7753  01D9                     u3740:	
  7754  01D9                     l2679:	
  7755  01D9  3001               	movlw	1
  7756  01DA  07D2               	addwf	___fladd@b,f
  7757  01DB  3000               	movlw	0
  7758  01DC  1803               	skipnc
  7759  01DD  3001               	movlw	1
  7760  01DE  07D3               	addwf	___fladd@b+1,f
  7761  01DF  3000               	movlw	0
  7762  01E0  1803               	skipnc
  7763  01E1  3001               	movlw	1
  7764  01E2  07D4               	addwf	___fladd@b+2,f
  7765  01E3  3000               	movlw	0
  7766  01E4  1803               	skipnc
  7767  01E5  3001               	movlw	1
  7768  01E6  07D5               	addwf	___fladd@b+3,f
  7769  01E7  29F6               	goto	l686
  7770  01E8                     l2681:	
  7771  01E8  0856               	movf	___fladd@a,w
  7772  01E9  02D2               	subwf	___fladd@b,f
  7773  01EA  0857               	movf	___fladd@a+1,w
  7774  01EB  1C03               	skipc
  7775  01EC  0F57               	incfsz	___fladd@a+1,w
  7776  01ED  02D3               	subwf	___fladd@b+1,f
  7777  01EE  0858               	movf	___fladd@a+2,w
  7778  01EF  1C03               	skipc
  7779  01F0  0F58               	incfsz	___fladd@a+2,w
  7780  01F1  02D4               	subwf	___fladd@b+2,f
  7781  01F2  0859               	movf	___fladd@a+3,w
  7782  01F3  1C03               	skipc
  7783  01F4  0F59               	incfsz	___fladd@a+3,w
  7784  01F5  02D5               	subwf	___fladd@b+3,f
  7785  01F6                     l686:	
  7786  01F6  0855               	movf	___fladd@b+3,w
  7787  01F7  0454               	iorwf	___fladd@b+2,w
  7788  01F8  0453               	iorwf	___fladd@b+1,w
  7789  01F9  0452               	iorwf	___fladd@b,w
  7790  01FA  1D03               	skipz
  7791  01FB  29FD               	goto	u3751
  7792  01FC  29FE               	goto	u3750
  7793  01FD                     u3751:	
  7794  01FD  2A2A               	goto	l2703
  7795  01FE                     u3750:	
  7796  01FE                     l2683:	
  7797  01FE  0865               	movf	___fladd@grs,w
  7798  01FF  1D03               	btfss	3,2
  7799  0200  2A02               	goto	u3761
  7800  0201  2A03               	goto	u3760
  7801  0202                     u3761:	
  7802  0202  2A2A               	goto	l2703
  7803  0203                     u3760:	
  7804  0203                     l2685:	
  7805  0203  3000               	movlw	0
  7806  0204  00D5               	movwf	?___fladd+3
  7807  0205  3000               	movlw	0
  7808  0206  00D4               	movwf	?___fladd+2
  7809  0207  3000               	movlw	0
  7810  0208  00D3               	movwf	?___fladd+1
  7811  0209  3000               	movlw	0
  7812  020A  00D2               	movwf	?___fladd
  7813  020B  2AA8               	goto	l678
  7814  020C                     l2689:	
  7815  020C  3001               	movlw	1
  7816  020D  00DA               	movwf	??___fladd
  7817  020E                     u3775:	
  7818  020E  1003               	clrc
  7819  020F  0DD2               	rlf	___fladd@b,f
  7820  0210  0DD3               	rlf	___fladd@b+1,f
  7821  0211  0DD4               	rlf	___fladd@b+2,f
  7822  0212  0DD5               	rlf	___fladd@b+3,f
  7823  0213  0BDA               	decfsz	??___fladd,f
  7824  0214  2A0E               	goto	u3775
  7825  0215                     l2691:	
  7826  0215  1FE5               	btfss	___fladd@grs,7
  7827  0216  2A18               	goto	u3781
  7828  0217  2A19               	goto	u3780
  7829  0218                     u3781:	
  7830  0218  2A1A               	goto	l690
  7831  0219                     u3780:	
  7832  0219                     l2693:	
  7833  0219  1452               	bsf	___fladd@b,0
  7834  021A                     l690:	
  7835  021A  1C65               	btfss	___fladd@grs,0
  7836  021B  2A1D               	goto	u3791
  7837  021C  2A1E               	goto	u3790
  7838  021D                     u3791:	
  7839  021D  2A21               	goto	l2697
  7840  021E                     u3790:	
  7841  021E                     l2695:	
  7842  021E  1403               	setc
  7843  021F  0DE5               	rlf	___fladd@grs,f
  7844  0220  2A23               	goto	l2699
  7845  0221                     l2697:	
  7846  0221  1003               	clrc
  7847  0222  0DE5               	rlf	___fladd@grs,f
  7848  0223                     l2699:	
  7849  0223  0864               	movf	___fladd@bexp,w
  7850  0224  1903               	btfsc	3,2
  7851  0225  2A27               	goto	u3801
  7852  0226  2A28               	goto	u3800
  7853  0227                     u3801:	
  7854  0227  2A2A               	goto	l2703
  7855  0228                     u3800:	
  7856  0228                     l2701:	
  7857  0228  3001               	movlw	1
  7858  0229  02E4               	subwf	___fladd@bexp,f
  7859  022A                     l2703:	
  7860  022A  1FD4               	btfss	___fladd@b+2,7
  7861  022B  2A2D               	goto	u3811
  7862  022C  2A2E               	goto	u3810
  7863  022D                     u3811:	
  7864  022D  2A0C               	goto	l2689
  7865  022E                     u3810:	
  7866  022E                     l2705:	
  7867  022E  01E3               	clrf	___fladd@aexp
  7868  022F                     l2707:	
  7869  022F  1FE5               	btfss	___fladd@grs,7
  7870  0230  2A32               	goto	u3821
  7871  0231  2A33               	goto	u3820
  7872  0232                     u3821:	
  7873  0232  2A41               	goto	l2715
  7874  0233                     u3820:	
  7875  0233                     l2709:	
  7876  0233  0865               	movf	___fladd@grs,w
  7877  0234  397F               	andlw	127
  7878  0235  1903               	btfsc	3,2
  7879  0236  2A38               	goto	u3831
  7880  0237  2A39               	goto	u3830
  7881  0238                     u3831:	
  7882  0238  2A3C               	goto	l696
  7883  0239                     u3830:	
  7884  0239                     l2711:	
  7885  0239  01E3               	clrf	___fladd@aexp
  7886  023A  0AE3               	incf	___fladd@aexp,f
  7887  023B  2A41               	goto	l2715
  7888  023C                     l696:	
  7889  023C  1C52               	btfss	___fladd@b,0
  7890  023D  2A3F               	goto	u3841
  7891  023E  2A40               	goto	u3840
  7892  023F                     u3841:	
  7893  023F  2A41               	goto	l2715
  7894  0240                     u3840:	
  7895  0240  2A39               	goto	l2711
  7896  0241                     l2715:	
  7897  0241  0863               	movf	___fladd@aexp,w
  7898  0242  1903               	btfsc	3,2
  7899  0243  2A45               	goto	u3851
  7900  0244  2A46               	goto	u3850
  7901  0245                     u3851:	
  7902  0245  2A7A               	goto	l699
  7903  0246                     u3850:	
  7904  0246                     l2717:	
  7905  0246  3001               	movlw	1
  7906  0247  07D2               	addwf	___fladd@b,f
  7907  0248  3000               	movlw	0
  7908  0249  1803               	skipnc
  7909  024A  3001               	movlw	1
  7910  024B  07D3               	addwf	___fladd@b+1,f
  7911  024C  3000               	movlw	0
  7912  024D  1803               	skipnc
  7913  024E  3001               	movlw	1
  7914  024F  07D4               	addwf	___fladd@b+2,f
  7915  0250  3000               	movlw	0
  7916  0251  1803               	skipnc
  7917  0252  3001               	movlw	1
  7918  0253  07D5               	addwf	___fladd@b+3,f
  7919  0254                     l2719:	
  7920  0254  1C55               	btfss	___fladd@b+3,0
  7921  0255  2A57               	goto	u3861
  7922  0256  2A58               	goto	u3860
  7923  0257                     u3861:	
  7924  0257  2A7A               	goto	l699
  7925  0258                     u3860:	
  7926  0258                     l2721:	
  7927  0258  0852               	movf	___fladd@b,w
  7928  0259  00DA               	movwf	??___fladd
  7929  025A  0853               	movf	___fladd@b+1,w
  7930  025B  00DB               	movwf	??___fladd+1
  7931  025C  0854               	movf	___fladd@b+2,w
  7932  025D  00DC               	movwf	??___fladd+2
  7933  025E  0855               	movf	___fladd@b+3,w
  7934  025F  00DD               	movwf	??___fladd+3
  7935  0260  3001               	movlw	1
  7936  0261  00DE               	movwf	??___fladd+4
  7937  0262                     u3875:	
  7938  0262  0D5D               	rlf	??___fladd+3,w
  7939  0263  0CDD               	rrf	??___fladd+3,f
  7940  0264  0CDC               	rrf	??___fladd+2,f
  7941  0265  0CDB               	rrf	??___fladd+1,f
  7942  0266  0CDA               	rrf	??___fladd,f
  7943  0267                     u3870:	
  7944  0267  0BDE               	decfsz	??___fladd+4,f
  7945  0268  2A62               	goto	u3875
  7946  0269  085D               	movf	??___fladd+3,w
  7947  026A  00D5               	movwf	___fladd@b+3
  7948  026B  085C               	movf	??___fladd+2,w
  7949  026C  00D4               	movwf	___fladd@b+2
  7950  026D  085B               	movf	??___fladd+1,w
  7951  026E  00D3               	movwf	___fladd@b+1
  7952  026F  085A               	movf	??___fladd,w
  7953  0270  00D2               	movwf	___fladd@b
  7954  0271  0A64               	incf	___fladd@bexp,w
  7955  0272  1903               	btfsc	3,2
  7956  0273  2A75               	goto	u3881
  7957  0274  2A76               	goto	u3880
  7958  0275                     u3881:	
  7959  0275  2A7A               	goto	l699
  7960  0276                     u3880:	
  7961  0276                     l2723:	
  7962  0276  3001               	movlw	1
  7963  0277  00DA               	movwf	??___fladd
  7964  0278  085A               	movf	??___fladd,w
  7965  0279  07E4               	addwf	___fladd@bexp,f
  7966  027A                     l699:	
  7967  027A  0A64               	incf	___fladd@bexp,w
  7968  027B  1903               	btfsc	3,2
  7969  027C  2A7E               	goto	u3891
  7970  027D  2A7F               	goto	u3890
  7971  027E                     u3891:	
  7972  027E  2A84               	goto	l2727
  7973  027F                     u3890:	
  7974  027F                     l2725:	
  7975  027F  0864               	movf	___fladd@bexp,w
  7976  0280  1D03               	btfss	3,2
  7977  0281  2A83               	goto	u3901
  7978  0282  2A84               	goto	u3900
  7979  0283                     u3901:	
  7980  0283  2A92               	goto	l2733
  7981  0284                     u3900:	
  7982  0284                     l2727:	
  7983  0284  3000               	movlw	0
  7984  0285  00D5               	movwf	___fladd@b+3
  7985  0286  3000               	movlw	0
  7986  0287  00D4               	movwf	___fladd@b+2
  7987  0288  3000               	movlw	0
  7988  0289  00D3               	movwf	___fladd@b+1
  7989  028A  3000               	movlw	0
  7990  028B  00D2               	movwf	___fladd@b
  7991  028C                     l2729:	
  7992  028C  0864               	movf	___fladd@bexp,w
  7993  028D  1D03               	btfss	3,2
  7994  028E  2A90               	goto	u3911
  7995  028F  2A91               	goto	u3910
  7996  0290                     u3911:	
  7997  0290  2A92               	goto	l2733
  7998  0291                     u3910:	
  7999  0291                     l2731:	
  8000  0291  01E2               	clrf	___fladd@signs
  8001  0292                     l2733:	
  8002  0292  1C64               	btfss	___fladd@bexp,0
  8003  0293  2A95               	goto	u3921
  8004  0294  2A96               	goto	u3920
  8005  0295                     u3921:	
  8006  0295  2A98               	goto	l2737
  8007  0296                     u3920:	
  8008  0296                     l2735:	
  8009  0296  17D4               	bsf	___fladd@b+2,7
  8010  0297  2A9C               	goto	l707
  8011  0298                     l2737:	
  8012  0298  307F               	movlw	127
  8013  0299  00DA               	movwf	??___fladd
  8014  029A  085A               	movf	??___fladd,w
  8015  029B  05D4               	andwf	___fladd@b+2,f
  8016  029C                     l707:	
  8017  029C  0864               	movf	___fladd@bexp,w
  8018  029D  00DA               	movwf	??___fladd
  8019  029E  1003               	clrc
  8020  029F  0C5A               	rrf	??___fladd,w
  8021  02A0  00DB               	movwf	??___fladd+1
  8022  02A1  085B               	movf	??___fladd+1,w
  8023  02A2  00D5               	movwf	___fladd@b+3
  8024  02A3                     l2739:	
  8025  02A3  1FE2               	btfss	___fladd@signs,7
  8026  02A4  2AA6               	goto	u3931
  8027  02A5  2AA7               	goto	u3930
  8028  02A6                     u3931:	
  8029  02A6  2AA8               	goto	l708
  8030  02A7                     u3930:	
  8031  02A7                     l2741:	
  8032  02A7  17D5               	bsf	___fladd@b+3,7
  8033  02A8                     l708:	
  8034  02A8                     l678:	
  8035  02A8  0008               	return
  8036  02A9                     __end_of___fladd:	
  8037                           
  8038                           	psect	text20
  8039  0003                     __ptext20:	
  8040 ;; *************** function ___flneg *****************
  8041 ;; Defined at:
  8042 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  f1              4    0[COMMON] unsigned char 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  4    0[COMMON] unsigned char 
  8049 ;; Registers used:
  8050 ;;		wreg
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8056 ;;      Params:         4       0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0
  8058 ;;      Temps:          0       0       0       0       0
  8059 ;;      Totals:         4       0       0       0       0
  8060 ;;Total ram usage:        4 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_sprintf
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function ___flneg
  8071  0003                     ___flneg:	
  8072  0003                     l3149:	
  8073                           ;incstack = 0
  8074                           ; Regs used in ___flneg: [wreg]
  8075                           
  8076  0003  0873               	movf	___flneg@f1+3,w
  8077  0004  0472               	iorwf	___flneg@f1+2,w
  8078  0005  0471               	iorwf	___flneg@f1+1,w
  8079  0006  0470               	iorwf	___flneg@f1,w
  8080  0007  1903               	skipnz
  8081  0008  280A               	goto	u5051
  8082  0009  280B               	goto	u5050
  8083  000A                     u5051:	
  8084  000A  280D               	goto	l3153
  8085  000B                     u5050:	
  8086  000B                     l3151:	
  8087  000B  3080               	movlw	128
  8088  000C  06F3               	xorwf	___flneg@f1+3,f
  8089  000D                     l3153:	
  8090  000D                     l537:	
  8091  000D  0008               	return
  8092  000E                     __end_of___flneg:	
  8093                           
  8094                           	psect	text21
  8095  1C31                     __ptext21:	
  8096 ;; *************** function ___flge *****************
  8097 ;; Defined at:
  8098 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;  ff1             4    0[COMMON] unsigned char 
  8101 ;;  ff2             4    4[COMMON] unsigned char 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;		None               void
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8113 ;;      Params:         8       0       0       0       0
  8114 ;;      Locals:         0       0       0       0       0
  8115 ;;      Temps:          4       0       0       0       0
  8116 ;;      Totals:        12       0       0       0       0
  8117 ;;Total ram usage:       12 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; This function calls:
  8120 ;;		Nothing
  8121 ;; This function is called by:
  8122 ;;		_sprintf
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           
  8127                           ;psect for function ___flge
  8128  1C31                     ___flge:	
  8129  1C31                     l3129:	
  8130                           ;incstack = 0
  8131                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8132                           
  8133  1C31  3000               	movlw	0
  8134  1C32  0570               	andwf	___flge@ff1,w
  8135  1C33  00F8               	movwf	??___flge
  8136  1C34  3000               	movlw	0
  8137  1C35  0571               	andwf	___flge@ff1+1,w
  8138  1C36  00F9               	movwf	??___flge+1
  8139  1C37  3080               	movlw	128
  8140  1C38  0572               	andwf	___flge@ff1+2,w
  8141  1C39  00FA               	movwf	??___flge+2
  8142  1C3A  307F               	movlw	127
  8143  1C3B  0573               	andwf	___flge@ff1+3,w
  8144  1C3C  00FB               	movwf	??___flge+3
  8145  1C3D  087B               	movf	??___flge+3,w
  8146  1C3E  047A               	iorwf	??___flge+2,w
  8147  1C3F  0479               	iorwf	??___flge+1,w
  8148  1C40  0478               	iorwf	??___flge,w
  8149  1C41  1D03               	skipz
  8150  1C42  2C44               	goto	u4981
  8151  1C43  2C45               	goto	u4980
  8152  1C44                     u4981:	
  8153  1C44  2C4D               	goto	l529
  8154  1C45                     u4980:	
  8155  1C45                     l3131:	
  8156  1C45  3000               	movlw	0
  8157  1C46  00F3               	movwf	___flge@ff1+3
  8158  1C47  3000               	movlw	0
  8159  1C48  00F2               	movwf	___flge@ff1+2
  8160  1C49  3000               	movlw	0
  8161  1C4A  00F1               	movwf	___flge@ff1+1
  8162  1C4B  3000               	movlw	0
  8163  1C4C  00F0               	movwf	___flge@ff1
  8164  1C4D                     l529:	
  8165  1C4D  3000               	movlw	0
  8166  1C4E  0574               	andwf	___flge@ff2,w
  8167  1C4F  00F8               	movwf	??___flge
  8168  1C50  3000               	movlw	0
  8169  1C51  0575               	andwf	___flge@ff2+1,w
  8170  1C52  00F9               	movwf	??___flge+1
  8171  1C53  3080               	movlw	128
  8172  1C54  0576               	andwf	___flge@ff2+2,w
  8173  1C55  00FA               	movwf	??___flge+2
  8174  1C56  307F               	movlw	127
  8175  1C57  0577               	andwf	___flge@ff2+3,w
  8176  1C58  00FB               	movwf	??___flge+3
  8177  1C59  087B               	movf	??___flge+3,w
  8178  1C5A  047A               	iorwf	??___flge+2,w
  8179  1C5B  0479               	iorwf	??___flge+1,w
  8180  1C5C  0478               	iorwf	??___flge,w
  8181  1C5D  1D03               	skipz
  8182  1C5E  2C60               	goto	u4991
  8183  1C5F  2C61               	goto	u4990
  8184  1C60                     u4991:	
  8185  1C60  2C69               	goto	l3135
  8186  1C61                     u4990:	
  8187  1C61                     l3133:	
  8188  1C61  3000               	movlw	0
  8189  1C62  00F7               	movwf	___flge@ff2+3
  8190  1C63  3000               	movlw	0
  8191  1C64  00F6               	movwf	___flge@ff2+2
  8192  1C65  3000               	movlw	0
  8193  1C66  00F5               	movwf	___flge@ff2+1
  8194  1C67  3000               	movlw	0
  8195  1C68  00F4               	movwf	___flge@ff2
  8196  1C69                     l3135:	
  8197  1C69  1FF3               	btfss	___flge@ff1+3,7
  8198  1C6A  2C6C               	goto	u5001
  8199  1C6B  2C6D               	goto	u5000
  8200  1C6C                     u5001:	
  8201  1C6C  2C91               	goto	l3139
  8202  1C6D                     u5000:	
  8203  1C6D                     l3137:	
  8204  1C6D  3000               	movlw	0
  8205  1C6E  00F8               	movwf	??___flge
  8206  1C6F  3000               	movlw	0
  8207  1C70  00F9               	movwf	??___flge+1
  8208  1C71  3000               	movlw	0
  8209  1C72  00FA               	movwf	??___flge+2
  8210  1C73  3080               	movlw	128
  8211  1C74  00FB               	movwf	??___flge+3
  8212  1C75  0870               	movf	___flge@ff1,w
  8213  1C76  02F8               	subwf	??___flge,f
  8214  1C77  0871               	movf	___flge@ff1+1,w
  8215  1C78  1C03               	skipc
  8216  1C79  0F71               	incfsz	___flge@ff1+1,w
  8217  1C7A  2C7C               	goto	u5011
  8218  1C7B  2C7D               	goto	u5012
  8219  1C7C                     u5011:	
  8220  1C7C  02F9               	subwf	??___flge+1,f
  8221  1C7D                     u5012:	
  8222  1C7D  0872               	movf	___flge@ff1+2,w
  8223  1C7E  1C03               	skipc
  8224  1C7F  0F72               	incfsz	___flge@ff1+2,w
  8225  1C80  2C82               	goto	u5013
  8226  1C81  2C83               	goto	u5014
  8227  1C82                     u5013:	
  8228  1C82  02FA               	subwf	??___flge+2,f
  8229  1C83                     u5014:	
  8230  1C83  0873               	movf	___flge@ff1+3,w
  8231  1C84  1C03               	skipc
  8232  1C85  0F73               	incfsz	___flge@ff1+3,w
  8233  1C86  2C88               	goto	u5015
  8234  1C87  2C89               	goto	u5016
  8235  1C88                     u5015:	
  8236  1C88  02FB               	subwf	??___flge+3,f
  8237  1C89                     u5016:	
  8238  1C89  087B               	movf	??___flge+3,w
  8239  1C8A  00F3               	movwf	___flge@ff1+3
  8240  1C8B  087A               	movf	??___flge+2,w
  8241  1C8C  00F2               	movwf	___flge@ff1+2
  8242  1C8D  0879               	movf	??___flge+1,w
  8243  1C8E  00F1               	movwf	___flge@ff1+1
  8244  1C8F  0878               	movf	??___flge,w
  8245  1C90  00F0               	movwf	___flge@ff1
  8246  1C91                     l3139:	
  8247  1C91  1FF7               	btfss	___flge@ff2+3,7
  8248  1C92  2C94               	goto	u5021
  8249  1C93  2C95               	goto	u5020
  8250  1C94                     u5021:	
  8251  1C94  2CB9               	goto	l532
  8252  1C95                     u5020:	
  8253  1C95                     l3141:	
  8254  1C95  3000               	movlw	0
  8255  1C96  00F8               	movwf	??___flge
  8256  1C97  3000               	movlw	0
  8257  1C98  00F9               	movwf	??___flge+1
  8258  1C99  3000               	movlw	0
  8259  1C9A  00FA               	movwf	??___flge+2
  8260  1C9B  3080               	movlw	128
  8261  1C9C  00FB               	movwf	??___flge+3
  8262  1C9D  0874               	movf	___flge@ff2,w
  8263  1C9E  02F8               	subwf	??___flge,f
  8264  1C9F  0875               	movf	___flge@ff2+1,w
  8265  1CA0  1C03               	skipc
  8266  1CA1  0F75               	incfsz	___flge@ff2+1,w
  8267  1CA2  2CA4               	goto	u5031
  8268  1CA3  2CA5               	goto	u5032
  8269  1CA4                     u5031:	
  8270  1CA4  02F9               	subwf	??___flge+1,f
  8271  1CA5                     u5032:	
  8272  1CA5  0876               	movf	___flge@ff2+2,w
  8273  1CA6  1C03               	skipc
  8274  1CA7  0F76               	incfsz	___flge@ff2+2,w
  8275  1CA8  2CAA               	goto	u5033
  8276  1CA9  2CAB               	goto	u5034
  8277  1CAA                     u5033:	
  8278  1CAA  02FA               	subwf	??___flge+2,f
  8279  1CAB                     u5034:	
  8280  1CAB  0877               	movf	___flge@ff2+3,w
  8281  1CAC  1C03               	skipc
  8282  1CAD  0F77               	incfsz	___flge@ff2+3,w
  8283  1CAE  2CB0               	goto	u5035
  8284  1CAF  2CB1               	goto	u5036
  8285  1CB0                     u5035:	
  8286  1CB0  02FB               	subwf	??___flge+3,f
  8287  1CB1                     u5036:	
  8288  1CB1  087B               	movf	??___flge+3,w
  8289  1CB2  00F7               	movwf	___flge@ff2+3
  8290  1CB3  087A               	movf	??___flge+2,w
  8291  1CB4  00F6               	movwf	___flge@ff2+2
  8292  1CB5  0879               	movf	??___flge+1,w
  8293  1CB6  00F5               	movwf	___flge@ff2+1
  8294  1CB7  0878               	movf	??___flge,w
  8295  1CB8  00F4               	movwf	___flge@ff2
  8296  1CB9                     l532:	
  8297  1CB9  3080               	movlw	128
  8298  1CBA  06F3               	xorwf	___flge@ff1+3,f
  8299  1CBB  3080               	movlw	128
  8300  1CBC  06F7               	xorwf	___flge@ff2+3,f
  8301  1CBD  0877               	movf	___flge@ff2+3,w
  8302  1CBE  0273               	subwf	___flge@ff1+3,w
  8303  1CBF  1D03               	skipz
  8304  1CC0  2CCB               	goto	u5045
  8305  1CC1  0876               	movf	___flge@ff2+2,w
  8306  1CC2  0272               	subwf	___flge@ff1+2,w
  8307  1CC3  1D03               	skipz
  8308  1CC4  2CCB               	goto	u5045
  8309  1CC5  0875               	movf	___flge@ff2+1,w
  8310  1CC6  0271               	subwf	___flge@ff1+1,w
  8311  1CC7  1D03               	skipz
  8312  1CC8  2CCB               	goto	u5045
  8313  1CC9  0874               	movf	___flge@ff2,w
  8314  1CCA  0270               	subwf	___flge@ff1,w
  8315  1CCB                     u5045:	
  8316  1CCB  1803               	skipnc
  8317  1CCC  2CCE               	goto	u5041
  8318  1CCD  2CCF               	goto	u5040
  8319  1CCE                     u5041:	
  8320  1CCE  2CD1               	goto	l3145
  8321  1CCF                     u5040:	
  8322  1CCF                     l3143:	
  8323  1CCF  1003               	clrc
  8324  1CD0  2CD2               	goto	l533
  8325  1CD1                     l3145:	
  8326  1CD1  1403               	setc
  8327  1CD2                     l533:	
  8328  1CD2  0008               	return
  8329  1CD3                     __end_of___flge:	
  8330                           
  8331                           	psect	text22
  8332  1AD0                     __ptext22:	
  8333 ;; *************** function ___fleq *****************
  8334 ;; Defined at:
  8335 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  ff1             4    0[COMMON] unsigned char 
  8338 ;;  ff2             4    4[COMMON] unsigned char 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;		None               void
  8343 ;; Registers used:
  8344 ;;		wreg, status,2, status,0
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8350 ;;      Params:         8       0       0       0       0
  8351 ;;      Locals:         0       0       0       0       0
  8352 ;;      Temps:          4       0       0       0       0
  8353 ;;      Totals:        12       0       0       0       0
  8354 ;;Total ram usage:       12 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_sprintf
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           
  8364                           ;psect for function ___fleq
  8365  1AD0                     ___fleq:	
  8366  1AD0                     l3117:	
  8367                           ;incstack = 0
  8368                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8369                           
  8370  1AD0  3000               	movlw	0
  8371  1AD1  0570               	andwf	___fleq@ff1,w
  8372  1AD2  00F8               	movwf	??___fleq
  8373  1AD3  3000               	movlw	0
  8374  1AD4  0571               	andwf	___fleq@ff1+1,w
  8375  1AD5  00F9               	movwf	??___fleq+1
  8376  1AD6  3080               	movlw	128
  8377  1AD7  0572               	andwf	___fleq@ff1+2,w
  8378  1AD8  00FA               	movwf	??___fleq+2
  8379  1AD9  307F               	movlw	127
  8380  1ADA  0573               	andwf	___fleq@ff1+3,w
  8381  1ADB  00FB               	movwf	??___fleq+3
  8382  1ADC  087B               	movf	??___fleq+3,w
  8383  1ADD  047A               	iorwf	??___fleq+2,w
  8384  1ADE  0479               	iorwf	??___fleq+1,w
  8385  1ADF  0478               	iorwf	??___fleq,w
  8386  1AE0  1D03               	skipz
  8387  1AE1  2AE3               	goto	u4951
  8388  1AE2  2AE4               	goto	u4950
  8389  1AE3                     u4951:	
  8390  1AE3  2AEC               	goto	l524
  8391  1AE4                     u4950:	
  8392  1AE4                     l3119:	
  8393  1AE4  3000               	movlw	0
  8394  1AE5  00F3               	movwf	___fleq@ff1+3
  8395  1AE6  3000               	movlw	0
  8396  1AE7  00F2               	movwf	___fleq@ff1+2
  8397  1AE8  3000               	movlw	0
  8398  1AE9  00F1               	movwf	___fleq@ff1+1
  8399  1AEA  3000               	movlw	0
  8400  1AEB  00F0               	movwf	___fleq@ff1
  8401  1AEC                     l524:	
  8402  1AEC  3000               	movlw	0
  8403  1AED  0574               	andwf	___fleq@ff2,w
  8404  1AEE  00F8               	movwf	??___fleq
  8405  1AEF  3000               	movlw	0
  8406  1AF0  0575               	andwf	___fleq@ff2+1,w
  8407  1AF1  00F9               	movwf	??___fleq+1
  8408  1AF2  3080               	movlw	128
  8409  1AF3  0576               	andwf	___fleq@ff2+2,w
  8410  1AF4  00FA               	movwf	??___fleq+2
  8411  1AF5  307F               	movlw	127
  8412  1AF6  0577               	andwf	___fleq@ff2+3,w
  8413  1AF7  00FB               	movwf	??___fleq+3
  8414  1AF8  087B               	movf	??___fleq+3,w
  8415  1AF9  047A               	iorwf	??___fleq+2,w
  8416  1AFA  0479               	iorwf	??___fleq+1,w
  8417  1AFB  0478               	iorwf	??___fleq,w
  8418  1AFC  1D03               	skipz
  8419  1AFD  2AFF               	goto	u4961
  8420  1AFE  2B00               	goto	u4960
  8421  1AFF                     u4961:	
  8422  1AFF  2B08               	goto	l525
  8423  1B00                     u4960:	
  8424  1B00                     l3121:	
  8425  1B00  3000               	movlw	0
  8426  1B01  00F7               	movwf	___fleq@ff2+3
  8427  1B02  3000               	movlw	0
  8428  1B03  00F6               	movwf	___fleq@ff2+2
  8429  1B04  3000               	movlw	0
  8430  1B05  00F5               	movwf	___fleq@ff2+1
  8431  1B06  3000               	movlw	0
  8432  1B07  00F4               	movwf	___fleq@ff2
  8433  1B08                     l525:	
  8434  1B08  0877               	movf	___fleq@ff2+3,w
  8435  1B09  0673               	xorwf	___fleq@ff1+3,w
  8436  1B0A  1D03               	skipz
  8437  1B0B  2B16               	goto	u4975
  8438  1B0C  0876               	movf	___fleq@ff2+2,w
  8439  1B0D  0672               	xorwf	___fleq@ff1+2,w
  8440  1B0E  1D03               	skipz
  8441  1B0F  2B16               	goto	u4975
  8442  1B10  0875               	movf	___fleq@ff2+1,w
  8443  1B11  0671               	xorwf	___fleq@ff1+1,w
  8444  1B12  1D03               	skipz
  8445  1B13  2B16               	goto	u4975
  8446  1B14  0874               	movf	___fleq@ff2,w
  8447  1B15  0670               	xorwf	___fleq@ff1,w
  8448  1B16                     u4975:	
  8449  1B16  1903               	skipnz
  8450  1B17  2B19               	goto	u4971
  8451  1B18  2B1A               	goto	u4970
  8452  1B19                     u4971:	
  8453  1B19  2B1C               	goto	l3125
  8454  1B1A                     u4970:	
  8455  1B1A                     l3123:	
  8456  1B1A  1003               	clrc
  8457  1B1B  2B1D               	goto	l526
  8458  1B1C                     l3125:	
  8459  1B1C  1403               	setc
  8460  1B1D                     l526:	
  8461  1B1D  0008               	return
  8462  1B1E                     __end_of___fleq:	
  8463                           
  8464                           	psect	text23
  8465  113D                     __ptext23:	
  8466 ;; *************** function ___fldiv *****************
  8467 ;; Defined at:
  8468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;  a               4    0[COMMON] unsigned char 
  8471 ;;  b               4    4[COMMON] unsigned char 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  grs             4    7[BANK0 ] unsigned long 
  8474 ;;  rem             4    0[BANK0 ] unsigned long 
  8475 ;;  new_exp         2    5[BANK0 ] int 
  8476 ;;  aexp            1   12[BANK0 ] unsigned char 
  8477 ;;  bexp            1   11[BANK0 ] unsigned char 
  8478 ;;  sign            1    4[BANK0 ] unsigned char 
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  4    0[COMMON] unsigned char 
  8481 ;; Registers used:
  8482 ;;		wreg, status,2, status,0, btemp+1
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8488 ;;      Params:         8       0       0       0       0
  8489 ;;      Locals:         0      13       0       0       0
  8490 ;;      Temps:          5       0       0       0       0
  8491 ;;      Totals:        13      13       0       0       0
  8492 ;;Total ram usage:       26 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; This function calls:
  8495 ;;		Nothing
  8496 ;; This function is called by:
  8497 ;;		_main
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           
  8502                           ;psect for function ___fldiv
  8503  113D                     ___fldiv:	
  8504  113D                     l3609:	
  8505                           ;incstack = 0
  8506                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8507                           
  8508  113D  0877               	movf	___fldiv@b+3,w
  8509  113E  3980               	andlw	128
  8510  113F  00F8               	movwf	??___fldiv
  8511  1140  0878               	movf	??___fldiv,w
  8512  1141  1283               	bcf	3,5	;RP0=0, select bank0
  8513  1142  1303               	bcf	3,6	;RP1=0, select bank0
  8514  1143  00A4               	movwf	___fldiv@sign
  8515  1144                     l3611:	
  8516  1144  0877               	movf	___fldiv@b+3,w
  8517  1145  00F8               	movwf	??___fldiv
  8518  1146  0778               	addwf	??___fldiv,w
  8519  1147  00F9               	movwf	??___fldiv+1
  8520  1148  0879               	movf	??___fldiv+1,w
  8521  1149  00AB               	movwf	___fldiv@bexp
  8522  114A                     l3613:	
  8523  114A  1FF6               	btfss	___fldiv@b+2,7
  8524  114B  294D               	goto	u5951
  8525  114C  294E               	goto	u5950
  8526  114D                     u5951:	
  8527  114D  294F               	goto	l3617
  8528  114E                     u5950:	
  8529  114E                     l3615:	
  8530  114E  142B               	bsf	___fldiv@bexp,0
  8531  114F                     l3617:	
  8532  114F  082B               	movf	___fldiv@bexp,w
  8533  1150  1903               	btfsc	3,2
  8534  1151  2953               	goto	u5961
  8535  1152  2954               	goto	u5960
  8536  1153                     u5961:	
  8537  1153  2964               	goto	l3627
  8538  1154                     u5960:	
  8539  1154                     l3619:	
  8540  1154  0A2B               	incf	___fldiv@bexp,w
  8541  1155  1D03               	btfss	3,2
  8542  1156  2958               	goto	u5971
  8543  1157  2959               	goto	u5970
  8544  1158                     u5971:	
  8545  1158  2961               	goto	l3623
  8546  1159                     u5970:	
  8547  1159                     l3621:	
  8548  1159  3000               	movlw	0
  8549  115A  00F7               	movwf	___fldiv@b+3
  8550  115B  3000               	movlw	0
  8551  115C  00F6               	movwf	___fldiv@b+2
  8552  115D  3000               	movlw	0
  8553  115E  00F5               	movwf	___fldiv@b+1
  8554  115F  3000               	movlw	0
  8555  1160  00F4               	movwf	___fldiv@b
  8556  1161                     l3623:	
  8557  1161  17F6               	bsf	___fldiv@b+2,7
  8558  1162                     l3625:	
  8559  1162  01F7               	clrf	___fldiv@b+3
  8560  1163  296C               	goto	l3629
  8561  1164                     l3627:	
  8562  1164  3000               	movlw	0
  8563  1165  00F7               	movwf	___fldiv@b+3
  8564  1166  3000               	movlw	0
  8565  1167  00F6               	movwf	___fldiv@b+2
  8566  1168  3000               	movlw	0
  8567  1169  00F5               	movwf	___fldiv@b+1
  8568  116A  3000               	movlw	0
  8569  116B  00F4               	movwf	___fldiv@b
  8570  116C                     l3629:	
  8571  116C  0873               	movf	___fldiv@a+3,w
  8572  116D  3980               	andlw	128
  8573  116E  00F8               	movwf	??___fldiv
  8574  116F  0878               	movf	??___fldiv,w
  8575  1170  06A4               	xorwf	___fldiv@sign,f
  8576  1171                     l3631:	
  8577  1171  0873               	movf	___fldiv@a+3,w
  8578  1172  00F8               	movwf	??___fldiv
  8579  1173  0778               	addwf	??___fldiv,w
  8580  1174  00F9               	movwf	??___fldiv+1
  8581  1175  0879               	movf	??___fldiv+1,w
  8582  1176  00AC               	movwf	___fldiv@aexp
  8583  1177                     l3633:	
  8584  1177  1FF2               	btfss	___fldiv@a+2,7
  8585  1178  297A               	goto	u5981
  8586  1179  297B               	goto	u5980
  8587  117A                     u5981:	
  8588  117A  297C               	goto	l3637
  8589  117B                     u5980:	
  8590  117B                     l3635:	
  8591  117B  142C               	bsf	___fldiv@aexp,0
  8592  117C                     l3637:	
  8593  117C  082C               	movf	___fldiv@aexp,w
  8594  117D  1903               	btfsc	3,2
  8595  117E  2980               	goto	u5991
  8596  117F  2981               	goto	u5990
  8597  1180                     u5991:	
  8598  1180  2991               	goto	l3647
  8599  1181                     u5990:	
  8600  1181                     l3639:	
  8601  1181  0A2C               	incf	___fldiv@aexp,w
  8602  1182  1D03               	btfss	3,2
  8603  1183  2985               	goto	u6001
  8604  1184  2986               	goto	u6000
  8605  1185                     u6001:	
  8606  1185  298E               	goto	l3643
  8607  1186                     u6000:	
  8608  1186                     l3641:	
  8609  1186  3000               	movlw	0
  8610  1187  00F3               	movwf	___fldiv@a+3
  8611  1188  3000               	movlw	0
  8612  1189  00F2               	movwf	___fldiv@a+2
  8613  118A  3000               	movlw	0
  8614  118B  00F1               	movwf	___fldiv@a+1
  8615  118C  3000               	movlw	0
  8616  118D  00F0               	movwf	___fldiv@a
  8617  118E                     l3643:	
  8618  118E  17F2               	bsf	___fldiv@a+2,7
  8619  118F                     l3645:	
  8620  118F  01F3               	clrf	___fldiv@a+3
  8621  1190  2999               	goto	l721
  8622  1191                     l3647:	
  8623  1191  3000               	movlw	0
  8624  1192  00F3               	movwf	___fldiv@a+3
  8625  1193  3000               	movlw	0
  8626  1194  00F2               	movwf	___fldiv@a+2
  8627  1195  3000               	movlw	0
  8628  1196  00F1               	movwf	___fldiv@a+1
  8629  1197  3000               	movlw	0
  8630  1198  00F0               	movwf	___fldiv@a
  8631  1199                     l721:	
  8632  1199  0873               	movf	___fldiv@a+3,w
  8633  119A  0472               	iorwf	___fldiv@a+2,w
  8634  119B  0471               	iorwf	___fldiv@a+1,w
  8635  119C  0470               	iorwf	___fldiv@a,w
  8636  119D  1D03               	skipz
  8637  119E  29A0               	goto	u6011
  8638  119F  29A1               	goto	u6010
  8639  11A0                     u6011:	
  8640  11A0  29BA               	goto	l3657
  8641  11A1                     u6010:	
  8642  11A1                     l3649:	
  8643  11A1  3000               	movlw	0
  8644  11A2  00F7               	movwf	___fldiv@b+3
  8645  11A3  3000               	movlw	0
  8646  11A4  00F6               	movwf	___fldiv@b+2
  8647  11A5  3000               	movlw	0
  8648  11A6  00F5               	movwf	___fldiv@b+1
  8649  11A7  3000               	movlw	0
  8650  11A8  00F4               	movwf	___fldiv@b
  8651  11A9  3080               	movlw	128
  8652  11AA  04F6               	iorwf	___fldiv@b+2,f
  8653  11AB  307F               	movlw	127
  8654  11AC  04F7               	iorwf	___fldiv@b+3,f
  8655  11AD                     l3651:	
  8656  11AD  0824               	movf	___fldiv@sign,w
  8657  11AE  00F8               	movwf	??___fldiv
  8658  11AF  0878               	movf	??___fldiv,w
  8659  11B0  04F7               	iorwf	___fldiv@b+3,f
  8660  11B1                     l3653:	
  8661  11B1  0877               	movf	___fldiv@b+3,w
  8662  11B2  00F3               	movwf	?___fldiv+3
  8663  11B3  0876               	movf	___fldiv@b+2,w
  8664  11B4  00F2               	movwf	?___fldiv+2
  8665  11B5  0875               	movf	___fldiv@b+1,w
  8666  11B6  00F1               	movwf	?___fldiv+1
  8667  11B7  0874               	movf	___fldiv@b,w
  8668  11B8  00F0               	movwf	?___fldiv
  8669  11B9  2B1F               	goto	l723
  8670  11BA                     l3657:	
  8671  11BA  082B               	movf	___fldiv@bexp,w
  8672  11BB  1D03               	btfss	3,2
  8673  11BC  29BE               	goto	u6021
  8674  11BD  29BF               	goto	u6020
  8675  11BE                     u6021:	
  8676  11BE  29C8               	goto	l3663
  8677  11BF                     u6020:	
  8678  11BF                     l3659:	
  8679  11BF  3000               	movlw	0
  8680  11C0  00F3               	movwf	?___fldiv+3
  8681  11C1  3000               	movlw	0
  8682  11C2  00F2               	movwf	?___fldiv+2
  8683  11C3  3000               	movlw	0
  8684  11C4  00F1               	movwf	?___fldiv+1
  8685  11C5  3000               	movlw	0
  8686  11C6  00F0               	movwf	?___fldiv
  8687  11C7  2B1F               	goto	l723
  8688  11C8                     l3663:	
  8689  11C8  082B               	movf	___fldiv@bexp,w
  8690  11C9  00F8               	movwf	??___fldiv
  8691  11CA  01F9               	clrf	??___fldiv+1
  8692  11CB  0879               	movf	??___fldiv+1,w
  8693  11CC  00FB               	movwf	??___fldiv+3
  8694  11CD  082C               	movf	___fldiv@aexp,w
  8695  11CE  0278               	subwf	??___fldiv,w
  8696  11CF  00FA               	movwf	??___fldiv+2
  8697  11D0  1C03               	skipc
  8698  11D1  03FB               	decf	??___fldiv+3,f
  8699  11D2  087A               	movf	??___fldiv+2,w
  8700  11D3  3E7F               	addlw	127
  8701  11D4  00A5               	movwf	___fldiv@new_exp
  8702  11D5  087B               	movf	??___fldiv+3,w
  8703  11D6  1803               	skipnc
  8704  11D7  3E01               	addlw	1
  8705  11D8  3E00               	addlw	0
  8706  11D9  00A6               	movwf	___fldiv@new_exp+1
  8707  11DA                     l3665:	
  8708  11DA  0877               	movf	___fldiv@b+3,w
  8709  11DB  00A3               	movwf	___fldiv@rem+3
  8710  11DC  0876               	movf	___fldiv@b+2,w
  8711  11DD  00A2               	movwf	___fldiv@rem+2
  8712  11DE  0875               	movf	___fldiv@b+1,w
  8713  11DF  00A1               	movwf	___fldiv@rem+1
  8714  11E0  0874               	movf	___fldiv@b,w
  8715  11E1  00A0               	movwf	___fldiv@rem
  8716  11E2                     l3667:	
  8717  11E2  3000               	movlw	0
  8718  11E3  00F7               	movwf	___fldiv@b+3
  8719  11E4  3000               	movlw	0
  8720  11E5  00F6               	movwf	___fldiv@b+2
  8721  11E6  3000               	movlw	0
  8722  11E7  00F5               	movwf	___fldiv@b+1
  8723  11E8  3000               	movlw	0
  8724  11E9  00F4               	movwf	___fldiv@b
  8725  11EA                     l3669:	
  8726  11EA  3000               	movlw	0
  8727  11EB  00AA               	movwf	___fldiv@grs+3
  8728  11EC  3000               	movlw	0
  8729  11ED  00A9               	movwf	___fldiv@grs+2
  8730  11EE  3000               	movlw	0
  8731  11EF  00A8               	movwf	___fldiv@grs+1
  8732  11F0  3000               	movlw	0
  8733  11F1  00A7               	movwf	___fldiv@grs
  8734  11F2                     l3671:	
  8735  11F2  01AC               	clrf	___fldiv@aexp
  8736  11F3  2A44               	goto	l3691
  8737  11F4                     l3673:	
  8738  11F4  082C               	movf	___fldiv@aexp,w
  8739  11F5  1903               	btfsc	3,2
  8740  11F6  29F8               	goto	u6031
  8741  11F7  29F9               	goto	u6030
  8742  11F8                     u6031:	
  8743  11F8  2A19               	goto	l3683
  8744  11F9                     u6030:	
  8745  11F9                     l3675:	
  8746  11F9  3001               	movlw	1
  8747  11FA  00F8               	movwf	??___fldiv
  8748  11FB                     u6045:	
  8749  11FB  1003               	clrc
  8750  11FC  0DA0               	rlf	___fldiv@rem,f
  8751  11FD  0DA1               	rlf	___fldiv@rem+1,f
  8752  11FE  0DA2               	rlf	___fldiv@rem+2,f
  8753  11FF  0DA3               	rlf	___fldiv@rem+3,f
  8754  1200  0BF8               	decfsz	??___fldiv,f
  8755  1201  29FB               	goto	u6045
  8756  1202  3001               	movlw	1
  8757  1203  00F8               	movwf	??___fldiv
  8758  1204                     u6055:	
  8759  1204  1003               	clrc
  8760  1205  0DF4               	rlf	___fldiv@b,f
  8761  1206  0DF5               	rlf	___fldiv@b+1,f
  8762  1207  0DF6               	rlf	___fldiv@b+2,f
  8763  1208  0DF7               	rlf	___fldiv@b+3,f
  8764  1209  0BF8               	decfsz	??___fldiv,f
  8765  120A  2A04               	goto	u6055
  8766  120B                     l3677:	
  8767  120B  1FAA               	btfss	___fldiv@grs+3,7
  8768  120C  2A0E               	goto	u6061
  8769  120D  2A0F               	goto	u6060
  8770  120E                     u6061:	
  8771  120E  2A10               	goto	l3681
  8772  120F                     u6060:	
  8773  120F                     l3679:	
  8774  120F  1474               	bsf	___fldiv@b,0
  8775  1210                     l3681:	
  8776  1210  3001               	movlw	1
  8777  1211  00F8               	movwf	??___fldiv
  8778  1212                     u6075:	
  8779  1212  1003               	clrc
  8780  1213  0DA7               	rlf	___fldiv@grs,f
  8781  1214  0DA8               	rlf	___fldiv@grs+1,f
  8782  1215  0DA9               	rlf	___fldiv@grs+2,f
  8783  1216  0DAA               	rlf	___fldiv@grs+3,f
  8784  1217  0BF8               	decfsz	??___fldiv,f
  8785  1218  2A12               	goto	u6075
  8786  1219                     l3683:	
  8787  1219  0873               	movf	___fldiv@a+3,w
  8788  121A  0223               	subwf	___fldiv@rem+3,w
  8789  121B  1D03               	skipz
  8790  121C  2A27               	goto	u6085
  8791  121D  0872               	movf	___fldiv@a+2,w
  8792  121E  0222               	subwf	___fldiv@rem+2,w
  8793  121F  1D03               	skipz
  8794  1220  2A27               	goto	u6085
  8795  1221  0871               	movf	___fldiv@a+1,w
  8796  1222  0221               	subwf	___fldiv@rem+1,w
  8797  1223  1D03               	skipz
  8798  1224  2A27               	goto	u6085
  8799  1225  0870               	movf	___fldiv@a,w
  8800  1226  0220               	subwf	___fldiv@rem,w
  8801  1227                     u6085:	
  8802  1227  1C03               	skipc
  8803  1228  2A2A               	goto	u6081
  8804  1229  2A2B               	goto	u6080
  8805  122A                     u6081:	
  8806  122A  2A40               	goto	l3689
  8807  122B                     u6080:	
  8808  122B                     l3685:	
  8809  122B  172A               	bsf	___fldiv@grs+3,6
  8810  122C                     l3687:	
  8811  122C  0870               	movf	___fldiv@a,w
  8812  122D  02A0               	subwf	___fldiv@rem,f
  8813  122E  0871               	movf	___fldiv@a+1,w
  8814  122F  1C03               	skipc
  8815  1230  0F71               	incfsz	___fldiv@a+1,w
  8816  1231  2A33               	goto	u6095
  8817  1232  2A34               	goto	u6096
  8818  1233                     u6095:	
  8819  1233  02A1               	subwf	___fldiv@rem+1,f
  8820  1234                     u6096:	
  8821  1234  0872               	movf	___fldiv@a+2,w
  8822  1235  1C03               	skipc
  8823  1236  0F72               	incfsz	___fldiv@a+2,w
  8824  1237  2A39               	goto	u6097
  8825  1238  2A3A               	goto	u6098
  8826  1239                     u6097:	
  8827  1239  02A2               	subwf	___fldiv@rem+2,f
  8828  123A                     u6098:	
  8829  123A  0873               	movf	___fldiv@a+3,w
  8830  123B  1C03               	skipc
  8831  123C  0F73               	incfsz	___fldiv@a+3,w
  8832  123D  2A3F               	goto	u6099
  8833  123E  2A40               	goto	u6090
  8834  123F                     u6099:	
  8835  123F  02A3               	subwf	___fldiv@rem+3,f
  8836  1240                     u6090:	
  8837  1240                     l3689:	
  8838  1240  3001               	movlw	1
  8839  1241  00F8               	movwf	??___fldiv
  8840  1242  0878               	movf	??___fldiv,w
  8841  1243  07AC               	addwf	___fldiv@aexp,f
  8842  1244                     l3691:	
  8843  1244  301A               	movlw	26
  8844  1245  022C               	subwf	___fldiv@aexp,w
  8845  1246  1C03               	skipc
  8846  1247  2A49               	goto	u6101
  8847  1248  2A4A               	goto	u6100
  8848  1249                     u6101:	
  8849  1249  29F4               	goto	l3673
  8850  124A                     u6100:	
  8851  124A                     l3693:	
  8852  124A  0823               	movf	___fldiv@rem+3,w
  8853  124B  0422               	iorwf	___fldiv@rem+2,w
  8854  124C  0421               	iorwf	___fldiv@rem+1,w
  8855  124D  0420               	iorwf	___fldiv@rem,w
  8856  124E  1903               	skipnz
  8857  124F  2A51               	goto	u6111
  8858  1250  2A52               	goto	u6110
  8859  1251                     u6111:	
  8860  1251  2A71               	goto	l3707
  8861  1252                     u6110:	
  8862  1252                     l3695:	
  8863  1252  1427               	bsf	___fldiv@grs,0
  8864  1253  2A71               	goto	l3707
  8865  1254                     l3697:	
  8866  1254  3001               	movlw	1
  8867  1255  00F8               	movwf	??___fldiv
  8868  1256                     u6125:	
  8869  1256  1003               	clrc
  8870  1257  0DF4               	rlf	___fldiv@b,f
  8871  1258  0DF5               	rlf	___fldiv@b+1,f
  8872  1259  0DF6               	rlf	___fldiv@b+2,f
  8873  125A  0DF7               	rlf	___fldiv@b+3,f
  8874  125B  0BF8               	decfsz	??___fldiv,f
  8875  125C  2A56               	goto	u6125
  8876  125D                     l3699:	
  8877  125D  1FAA               	btfss	___fldiv@grs+3,7
  8878  125E  2A60               	goto	u6131
  8879  125F  2A61               	goto	u6130
  8880  1260                     u6131:	
  8881  1260  2A62               	goto	l3703
  8882  1261                     u6130:	
  8883  1261                     l3701:	
  8884  1261  1474               	bsf	___fldiv@b,0
  8885  1262                     l3703:	
  8886  1262  3001               	movlw	1
  8887  1263  00F8               	movwf	??___fldiv
  8888  1264                     u6145:	
  8889  1264  1003               	clrc
  8890  1265  0DA7               	rlf	___fldiv@grs,f
  8891  1266  0DA8               	rlf	___fldiv@grs+1,f
  8892  1267  0DA9               	rlf	___fldiv@grs+2,f
  8893  1268  0DAA               	rlf	___fldiv@grs+3,f
  8894  1269  0BF8               	decfsz	??___fldiv,f
  8895  126A  2A64               	goto	u6145
  8896  126B                     l3705:	
  8897  126B  30FF               	movlw	255
  8898  126C  07A5               	addwf	___fldiv@new_exp,f
  8899  126D  1803               	skipnc
  8900  126E  0AA6               	incf	___fldiv@new_exp+1,f
  8901  126F  30FF               	movlw	255
  8902  1270  07A6               	addwf	___fldiv@new_exp+1,f
  8903  1271                     l3707:	
  8904  1271  1FF6               	btfss	___fldiv@b+2,7
  8905  1272  2A74               	goto	u6151
  8906  1273  2A75               	goto	u6150
  8907  1274                     u6151:	
  8908  1274  2A54               	goto	l3697
  8909  1275                     u6150:	
  8910  1275                     l3709:	
  8911  1275  01AC               	clrf	___fldiv@aexp
  8912  1276                     l3711:	
  8913  1276  1FAA               	btfss	___fldiv@grs+3,7
  8914  1277  2A79               	goto	u6161
  8915  1278  2A7A               	goto	u6160
  8916  1279                     u6161:	
  8917  1279  2A96               	goto	l3719
  8918  127A                     u6160:	
  8919  127A                     l3713:	
  8920  127A  30FF               	movlw	255
  8921  127B  0527               	andwf	___fldiv@grs,w
  8922  127C  00F8               	movwf	??___fldiv
  8923  127D  30FF               	movlw	255
  8924  127E  0528               	andwf	___fldiv@grs+1,w
  8925  127F  00F9               	movwf	??___fldiv+1
  8926  1280  30FF               	movlw	255
  8927  1281  0529               	andwf	___fldiv@grs+2,w
  8928  1282  00FA               	movwf	??___fldiv+2
  8929  1283  307F               	movlw	127
  8930  1284  052A               	andwf	___fldiv@grs+3,w
  8931  1285  00FB               	movwf	??___fldiv+3
  8932  1286  087B               	movf	??___fldiv+3,w
  8933  1287  047A               	iorwf	??___fldiv+2,w
  8934  1288  0479               	iorwf	??___fldiv+1,w
  8935  1289  0478               	iorwf	??___fldiv,w
  8936  128A  1903               	skipnz
  8937  128B  2A8D               	goto	u6171
  8938  128C  2A8E               	goto	u6170
  8939  128D                     u6171:	
  8940  128D  2A91               	goto	l737
  8941  128E                     u6170:	
  8942  128E                     l3715:	
  8943  128E  01AC               	clrf	___fldiv@aexp
  8944  128F  0AAC               	incf	___fldiv@aexp,f
  8945  1290  2A96               	goto	l3719
  8946  1291                     l737:	
  8947  1291  1C74               	btfss	___fldiv@b,0
  8948  1292  2A94               	goto	u6181
  8949  1293  2A95               	goto	u6180
  8950  1294                     u6181:	
  8951  1294  2A96               	goto	l3719
  8952  1295                     u6180:	
  8953  1295  2A8E               	goto	l3715
  8954  1296                     l3719:	
  8955  1296  082C               	movf	___fldiv@aexp,w
  8956  1297  1903               	btfsc	3,2
  8957  1298  2A9A               	goto	u6191
  8958  1299  2A9B               	goto	u6190
  8959  129A                     u6191:	
  8960  129A  2ACC               	goto	l3729
  8961  129B                     u6190:	
  8962  129B                     l3721:	
  8963  129B  3001               	movlw	1
  8964  129C  07F4               	addwf	___fldiv@b,f
  8965  129D  3000               	movlw	0
  8966  129E  1803               	skipnc
  8967  129F  3001               	movlw	1
  8968  12A0  07F5               	addwf	___fldiv@b+1,f
  8969  12A1  3000               	movlw	0
  8970  12A2  1803               	skipnc
  8971  12A3  3001               	movlw	1
  8972  12A4  07F6               	addwf	___fldiv@b+2,f
  8973  12A5  3000               	movlw	0
  8974  12A6  1803               	skipnc
  8975  12A7  3001               	movlw	1
  8976  12A8  07F7               	addwf	___fldiv@b+3,f
  8977  12A9                     l3723:	
  8978  12A9  1C77               	btfss	___fldiv@b+3,0
  8979  12AA  2AAC               	goto	u6201
  8980  12AB  2AAD               	goto	u6200
  8981  12AC                     u6201:	
  8982  12AC  2ACC               	goto	l3729
  8983  12AD                     u6200:	
  8984  12AD                     l3725:	
  8985  12AD  0874               	movf	___fldiv@b,w
  8986  12AE  00F8               	movwf	??___fldiv
  8987  12AF  0875               	movf	___fldiv@b+1,w
  8988  12B0  00F9               	movwf	??___fldiv+1
  8989  12B1  0876               	movf	___fldiv@b+2,w
  8990  12B2  00FA               	movwf	??___fldiv+2
  8991  12B3  0877               	movf	___fldiv@b+3,w
  8992  12B4  00FB               	movwf	??___fldiv+3
  8993  12B5  3001               	movlw	1
  8994  12B6  00FC               	movwf	??___fldiv+4
  8995  12B7                     u6215:	
  8996  12B7  0D7B               	rlf	??___fldiv+3,w
  8997  12B8  0CFB               	rrf	??___fldiv+3,f
  8998  12B9  0CFA               	rrf	??___fldiv+2,f
  8999  12BA  0CF9               	rrf	??___fldiv+1,f
  9000  12BB  0CF8               	rrf	??___fldiv,f
  9001  12BC                     u6210:	
  9002  12BC  0BFC               	decfsz	??___fldiv+4,f
  9003  12BD  2AB7               	goto	u6215
  9004  12BE  087B               	movf	??___fldiv+3,w
  9005  12BF  00F7               	movwf	___fldiv@b+3
  9006  12C0  087A               	movf	??___fldiv+2,w
  9007  12C1  00F6               	movwf	___fldiv@b+2
  9008  12C2  0879               	movf	??___fldiv+1,w
  9009  12C3  00F5               	movwf	___fldiv@b+1
  9010  12C4  0878               	movf	??___fldiv,w
  9011  12C5  00F4               	movwf	___fldiv@b
  9012  12C6                     l3727:	
  9013  12C6  3001               	movlw	1
  9014  12C7  07A5               	addwf	___fldiv@new_exp,f
  9015  12C8  1803               	skipnc
  9016  12C9  0AA6               	incf	___fldiv@new_exp+1,f
  9017  12CA  3000               	movlw	0
  9018  12CB  07A6               	addwf	___fldiv@new_exp+1,f
  9019  12CC                     l3729:	
  9020  12CC  0826               	movf	___fldiv@new_exp+1,w
  9021  12CD  3A80               	xorlw	128
  9022  12CE  00FF               	movwf	btemp+1
  9023  12CF  3080               	movlw	128
  9024  12D0  027F               	subwf	btemp+1,w
  9025  12D1  1D03               	skipz
  9026  12D2  2AD5               	goto	u6225
  9027  12D3  30FF               	movlw	255
  9028  12D4  0225               	subwf	___fldiv@new_exp,w
  9029  12D5                     u6225:	
  9030  12D5  1C03               	skipc
  9031  12D6  2AD8               	goto	u6221
  9032  12D7  2AD9               	goto	u6220
  9033  12D8                     u6221:	
  9034  12D8  2AE7               	goto	l3733
  9035  12D9                     u6220:	
  9036  12D9                     l3731:	
  9037  12D9  30FF               	movlw	255
  9038  12DA  1283               	bcf	3,5	;RP0=0, select bank0
  9039  12DB  1303               	bcf	3,6	;RP1=0, select bank0
  9040  12DC  00A5               	movwf	___fldiv@new_exp
  9041  12DD  3000               	movlw	0
  9042  12DE  00A6               	movwf	___fldiv@new_exp+1
  9043  12DF  3000               	movlw	0
  9044  12E0  00F7               	movwf	___fldiv@b+3
  9045  12E1  3000               	movlw	0
  9046  12E2  00F6               	movwf	___fldiv@b+2
  9047  12E3  3000               	movlw	0
  9048  12E4  00F5               	movwf	___fldiv@b+1
  9049  12E5  3000               	movlw	0
  9050  12E6  00F4               	movwf	___fldiv@b
  9051  12E7                     l3733:	
  9052  12E7  1283               	bcf	3,5	;RP0=0, select bank0
  9053  12E8  1303               	bcf	3,6	;RP1=0, select bank0
  9054  12E9  0826               	movf	___fldiv@new_exp+1,w
  9055  12EA  3A80               	xorlw	128
  9056  12EB  00FF               	movwf	btemp+1
  9057  12EC  3080               	movlw	128
  9058  12ED  027F               	subwf	btemp+1,w
  9059  12EE  1D03               	skipz
  9060  12EF  2AF2               	goto	u6235
  9061  12F0  3001               	movlw	1
  9062  12F1  0225               	subwf	___fldiv@new_exp,w
  9063  12F2                     u6235:	
  9064  12F2  1803               	skipnc
  9065  12F3  2AF5               	goto	u6231
  9066  12F4  2AF6               	goto	u6230
  9067  12F5                     u6231:	
  9068  12F5  2B03               	goto	l743
  9069  12F6                     u6230:	
  9070  12F6                     l3735:	
  9071  12F6  1283               	bcf	3,5	;RP0=0, select bank0
  9072  12F7  1303               	bcf	3,6	;RP1=0, select bank0
  9073  12F8  01A5               	clrf	___fldiv@new_exp
  9074  12F9  01A6               	clrf	___fldiv@new_exp+1
  9075  12FA                     l3737:	
  9076  12FA  3000               	movlw	0
  9077  12FB  00F7               	movwf	___fldiv@b+3
  9078  12FC  3000               	movlw	0
  9079  12FD  00F6               	movwf	___fldiv@b+2
  9080  12FE  3000               	movlw	0
  9081  12FF  00F5               	movwf	___fldiv@b+1
  9082  1300  3000               	movlw	0
  9083  1301  00F4               	movwf	___fldiv@b
  9084  1302                     l3739:	
  9085  1302  01A4               	clrf	___fldiv@sign
  9086  1303                     l743:	
  9087  1303  1283               	bcf	3,5	;RP0=0, select bank0
  9088  1304  1303               	bcf	3,6	;RP1=0, select bank0
  9089  1305  0825               	movf	___fldiv@new_exp,w
  9090  1306  00F8               	movwf	??___fldiv
  9091  1307  0878               	movf	??___fldiv,w
  9092  1308  00AB               	movwf	___fldiv@bexp
  9093  1309                     l3741:	
  9094  1309  1C2B               	btfss	___fldiv@bexp,0
  9095  130A  2B0C               	goto	u6241
  9096  130B  2B0D               	goto	u6240
  9097  130C                     u6241:	
  9098  130C  2B0F               	goto	l3745
  9099  130D                     u6240:	
  9100  130D                     l3743:	
  9101  130D  17F6               	bsf	___fldiv@b+2,7
  9102  130E  2B13               	goto	l745
  9103  130F                     l3745:	
  9104  130F  307F               	movlw	127
  9105  1310  00F8               	movwf	??___fldiv
  9106  1311  0878               	movf	??___fldiv,w
  9107  1312  05F6               	andwf	___fldiv@b+2,f
  9108  1313                     l745:	
  9109  1313  082B               	movf	___fldiv@bexp,w
  9110  1314  00F8               	movwf	??___fldiv
  9111  1315  1003               	clrc
  9112  1316  0C78               	rrf	??___fldiv,w
  9113  1317  00F9               	movwf	??___fldiv+1
  9114  1318  0879               	movf	??___fldiv+1,w
  9115  1319  00F7               	movwf	___fldiv@b+3
  9116  131A  0824               	movf	___fldiv@sign,w
  9117  131B  00F8               	movwf	??___fldiv
  9118  131C  0878               	movf	??___fldiv,w
  9119  131D  04F7               	iorwf	___fldiv@b+3,f
  9120  131E  29B1               	goto	l3653
  9121  131F                     l723:	
  9122  131F  0008               	return
  9123  1320                     __end_of___fldiv:	
  9124                           
  9125                           	psect	text24
  9126  1A3E                     __ptext24:	
  9127 ;; *************** function _WRITE *****************
  9128 ;; Defined at:
  9129 ;;		line 61 in file "lcd.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  a               2    9[COMMON] PTR unsigned char 
  9132 ;;		 -> STR_4(2), STR_3(2), BUFFER(16), STR_1(22), 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  b               2    0[BANK0 ] int 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9144 ;;      Params:         2       0       0       0       0
  9145 ;;      Locals:         0       2       0       0       0
  9146 ;;      Temps:          3       0       0       0       0
  9147 ;;      Totals:         5       2       0       0       0
  9148 ;;Total ram usage:        7 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    2
  9151 ;; This function calls:
  9152 ;;		_CHAR
  9153 ;; This function is called by:
  9154 ;;		_main
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           
  9159                           ;psect for function _WRITE
  9160  1A3E                     _WRITE:	
  9161  1A3E                     l3291:	
  9162                           ;incstack = 0
  9163                           ; Regs used in _WRITE: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9164                           
  9165                           
  9166                           ;lcd.c: 62:     int b;;lcd.c: 63:     for (b=0;a[b]!='\0'; b++)
  9167  1A3E  1283               	bcf	3,5	;RP0=0, select bank0
  9168  1A3F  1303               	bcf	3,6	;RP1=0, select bank0
  9169  1A40  01A0               	clrf	WRITE@b
  9170  1A41  01A1               	clrf	WRITE@b+1
  9171  1A42  2A67               	goto	l3297
  9172  1A43                     l3293:	
  9173                           
  9174                           ;lcd.c: 64:         CHAR (a[b]);
  9175  1A43  0820               	movf	WRITE@b,w
  9176  1A44  0779               	addwf	WRITE@a,w
  9177  1A45  00FC               	movwf	??_WRITE+1
  9178  1A46  087A               	movf	WRITE@a+1,w
  9179  1A47  00FB               	movwf	??_WRITE
  9180  1A48  1803               	skipnc
  9181  1A49  0AFB               	incf	??_WRITE,f
  9182  1A4A  1FA0               	btfss	WRITE@b,7
  9183  1A4B  2A4D               	goto	u5380
  9184  1A4C  03FB               	decf	??_WRITE,f
  9185  1A4D                     u5380:	
  9186  1A4D  087B               	movf	??_WRITE,w
  9187  1A4E  00FD               	movwf	??_WRITE+2
  9188  1A4F  087D               	movf	??_WRITE+2,w
  9189  1A50  1283               	bcf	3,5	;RP0=0, select bank0
  9190  1A51  1303               	bcf	3,6	;RP1=0, select bank0
  9191  1A52  00FF               	movwf	btemp+1
  9192  1A53  087C               	movf	??_WRITE+1,w
  9193  1A54  0084               	movwf	4
  9194  1A55  120A  158A  2000  160A  158A  	fcall	stringtab
  9195  1A5A  160A  158A  2107  160A  158A  	fcall	_CHAR
  9196  1A5F                     l3295:	
  9197  1A5F  3001               	movlw	1
  9198  1A60  1283               	bcf	3,5	;RP0=0, select bank0
  9199  1A61  1303               	bcf	3,6	;RP1=0, select bank0
  9200  1A62  07A0               	addwf	WRITE@b,f
  9201  1A63  1803               	skipnc
  9202  1A64  0AA1               	incf	WRITE@b+1,f
  9203  1A65  3000               	movlw	0
  9204  1A66  07A1               	addwf	WRITE@b+1,f
  9205  1A67                     l3297:	
  9206  1A67  0820               	movf	WRITE@b,w
  9207  1A68  0779               	addwf	WRITE@a,w
  9208  1A69  00FC               	movwf	??_WRITE+1
  9209  1A6A  087A               	movf	WRITE@a+1,w
  9210  1A6B  00FB               	movwf	??_WRITE
  9211  1A6C  1803               	skipnc
  9212  1A6D  0AFB               	incf	??_WRITE,f
  9213  1A6E  1FA0               	btfss	WRITE@b,7
  9214  1A6F  2A71               	goto	u5390
  9215  1A70  03FB               	decf	??_WRITE,f
  9216  1A71                     u5390:	
  9217  1A71  087B               	movf	??_WRITE,w
  9218  1A72  00FD               	movwf	??_WRITE+2
  9219  1A73  087D               	movf	??_WRITE+2,w
  9220  1A74  1283               	bcf	3,5	;RP0=0, select bank0
  9221  1A75  1303               	bcf	3,6	;RP1=0, select bank0
  9222  1A76  00FF               	movwf	btemp+1
  9223  1A77  087C               	movf	??_WRITE+1,w
  9224  1A78  0084               	movwf	4
  9225  1A79  120A  158A  2000  160A  158A  	fcall	stringtab
  9226  1A7E  3A00               	xorlw	0
  9227  1A7F  1D03               	skipz
  9228  1A80  2A82               	goto	u5401
  9229  1A81  2A83               	goto	u5400
  9230  1A82                     u5401:	
  9231  1A82  2A43               	goto	l3293
  9232  1A83                     u5400:	
  9233  1A83                     l100:	
  9234  1A83  0008               	return
  9235  1A84                     __end_of_WRITE:	
  9236                           
  9237                           	psect	text25
  9238  1907                     __ptext25:	
  9239 ;; *************** function _CHAR *****************
  9240 ;; Defined at:
  9241 ;;		line 52 in file "lcd.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  a               1    wreg     unsigned char 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  a               1    8[COMMON] unsigned char 
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		wreg, status,2, status,0, pclath, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9255 ;;      Params:         0       0       0       0       0
  9256 ;;      Locals:         1       0       0       0       0
  9257 ;;      Temps:          2       0       0       0       0
  9258 ;;      Totals:         3       0       0       0       0
  9259 ;;Total ram usage:        3 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; Hardware stack levels required when called:    1
  9262 ;; This function calls:
  9263 ;;		_delay
  9264 ;; This function is called by:
  9265 ;;		_WRITE
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           
  9270                           ;psect for function _CHAR
  9271  1907                     _CHAR:	
  9272                           
  9273                           ;incstack = 0
  9274                           ; Regs used in _CHAR: [wreg+status,2+status,0+pclath+cstack]
  9275                           ;CHAR@a stored from wreg
  9276  1907  00F8               	movwf	CHAR@a
  9277  1908                     l2893:	
  9278                           
  9279                           ;lcd.c: 53:     RS = 1;
  9280  1908  3001               	movlw	1
  9281  1909  1683               	bsf	3,5	;RP0=1, select bank1
  9282  190A  1303               	bcf	3,6	;RP1=0, select bank1
  9283  190B  00D5               	movwf	_RS^(0+128)
  9284  190C  3000               	movlw	0
  9285  190D  00D6               	movwf	(_RS^(0+128)+1)
  9286  190E                     l2895:	
  9287                           
  9288                           ;lcd.c: 54:     VAR_LCD=a;
  9289  190E  0878               	movf	CHAR@a,w
  9290  190F  00F6               	movwf	??_CHAR
  9291  1910  01F7               	clrf	??_CHAR+1
  9292  1911  0876               	movf	??_CHAR,w
  9293  1912  00D1               	movwf	_VAR_LCD^(0+128)
  9294  1913  0877               	movf	??_CHAR+1,w
  9295  1914  00D2               	movwf	(_VAR_LCD+1)^(0+128)
  9296  1915                     l2897:	
  9297                           
  9298                           ;lcd.c: 55:     RW=0;
  9299  1915  01D3               	clrf	_RW^(0+128)
  9300  1916  01D4               	clrf	(_RW+1)^(0+128)
  9301  1917                     l2899:	
  9302                           
  9303                           ;lcd.c: 56:     EN=1;
  9304  1917  3001               	movlw	1
  9305  1918  00D7               	movwf	_EN^(0+128)
  9306  1919  3000               	movlw	0
  9307  191A  00D8               	movwf	(_EN^(0+128)+1)
  9308  191B                     l2901:	
  9309                           
  9310                           ;lcd.c: 57:     delay(30);
  9311  191B  301E               	movlw	30
  9312  191C  00F0               	movwf	?_delay
  9313  191D  3000               	movlw	0
  9314  191E  00F1               	movwf	?_delay+1
  9315  191F  160A  158A  20B7  160A  158A  	fcall	_delay
  9316  1924                     l2903:	
  9317                           
  9318                           ;lcd.c: 58:     EN=0;
  9319  1924  1683               	bsf	3,5	;RP0=1, select bank1
  9320  1925  1303               	bcf	3,6	;RP1=0, select bank1
  9321  1926  01D7               	clrf	_EN^(0+128)
  9322  1927  01D8               	clrf	(_EN+1)^(0+128)
  9323  1928                     l94:	
  9324  1928  0008               	return
  9325  1929                     __end_of_CHAR:	
  9326                           
  9327                           	psect	text26
  9328  000E                     __ptext26:	
  9329 ;; *************** function _SETUP *****************
  9330 ;; Defined at:
  9331 ;;		line 44 in file "Lab3.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;		None
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;		None
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9345 ;;      Params:         0       0       0       0       0
  9346 ;;      Locals:         0       0       0       0       0
  9347 ;;      Temps:          0       0       0       0       0
  9348 ;;      Totals:         0       0       0       0       0
  9349 ;;Total ram usage:        0 bytes
  9350 ;; Hardware stack levels used:    1
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_main
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           
  9359                           ;psect for function _SETUP
  9360  000E                     _SETUP:	
  9361  000E                     l3263:	
  9362                           ;incstack = 0
  9363                           ; Regs used in _SETUP: [wreg+status,2]
  9364                           
  9365                           
  9366                           ;Lab3.c: 45:     PORTA=0;
  9367  000E  1283               	bcf	3,5	;RP0=0, select bank0
  9368  000F  1303               	bcf	3,6	;RP1=0, select bank0
  9369  0010  0185               	clrf	5	;volatile
  9370                           
  9371                           ;Lab3.c: 46:     PORTB=0;
  9372  0011  0186               	clrf	6	;volatile
  9373                           
  9374                           ;Lab3.c: 47:     PORTC=0;
  9375  0012  0187               	clrf	7	;volatile
  9376                           
  9377                           ;Lab3.c: 48:     PORTE=0;
  9378  0013  0189               	clrf	9	;volatile
  9379                           
  9380                           ;Lab3.c: 50:     TRISA=0;
  9381  0014  1683               	bsf	3,5	;RP0=1, select bank1
  9382  0015  1303               	bcf	3,6	;RP1=0, select bank1
  9383  0016  0185               	clrf	5	;volatile
  9384  0017                     l3265:	
  9385                           
  9386                           ;Lab3.c: 51:     TRISB=1;
  9387  0017  3001               	movlw	1
  9388  0018  0086               	movwf	6	;volatile
  9389  0019                     l3267:	
  9390                           
  9391                           ;Lab3.c: 52:     TRISC=0;
  9392  0019  0187               	clrf	7	;volatile
  9393  001A                     l3269:	
  9394                           
  9395                           ;Lab3.c: 53:     TRISD=0;
  9396  001A  0188               	clrf	8	;volatile
  9397  001B                     l3271:	
  9398                           
  9399                           ;Lab3.c: 55:     ANSEL=0;
  9400  001B  1683               	bsf	3,5	;RP0=1, select bank3
  9401  001C  1703               	bsf	3,6	;RP1=1, select bank3
  9402  001D  0188               	clrf	8	;volatile
  9403                           
  9404                           ;Lab3.c: 56:     ANSELH=1;
  9405  001E  3001               	movlw	1
  9406  001F  0089               	movwf	9	;volatile
  9407  0020                     l57:	
  9408  0020  0008               	return
  9409  0021                     __end_of_SETUP:	
  9410                           
  9411                           	psect	text27
  9412  1A84                     __ptext27:	
  9413 ;; *************** function _LCD_PROG *****************
  9414 ;; Defined at:
  9415 ;;		line 38 in file "lcd.c"
  9416 ;; Parameters:    Size  Location     Type
  9417 ;;		None
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;		None
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg, status,2, status,0, pclath, cstack
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9429 ;;      Params:         0       0       0       0       0
  9430 ;;      Locals:         0       0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0
  9432 ;;      Totals:         0       0       0       0       0
  9433 ;;Total ram usage:        0 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    2
  9436 ;; This function calls:
  9437 ;;		_LCD_INIT
  9438 ;;		_delay
  9439 ;; This function is called by:
  9440 ;;		_main
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           
  9445                           ;psect for function _LCD_PROG
  9446  1A84                     _LCD_PROG:	
  9447  1A84                     l3273:	
  9448                           ;incstack = 0
  9449                           ; Regs used in _LCD_PROG: [wreg+status,2+status,0+pclath+cstack]
  9450                           
  9451                           
  9452                           ;lcd.c: 39:     delay(20);
  9453  1A84  3014               	movlw	20
  9454  1A85  00F0               	movwf	?_delay
  9455  1A86  3000               	movlw	0
  9456  1A87  00F1               	movwf	?_delay+1
  9457  1A88  160A  158A  20B7  160A  158A  	fcall	_delay
  9458                           
  9459                           ;lcd.c: 40:     LCD_INIT(0x30);
  9460  1A8D  3030               	movlw	48
  9461  1A8E  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9462                           
  9463                           ;lcd.c: 41:     delay(5);
  9464  1A93  3005               	movlw	5
  9465  1A94  00F0               	movwf	?_delay
  9466  1A95  3000               	movlw	0
  9467  1A96  00F1               	movwf	?_delay+1
  9468  1A97  160A  158A  20B7  160A  158A  	fcall	_delay
  9469                           
  9470                           ;lcd.c: 42:     LCD_INIT(0x30);
  9471  1A9C  3030               	movlw	48
  9472  1A9D  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9473                           
  9474                           ;lcd.c: 43:     delay(10);
  9475  1AA2  300A               	movlw	10
  9476  1AA3  00F0               	movwf	?_delay
  9477  1AA4  3000               	movlw	0
  9478  1AA5  00F1               	movwf	?_delay+1
  9479  1AA6  160A  158A  20B7  160A  158A  	fcall	_delay
  9480                           
  9481                           ;lcd.c: 44:     LCD_INIT(0x38);
  9482  1AAB  3038               	movlw	56
  9483  1AAC  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9484                           
  9485                           ;lcd.c: 45:     LCD_INIT(0x10);
  9486  1AB1  3010               	movlw	16
  9487  1AB2  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9488                           
  9489                           ;lcd.c: 46:     LCD_INIT(0x01);
  9490  1AB7  3001               	movlw	1
  9491  1AB8  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9492                           
  9493                           ;lcd.c: 47:     LCD_INIT(0x06);
  9494  1ABD  3006               	movlw	6
  9495  1ABE  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9496                           
  9497                           ;lcd.c: 48:     LCD_INIT(0x0C);
  9498  1AC3  300C               	movlw	12
  9499  1AC4  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9500                           
  9501                           ;lcd.c: 49:     LCD_INIT(0x80);
  9502  1AC9  3080               	movlw	128
  9503  1ACA  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9504  1ACF                     l91:	
  9505  1ACF  0008               	return
  9506  1AD0                     __end_of_LCD_PROG:	
  9507                           
  9508                           	psect	text28
  9509  1972                     __ptext28:	
  9510 ;; *************** function _LCD_CURSOR *****************
  9511 ;; Defined at:
  9512 ;;		line 27 in file "lcd.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;  a               1    wreg     unsigned char 
  9515 ;;  b               1    9[COMMON] unsigned char 
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;  a               1   11[COMMON] unsigned char 
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  1    wreg      void 
  9520 ;; Registers used:
  9521 ;;		wreg, status,2, status,0, pclath, cstack
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9527 ;;      Params:         1       0       0       0       0
  9528 ;;      Locals:         1       0       0       0       0
  9529 ;;      Temps:          1       0       0       0       0
  9530 ;;      Totals:         3       0       0       0       0
  9531 ;;Total ram usage:        3 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; Hardware stack levels required when called:    2
  9534 ;; This function calls:
  9535 ;;		_LCD_INIT
  9536 ;; This function is called by:
  9537 ;;		_main
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           
  9542                           ;psect for function _LCD_CURSOR
  9543  1972                     _LCD_CURSOR:	
  9544                           
  9545                           ;incstack = 0
  9546                           ; Regs used in _LCD_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  9547                           ;LCD_CURSOR@a stored from wreg
  9548  1972  00FB               	movwf	LCD_CURSOR@a
  9549  1973                     l3279:	
  9550                           
  9551                           ;lcd.c: 28:     if (a==1){
  9552  1973  037B               	decf	LCD_CURSOR@a,w
  9553  1974  1D03               	btfss	3,2
  9554  1975  2977               	goto	u5361
  9555  1976  2978               	goto	u5360
  9556  1977                     u5361:	
  9557  1977  2985               	goto	l3285
  9558  1978                     u5360:	
  9559  1978                     l3281:	
  9560                           
  9561                           ;lcd.c: 29:         cursor =0x80+b-1;
  9562  1978  0879               	movf	LCD_CURSOR@b,w
  9563  1979  3E7F               	addlw	127
  9564  197A  00FA               	movwf	??_LCD_CURSOR
  9565  197B  087A               	movf	??_LCD_CURSOR,w
  9566  197C  1683               	bsf	3,5	;RP0=1, select bank1
  9567  197D  1303               	bcf	3,6	;RP1=0, select bank1
  9568  197E  00DD               	movwf	_cursor^(0+128)
  9569  197F                     l3283:	
  9570                           
  9571                           ;lcd.c: 30:         LCD_INIT(cursor);
  9572  197F  085D               	movf	_cursor^(0+128),w
  9573  1980  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9574  1985                     l3285:	
  9575                           
  9576                           ;lcd.c: 32:     if (a==2){
  9577  1985  3002               	movlw	2
  9578  1986  067B               	xorwf	LCD_CURSOR@a,w
  9579  1987  1D03               	btfss	3,2
  9580  1988  298A               	goto	u5371
  9581  1989  298B               	goto	u5370
  9582  198A                     u5371:	
  9583  198A  2998               	goto	l88
  9584  198B                     u5370:	
  9585  198B                     l3287:	
  9586                           
  9587                           ;lcd.c: 33:         cursor = 0xC0+b-1;
  9588  198B  0879               	movf	LCD_CURSOR@b,w
  9589  198C  3EBF               	addlw	191
  9590  198D  00FA               	movwf	??_LCD_CURSOR
  9591  198E  087A               	movf	??_LCD_CURSOR,w
  9592  198F  1683               	bsf	3,5	;RP0=1, select bank1
  9593  1990  1303               	bcf	3,6	;RP1=0, select bank1
  9594  1991  00DD               	movwf	_cursor^(0+128)
  9595  1992                     l3289:	
  9596                           
  9597                           ;lcd.c: 34:         LCD_INIT(cursor);
  9598  1992  085D               	movf	_cursor^(0+128),w
  9599  1993  160A  158A  20E7  160A  158A  	fcall	_LCD_INIT
  9600  1998                     l88:	
  9601  1998  0008               	return
  9602  1999                     __end_of_LCD_CURSOR:	
  9603                           
  9604                           	psect	text29
  9605  08CA                     __ptext29:	
  9606 ;; *************** function _LCD_CLR *****************
  9607 ;; Defined at:
  9608 ;;		line 22 in file "lcd.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;		None
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;		None
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  1    wreg      void 
  9615 ;; Registers used:
  9616 ;;		wreg, status,2, status,0, pclath, cstack
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 0/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9622 ;;      Params:         0       0       0       0       0
  9623 ;;      Locals:         0       0       0       0       0
  9624 ;;      Temps:          0       0       0       0       0
  9625 ;;      Totals:         0       0       0       0       0
  9626 ;;Total ram usage:        0 bytes
  9627 ;; Hardware stack levels used:    1
  9628 ;; Hardware stack levels required when called:    2
  9629 ;; This function calls:
  9630 ;;		_LCD_INIT
  9631 ;; This function is called by:
  9632 ;;		_main
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           
  9637                           ;psect for function _LCD_CLR
  9638  08CA                     _LCD_CLR:	
  9639  08CA                     l3277:	
  9640                           ;incstack = 0
  9641                           ; Regs used in _LCD_CLR: [wreg+status,2+status,0+pclath+cstack]
  9642                           
  9643                           
  9644                           ;lcd.c: 23:     LCD_INIT(0);
  9645  08CA  3000               	movlw	0
  9646  08CB  160A  158A  20E7  120A  158A  	fcall	_LCD_INIT
  9647                           
  9648                           ;lcd.c: 24:     LCD_INIT(1);
  9649  08D0  3001               	movlw	1
  9650  08D1  160A  158A  20E7  120A  158A  	fcall	_LCD_INIT
  9651  08D6                     l83:	
  9652  08D6  0008               	return
  9653  08D7                     __end_of_LCD_CLR:	
  9654                           
  9655                           	psect	text30
  9656  18E7                     __ptext30:	
  9657 ;; *************** function _LCD_INIT *****************
  9658 ;; Defined at:
  9659 ;;		line 13 in file "lcd.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  a               1    wreg     unsigned char 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  a               1    8[COMMON] unsigned char 
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  1    wreg      void 
  9666 ;; Registers used:
  9667 ;;		wreg, status,2, status,0, pclath, cstack
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9673 ;;      Params:         0       0       0       0       0
  9674 ;;      Locals:         1       0       0       0       0
  9675 ;;      Temps:          2       0       0       0       0
  9676 ;;      Totals:         3       0       0       0       0
  9677 ;;Total ram usage:        3 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; Hardware stack levels required when called:    1
  9680 ;; This function calls:
  9681 ;;		_delay
  9682 ;; This function is called by:
  9683 ;;		_LCD_CLR
  9684 ;;		_LCD_CURSOR
  9685 ;;		_LCD_PROG
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           
  9690                           ;psect for function _LCD_INIT
  9691  18E7                     _LCD_INIT:	
  9692                           
  9693                           ;incstack = 0
  9694                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
  9695                           ;LCD_INIT@a stored from wreg
  9696  18E7  00F8               	movwf	LCD_INIT@a
  9697  18E8                     l2883:	
  9698                           
  9699                           ;lcd.c: 14:     VAR_LCD = a;
  9700  18E8  0878               	movf	LCD_INIT@a,w
  9701  18E9  00F6               	movwf	??_LCD_INIT
  9702  18EA  01F7               	clrf	??_LCD_INIT+1
  9703  18EB  0876               	movf	??_LCD_INIT,w
  9704  18EC  1683               	bsf	3,5	;RP0=1, select bank1
  9705  18ED  1303               	bcf	3,6	;RP1=0, select bank1
  9706  18EE  00D1               	movwf	_VAR_LCD^(0+128)
  9707  18EF  0877               	movf	??_LCD_INIT+1,w
  9708  18F0  00D2               	movwf	(_VAR_LCD+1)^(0+128)
  9709                           
  9710                           ;lcd.c: 15:     EN=1;
  9711  18F1  3001               	movlw	1
  9712  18F2  00D7               	movwf	_EN^(0+128)
  9713  18F3  3000               	movlw	0
  9714  18F4  00D8               	movwf	(_EN^(0+128)+1)
  9715  18F5                     l2885:	
  9716                           
  9717                           ;lcd.c: 16:     RS=0;
  9718  18F5  01D5               	clrf	_RS^(0+128)
  9719  18F6  01D6               	clrf	(_RS+1)^(0+128)
  9720  18F7                     l2887:	
  9721                           
  9722                           ;lcd.c: 17:     RW=0;
  9723  18F7  01D3               	clrf	_RW^(0+128)
  9724  18F8  01D4               	clrf	(_RW+1)^(0+128)
  9725  18F9                     l2889:	
  9726                           
  9727                           ;lcd.c: 18:     delay(5);
  9728  18F9  3005               	movlw	5
  9729  18FA  00F0               	movwf	?_delay
  9730  18FB  3000               	movlw	0
  9731  18FC  00F1               	movwf	?_delay+1
  9732  18FD  160A  158A  20B7  160A  158A  	fcall	_delay
  9733  1902                     l2891:	
  9734                           
  9735                           ;lcd.c: 19:     EN=0;
  9736  1902  1683               	bsf	3,5	;RP0=1, select bank1
  9737  1903  1303               	bcf	3,6	;RP1=0, select bank1
  9738  1904  01D7               	clrf	_EN^(0+128)
  9739  1905  01D8               	clrf	(_EN+1)^(0+128)
  9740  1906                     l80:	
  9741  1906  0008               	return
  9742  1907                     __end_of_LCD_INIT:	
  9743                           
  9744                           	psect	text31
  9745  18B7                     __ptext31:	
  9746 ;; *************** function _delay *****************
  9747 ;; Defined at:
  9748 ;;		line 66 in file "lcd.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;		None
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;  d               2    4[COMMON] int 
  9753 ;;  c               2    0        int 
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  2    0[COMMON] int 
  9756 ;; Registers used:
  9757 ;;		wreg
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9763 ;;      Params:         2       0       0       0       0
  9764 ;;      Locals:         4       0       0       0       0
  9765 ;;      Temps:          0       0       0       0       0
  9766 ;;      Totals:         6       0       0       0       0
  9767 ;;Total ram usage:        6 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; This function calls:
  9770 ;;		Nothing
  9771 ;; This function is called by:
  9772 ;;		_LCD_INIT
  9773 ;;		_LCD_PROG
  9774 ;;		_CHAR
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           
  9779                           ;psect for function _delay
  9780  18B7                     _delay:	
  9781  18B7                     l2407:	
  9782                           ;incstack = 0
  9783                           ; Regs used in _delay: [wreg]
  9784                           
  9785  18B7                     l2411:	
  9786                           
  9787                           ;lcd.c: 71:        for (d = 1; d <= 32767; d++)
  9788  18B7  3001               	movlw	1
  9789  18B8  00F4               	movwf	delay@d
  9790  18B9  3000               	movlw	0
  9791  18BA  00F5               	movwf	delay@d+1
  9792  18BB                     l2415:	
  9793                           
  9794                           ;lcd.c: 72:        {}
  9795  18BB  3001               	movlw	1
  9796  18BC  07F4               	addwf	delay@d,f
  9797  18BD  1803               	skipnc
  9798  18BE  0AF5               	incf	delay@d+1,f
  9799  18BF  3000               	movlw	0
  9800  18C0  07F5               	addwf	delay@d+1,f
  9801  18C1  28BB               	goto	l2415
  9802  18C2  0008               	return
  9803  18C3                     __end_of_delay:	
  9804                           
  9805                           	psect	text32
  9806  18C3                     __ptext32:	
  9807 ;; *************** function _INTERRUPCIONES *****************
  9808 ;; Defined at:
  9809 ;;		line 17 in file "ADC.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;		None
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;		None
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  1    wreg      void 
  9816 ;; Registers used:
  9817 ;;		None
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9823 ;;      Params:         0       0       0       0       0
  9824 ;;      Locals:         0       0       0       0       0
  9825 ;;      Temps:          0       0       0       0       0
  9826 ;;      Totals:         0       0       0       0       0
  9827 ;;Total ram usage:        0 bytes
  9828 ;; Hardware stack levels used:    1
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_main
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _INTERRUPCIONES
  9838  18C3                     _INTERRUPCIONES:	
  9839  18C3                     l3275:	
  9840                           ;incstack = 0
  9841                           ; Regs used in _INTERRUPCIONES: []
  9842                           
  9843                           
  9844                           ;ADC.c: 18:     INTCONbits.GIE=1;
  9845  18C3  178B               	bsf	11,7	;volatile
  9846                           
  9847                           ;ADC.c: 19:     INTCONbits.INTE=1;
  9848  18C4  160B               	bsf	11,4	;volatile
  9849                           
  9850                           ;ADC.c: 20:     INTCONbits.PEIE=1;
  9851  18C5  170B               	bsf	11,6	;volatile
  9852                           
  9853                           ;ADC.c: 21:     INTCONbits.T0IE=1;
  9854  18C6  168B               	bsf	11,5	;volatile
  9855                           
  9856                           ;ADC.c: 22:     INTCONbits.T0IF=0;
  9857  18C7  110B               	bcf	11,2	;volatile
  9858                           
  9859                           ;ADC.c: 24:     ADCON1bits.ADFM=1;
  9860  18C8  1683               	bsf	3,5	;RP0=1, select bank1
  9861  18C9  1303               	bcf	3,6	;RP1=0, select bank1
  9862  18CA  179F               	bsf	31,7	;volatile
  9863                           
  9864                           ;ADC.c: 25:     ADCON1bits.VCFG0=0;
  9865  18CB  121F               	bcf	31,4	;volatile
  9866                           
  9867                           ;ADC.c: 26:     ADCON1bits.VCFG1=0;
  9868  18CC  129F               	bcf	31,5	;volatile
  9869                           
  9870                           ;ADC.c: 28:     ADCON0bits.ADCS0=1;
  9871  18CD  1283               	bcf	3,5	;RP0=0, select bank0
  9872  18CE  1303               	bcf	3,6	;RP1=0, select bank0
  9873  18CF  171F               	bsf	31,6	;volatile
  9874                           
  9875                           ;ADC.c: 29:     ADCON0bits.ADCS1=0;
  9876  18D0  139F               	bcf	31,7	;volatile
  9877                           
  9878                           ;ADC.c: 31:     PIE1bits.ADIE=1;
  9879  18D1  1683               	bsf	3,5	;RP0=1, select bank1
  9880  18D2  1303               	bcf	3,6	;RP1=0, select bank1
  9881  18D3  170C               	bsf	12,6	;volatile
  9882  18D4                     l124:	
  9883  18D4  0008               	return
  9884  18D5                     __end_of_INTERRUPCIONES:	
  9885                           
  9886                           	psect	text33
  9887  18A0                     __ptext33:	
  9888 ;; *************** function _ADC1 *****************
  9889 ;; Defined at:
  9890 ;;		line 11 in file "ADC.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		None
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9904 ;;      Params:         0       0       0       0       0
  9905 ;;      Locals:         0       0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0
  9907 ;;      Totals:         0       0       0       0       0
  9908 ;;Total ram usage:        0 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; This function calls:
  9911 ;;		Nothing
  9912 ;; This function is called by:
  9913 ;;		_main
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           
  9918                           ;psect for function _ADC1
  9919  18A0                     _ADC1:	
  9920  18A0                     l3301:	
  9921                           ;incstack = 0
  9922                           ; Regs used in _ADC1: []
  9923                           
  9924                           
  9925                           ;ADC.c: 12:     ADCON0bits.CHS0=0;
  9926  18A0  1283               	bcf	3,5	;RP0=0, select bank0
  9927  18A1  1303               	bcf	3,6	;RP1=0, select bank0
  9928  18A2  111F               	bcf	31,2	;volatile
  9929                           
  9930                           ;ADC.c: 13:     ADCON0bits.CHS1=1;
  9931  18A3  159F               	bsf	31,3	;volatile
  9932                           
  9933                           ;ADC.c: 14:     ADCON0bits.CHS2=0;
  9934  18A4  121F               	bcf	31,4	;volatile
  9935                           
  9936                           ;ADC.c: 15:     ADCON0bits.CHS3=1;
  9937  18A5  169F               	bsf	31,5	;volatile
  9938  18A6                     l121:	
  9939  18A6  0008               	return
  9940  18A7                     __end_of_ADC1:	
  9941                           
  9942                           	psect	text34
  9943  18A7                     __ptext34:	
  9944 ;; *************** function _ADC *****************
  9945 ;; Defined at:
  9946 ;;		line 3 in file "ADC.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;		None
  9949 ;; Auto vars:     Size  Location     Type
  9950 ;;		None
  9951 ;; Return value:  Size  Location     Type
  9952 ;;                  1    wreg      void 
  9953 ;; Registers used:
  9954 ;;		None
  9955 ;; Tracked objects:
  9956 ;;		On entry : 0/0
  9957 ;;		On exit  : 0/0
  9958 ;;		Unchanged: 0/0
  9959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9960 ;;      Params:         0       0       0       0       0
  9961 ;;      Locals:         0       0       0       0       0
  9962 ;;      Temps:          0       0       0       0       0
  9963 ;;      Totals:         0       0       0       0       0
  9964 ;;Total ram usage:        0 bytes
  9965 ;; Hardware stack levels used:    1
  9966 ;; This function calls:
  9967 ;;		Nothing
  9968 ;; This function is called by:
  9969 ;;		_main
  9970 ;; This function uses a non-reentrant model
  9971 ;;
  9972                           
  9973                           
  9974                           ;psect for function _ADC
  9975  18A7                     _ADC:	
  9976  18A7                     l3299:	
  9977                           ;incstack = 0
  9978                           ; Regs used in _ADC: []
  9979                           
  9980                           
  9981                           ;ADC.c: 4:     ADCON0bits.CHS0=0;
  9982  18A7  1283               	bcf	3,5	;RP0=0, select bank0
  9983  18A8  1303               	bcf	3,6	;RP1=0, select bank0
  9984  18A9  111F               	bcf	31,2	;volatile
  9985                           
  9986                           ;ADC.c: 5:     ADCON0bits.CHS1=0;
  9987  18AA  119F               	bcf	31,3	;volatile
  9988                           
  9989                           ;ADC.c: 6:     ADCON0bits.CHS2=1;
  9990  18AB  161F               	bsf	31,4	;volatile
  9991                           
  9992                           ;ADC.c: 7:     ADCON0bits.CHS3=1;
  9993  18AC  169F               	bsf	31,5	;volatile
  9994                           
  9995                           ;ADC.c: 8:     ADCON0bits.ADON=1;
  9996  18AD  141F               	bsf	31,0	;volatile
  9997  18AE                     l118:	
  9998                           ;ADC.c: 9:     return;
  9999                           
 10000  18AE  0008               	return
 10001  18AF                     __end_of_ADC:	
 10002  007E                     btemp	set	126	;btemp
 10003  007E                     wtemp0	set	126
 10004                           
 10005                           	psect	text1_split_1
 10006  02A9                     u5540:	
 10007  02A9                     l3405:	
 10008  02A9  1683               	bsf	3,5	;RP0=1, select bank1
 10009  02AA  1303               	bcf	3,6	;RP1=0, select bank1
 10010  02AB  0844               	movf	(sprintf@fval+3)^(0+128),w
 10011  02AC  00F3               	movwf	___fleq@ff1+3
 10012  02AD  0843               	movf	(sprintf@fval+2)^(0+128),w
 10013  02AE  00F2               	movwf	___fleq@ff1+2
 10014  02AF  0842               	movf	(sprintf@fval+1)^(0+128),w
 10015  02B0  00F1               	movwf	___fleq@ff1+1
 10016  02B1  0841               	movf	sprintf@fval^(0+128),w
 10017  02B2  00F0               	movwf	___fleq@ff1
 10018  02B3  3000               	movlw	0
 10019  02B4  00F7               	movwf	___fleq@ff2+3
 10020  02B5  3000               	movlw	0
 10021  02B6  00F6               	movwf	___fleq@ff2+2
 10022  02B7  3000               	movlw	0
 10023  02B8  00F5               	movwf	___fleq@ff2+1
 10024  02B9  3000               	movlw	0
 10025  02BA  00F4               	movwf	___fleq@ff2
 10026  02BB  160A  158A  22D0  120A  118A  	fcall	___fleq
 10027  02C0  1803               	btfsc	3,0
 10028  02C1  2AC3               	goto	u5551
 10029  02C2  2AC4               	goto	u5550
 10030  02C3                     u5551:	
 10031  02C3  2B6C               	goto	l3425
 10032  02C4                     u5550:	
 10033  02C4                     l3407:	
 10034  02C4  1683               	bsf	3,5	;RP0=1, select bank1
 10035  02C5  1303               	bcf	3,6	;RP1=0, select bank1
 10036  02C6  0844               	movf	(sprintf@fval+3)^(0+128),w
 10037  02C7  1283               	bcf	3,5	;RP0=0, select bank0
 10038  02C8  1303               	bcf	3,6	;RP1=0, select bank0
 10039  02C9  00D4               	movwf	___fltol@f1+3
 10040  02CA  1683               	bsf	3,5	;RP0=1, select bank1
 10041  02CB  1303               	bcf	3,6	;RP1=0, select bank1
 10042  02CC  0843               	movf	(sprintf@fval+2)^(0+128),w
 10043  02CD  1283               	bcf	3,5	;RP0=0, select bank0
 10044  02CE  1303               	bcf	3,6	;RP1=0, select bank0
 10045  02CF  00D3               	movwf	___fltol@f1+2
 10046  02D0  1683               	bsf	3,5	;RP0=1, select bank1
 10047  02D1  1303               	bcf	3,6	;RP1=0, select bank1
 10048  02D2  0842               	movf	(sprintf@fval+1)^(0+128),w
 10049  02D3  1283               	bcf	3,5	;RP0=0, select bank0
 10050  02D4  1303               	bcf	3,6	;RP1=0, select bank0
 10051  02D5  00D2               	movwf	___fltol@f1+1
 10052  02D6  1683               	bsf	3,5	;RP0=1, select bank1
 10053  02D7  1303               	bcf	3,6	;RP1=0, select bank1
 10054  02D8  0841               	movf	sprintf@fval^(0+128),w
 10055  02D9  1283               	bcf	3,5	;RP0=0, select bank0
 10056  02DA  1303               	bcf	3,6	;RP1=0, select bank0
 10057  02DB  00D1               	movwf	___fltol@f1
 10058  02DC  160A  118A  2003  120A  118A  	fcall	___fltol
 10059  02E1  1283               	bcf	3,5	;RP0=0, select bank0
 10060  02E2  1303               	bcf	3,6	;RP1=0, select bank0
 10061  02E3  0854               	movf	?___fltol+3,w
 10062  02E4  0453               	iorwf	?___fltol+2,w
 10063  02E5  0452               	iorwf	?___fltol+1,w
 10064  02E6  0451               	iorwf	?___fltol,w
 10065  02E7  1D03               	skipz
 10066  02E8  2AEA               	goto	u5561
 10067  02E9  2AEB               	goto	u5560
 10068  02EA                     u5561:	
 10069  02EA  2B6C               	goto	l3425
 10070  02EB                     u5560:	
 10071  02EB                     l3409:	
 10072  02EB  1683               	bsf	3,5	;RP0=1, select bank1
 10073  02EC  1303               	bcf	3,6	;RP1=0, select bank1
 10074  02ED  083C               	movf	(sprintf@eexp+1)^(0+128),w
 10075  02EE  3A80               	xorlw	128
 10076  02EF  00FF               	movwf	btemp+1
 10077  02F0  3080               	movlw	128
 10078  02F1  027F               	subwf	btemp+1,w
 10079  02F2  1D03               	skipz
 10080  02F3  2AF6               	goto	u5575
 10081  02F4  3002               	movlw	2
 10082  02F5  023B               	subwf	sprintf@eexp^(0+128),w
 10083  02F6                     u5575:	
 10084  02F6  1C03               	skipc
 10085  02F7  2AF9               	goto	u5571
 10086  02F8  2AFA               	goto	u5570
 10087  02F9                     u5571:	
 10088  02F9  2B6C               	goto	l3425
 10089  02FA                     u5570:	
 10090  02FA                     l3411:	
 10091                           
 10092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
 10093  02FA  1683               	bsf	3,5	;RP0=1, select bank1
 10094  02FB  1303               	bcf	3,6	;RP1=0, select bank1
 10095  02FC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 10096  02FD  00F3               	movwf	___flge@ff1+3
 10097  02FE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 10098  02FF  00F2               	movwf	___flge@ff1+2
 10099  0300  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 10100  0301  00F1               	movwf	___flge@ff1+1
 10101  0302  0837               	movf	sprintf@tmpval^(0+128),w
 10102  0303  00F0               	movwf	___flge@ff1
 10103  0304  3040               	movlw	64
 10104  0305  00F7               	movwf	___flge@ff2+3
 10105  0306  3089               	movlw	137
 10106  0307  00F6               	movwf	___flge@ff2+2
 10107  0308  3070               	movlw	112
 10108  0309  00F5               	movwf	___flge@ff2+1
 10109  030A  305F               	movlw	95
 10110  030B  00F4               	movwf	___flge@ff2
 10111  030C  160A  158A  2431  120A  118A  	fcall	___flge
 10112  0311  1803               	btfsc	3,0
 10113  0312  2B14               	goto	u5581
 10114  0313  2B15               	goto	u5580
 10115  0314                     u5581:	
 10116  0314  2B1E               	goto	l3415
 10117  0315                     u5580:	
 10118  0315                     l3413:	
 10119                           
 10120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10121  0315  30F7               	movlw	247
 10122  0316  1683               	bsf	3,5	;RP0=1, select bank1
 10123  0317  1303               	bcf	3,6	;RP1=0, select bank1
 10124  0318  07BB               	addwf	sprintf@eexp^(0+128),f
 10125  0319  1803               	skipnc
 10126  031A  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
 10127  031B  30FF               	movlw	255
 10128  031C  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
 10129                           
 10130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
 10131  031D  2B26               	goto	l3417
 10132  031E                     l3415:	
 10133                           
 10134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10135  031E  30F8               	movlw	248
 10136  031F  1683               	bsf	3,5	;RP0=1, select bank1
 10137  0320  1303               	bcf	3,6	;RP1=0, select bank1
 10138  0321  07BB               	addwf	sprintf@eexp^(0+128),f
 10139  0322  1803               	skipnc
 10140  0323  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
 10141  0324  30FF               	movlw	255
 10142  0325  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
 10143  0326                     l3417:	
 10144                           
 10145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
 10146  0326  083B               	movf	sprintf@eexp^(0+128),w
 10147  0327  120A  158A  2140  120A  118A  	fcall	_scale
 10148  032C  1283               	bcf	3,5	;RP0=0, select bank0
 10149  032D  1303               	bcf	3,6	;RP1=0, select bank0
 10150  032E  0841               	movf	?_scale+3,w
 10151  032F  1683               	bsf	3,5	;RP0=1, select bank1
 10152  0330  1303               	bcf	3,6	;RP1=0, select bank1
 10153  0331  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10154  0332  1283               	bcf	3,5	;RP0=0, select bank0
 10155  0333  1303               	bcf	3,6	;RP1=0, select bank0
 10156  0334  0840               	movf	?_scale+2,w
 10157  0335  1683               	bsf	3,5	;RP0=1, select bank1
 10158  0336  1303               	bcf	3,6	;RP1=0, select bank1
 10159  0337  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10160  0338  1283               	bcf	3,5	;RP0=0, select bank0
 10161  0339  1303               	bcf	3,6	;RP1=0, select bank0
 10162  033A  083F               	movf	?_scale+1,w
 10163  033B  1683               	bsf	3,5	;RP0=1, select bank1
 10164  033C  1303               	bcf	3,6	;RP1=0, select bank1
 10165  033D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10166  033E  1283               	bcf	3,5	;RP0=0, select bank0
 10167  033F  1303               	bcf	3,6	;RP1=0, select bank0
 10168  0340  083E               	movf	?_scale,w
 10169  0341  1683               	bsf	3,5	;RP0=1, select bank1
 10170  0342  1303               	bcf	3,6	;RP1=0, select bank1
 10171  0343  00B7               	movwf	sprintf@tmpval^(0+128)
 10172  0344                     l3419:	
 10173  0344  0844               	movf	(sprintf@fval+3)^(0+128),w
 10174  0345  00F3               	movwf	__div_to_l_@f1+3
 10175  0346  0843               	movf	(sprintf@fval+2)^(0+128),w
 10176  0347  00F2               	movwf	__div_to_l_@f1+2
 10177  0348  0842               	movf	(sprintf@fval+1)^(0+128),w
 10178  0349  00F1               	movwf	__div_to_l_@f1+1
 10179  034A  0841               	movf	sprintf@fval^(0+128),w
 10180  034B  00F0               	movwf	__div_to_l_@f1
 10181  034C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 10182  034D  00F7               	movwf	__div_to_l_@f2+3
 10183  034E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 10184  034F  00F6               	movwf	__div_to_l_@f2+2
 10185  0350  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 10186  0351  00F5               	movwf	__div_to_l_@f2+1
 10187  0352  0837               	movf	sprintf@tmpval^(0+128),w
 10188  0353  00F4               	movwf	__div_to_l_@f2
 10189  0354  160A  118A  207F  120A  118A  	fcall	__div_to_l_
 10190  0359  0873               	movf	?__div_to_l_+3,w
 10191  035A  1683               	bsf	3,5	;RP0=1, select bank1
 10192  035B  1303               	bcf	3,6	;RP1=0, select bank1
 10193  035C  00B6               	movwf	(sprintf@val+3)^(0+128)
 10194  035D  0872               	movf	?__div_to_l_+2,w
 10195  035E  00B5               	movwf	(sprintf@val+2)^(0+128)
 10196  035F  0871               	movf	?__div_to_l_+1,w
 10197  0360  00B4               	movwf	(sprintf@val+1)^(0+128)
 10198  0361  0870               	movf	?__div_to_l_,w
 10199  0362  00B3               	movwf	sprintf@val^(0+128)
 10200  0363                     l3423:	
 10201                           
 10202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
 10203  0363  3000               	movlw	0
 10204  0364  00C4               	movwf	(sprintf@fval+3)^(0+128)
 10205  0365  3000               	movlw	0
 10206  0366  00C3               	movwf	(sprintf@fval+2)^(0+128)
 10207  0367  3000               	movlw	0
 10208  0368  00C2               	movwf	(sprintf@fval+1)^(0+128)
 10209  0369  3000               	movlw	0
 10210  036A  00C1               	movwf	sprintf@fval^(0+128)
 10211                           
 10212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
 10213  036B  2BF0               	goto	l3431
 10214  036C                     l3425:	
 10215                           
 10216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
 10217  036C  1683               	bsf	3,5	;RP0=1, select bank1
 10218  036D  1303               	bcf	3,6	;RP1=0, select bank1
 10219  036E  0844               	movf	(sprintf@fval+3)^(0+128),w
 10220  036F  1283               	bcf	3,5	;RP0=0, select bank0
 10221  0370  1303               	bcf	3,6	;RP1=0, select bank0
 10222  0371  00D4               	movwf	___fltol@f1+3
 10223  0372  1683               	bsf	3,5	;RP0=1, select bank1
 10224  0373  1303               	bcf	3,6	;RP1=0, select bank1
 10225  0374  0843               	movf	(sprintf@fval+2)^(0+128),w
 10226  0375  1283               	bcf	3,5	;RP0=0, select bank0
 10227  0376  1303               	bcf	3,6	;RP1=0, select bank0
 10228  0377  00D3               	movwf	___fltol@f1+2
 10229  0378  1683               	bsf	3,5	;RP0=1, select bank1
 10230  0379  1303               	bcf	3,6	;RP1=0, select bank1
 10231  037A  0842               	movf	(sprintf@fval+1)^(0+128),w
 10232  037B  1283               	bcf	3,5	;RP0=0, select bank0
 10233  037C  1303               	bcf	3,6	;RP1=0, select bank0
 10234  037D  00D2               	movwf	___fltol@f1+1
 10235  037E  1683               	bsf	3,5	;RP0=1, select bank1
 10236  037F  1303               	bcf	3,6	;RP1=0, select bank1
 10237  0380  0841               	movf	sprintf@fval^(0+128),w
 10238  0381  1283               	bcf	3,5	;RP0=0, select bank0
 10239  0382  1303               	bcf	3,6	;RP1=0, select bank0
 10240  0383  00D1               	movwf	___fltol@f1
 10241  0384  160A  118A  2003  120A  118A  	fcall	___fltol
 10242  0389  1283               	bcf	3,5	;RP0=0, select bank0
 10243  038A  1303               	bcf	3,6	;RP1=0, select bank0
 10244  038B  0854               	movf	?___fltol+3,w
 10245  038C  1683               	bsf	3,5	;RP0=1, select bank1
 10246  038D  1303               	bcf	3,6	;RP1=0, select bank1
 10247  038E  00B6               	movwf	(sprintf@val+3)^(0+128)
 10248  038F  1283               	bcf	3,5	;RP0=0, select bank0
 10249  0390  1303               	bcf	3,6	;RP1=0, select bank0
 10250  0391  0853               	movf	?___fltol+2,w
 10251  0392  1683               	bsf	3,5	;RP0=1, select bank1
 10252  0393  1303               	bcf	3,6	;RP1=0, select bank1
 10253  0394  00B5               	movwf	(sprintf@val+2)^(0+128)
 10254  0395  1283               	bcf	3,5	;RP0=0, select bank0
 10255  0396  1303               	bcf	3,6	;RP1=0, select bank0
 10256  0397  0852               	movf	?___fltol+1,w
 10257  0398  1683               	bsf	3,5	;RP0=1, select bank1
 10258  0399  1303               	bcf	3,6	;RP1=0, select bank1
 10259  039A  00B4               	movwf	(sprintf@val+1)^(0+128)
 10260  039B  1283               	bcf	3,5	;RP0=0, select bank0
 10261  039C  1303               	bcf	3,6	;RP1=0, select bank0
 10262  039D  0851               	movf	?___fltol,w
 10263  039E  1683               	bsf	3,5	;RP0=1, select bank1
 10264  039F  1303               	bcf	3,6	;RP1=0, select bank1
 10265  03A0  00B3               	movwf	sprintf@val^(0+128)
 10266  03A1                     l3427:	
 10267                           
 10268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
 10269  03A1  0836               	movf	(sprintf@val+3)^(0+128),w
 10270  03A2  00F3               	movwf	___xxtofl@val+3
 10271  03A3  0835               	movf	(sprintf@val+2)^(0+128),w
 10272  03A4  00F2               	movwf	___xxtofl@val+2
 10273  03A5  0834               	movf	(sprintf@val+1)^(0+128),w
 10274  03A6  00F1               	movwf	___xxtofl@val+1
 10275  03A7  0833               	movf	sprintf@val^(0+128),w
 10276  03A8  00F0               	movwf	___xxtofl@val
 10277  03A9  3000               	movlw	0
 10278  03AA  160A  158A  24D3  120A  118A  	fcall	___xxtofl
 10279  03AF  0873               	movf	?___xxtofl+3,w
 10280  03B0  1283               	bcf	3,5	;RP0=0, select bank0
 10281  03B1  1303               	bcf	3,6	;RP1=0, select bank0
 10282  03B2  00E9               	movwf	___flsub@a+3
 10283  03B3  0872               	movf	?___xxtofl+2,w
 10284  03B4  00E8               	movwf	___flsub@a+2
 10285  03B5  0871               	movf	?___xxtofl+1,w
 10286  03B6  00E7               	movwf	___flsub@a+1
 10287  03B7  0870               	movf	?___xxtofl,w
 10288  03B8  00E6               	movwf	___flsub@a
 10289  03B9  1683               	bsf	3,5	;RP0=1, select bank1
 10290  03BA  1303               	bcf	3,6	;RP1=0, select bank1
 10291  03BB  0844               	movf	(sprintf@fval+3)^(0+128),w
 10292  03BC  1283               	bcf	3,5	;RP0=0, select bank0
 10293  03BD  1303               	bcf	3,6	;RP1=0, select bank0
 10294  03BE  00ED               	movwf	___flsub@b+3
 10295  03BF  1683               	bsf	3,5	;RP0=1, select bank1
 10296  03C0  1303               	bcf	3,6	;RP1=0, select bank1
 10297  03C1  0843               	movf	(sprintf@fval+2)^(0+128),w
 10298  03C2  1283               	bcf	3,5	;RP0=0, select bank0
 10299  03C3  1303               	bcf	3,6	;RP1=0, select bank0
 10300  03C4  00EC               	movwf	___flsub@b+2
 10301  03C5  1683               	bsf	3,5	;RP0=1, select bank1
 10302  03C6  1303               	bcf	3,6	;RP1=0, select bank1
 10303  03C7  0842               	movf	(sprintf@fval+1)^(0+128),w
 10304  03C8  1283               	bcf	3,5	;RP0=0, select bank0
 10305  03C9  1303               	bcf	3,6	;RP1=0, select bank0
 10306  03CA  00EB               	movwf	___flsub@b+1
 10307  03CB  1683               	bsf	3,5	;RP0=1, select bank1
 10308  03CC  1303               	bcf	3,6	;RP1=0, select bank1
 10309  03CD  0841               	movf	sprintf@fval^(0+128),w
 10310  03CE  1283               	bcf	3,5	;RP0=0, select bank0
 10311  03CF  1303               	bcf	3,6	;RP1=0, select bank0
 10312  03D0  00EA               	movwf	___flsub@b
 10313  03D1  160A  158A  2129  120A  118A  	fcall	___flsub
 10314  03D6  1283               	bcf	3,5	;RP0=0, select bank0
 10315  03D7  1303               	bcf	3,6	;RP1=0, select bank0
 10316  03D8  0869               	movf	?___flsub+3,w
 10317  03D9  1683               	bsf	3,5	;RP0=1, select bank1
 10318  03DA  1303               	bcf	3,6	;RP1=0, select bank1
 10319  03DB  00C4               	movwf	(sprintf@fval+3)^(0+128)
 10320  03DC  1283               	bcf	3,5	;RP0=0, select bank0
 10321  03DD  1303               	bcf	3,6	;RP1=0, select bank0
 10322  03DE  0868               	movf	?___flsub+2,w
 10323  03DF  1683               	bsf	3,5	;RP0=1, select bank1
 10324  03E0  1303               	bcf	3,6	;RP1=0, select bank1
 10325  03E1  00C3               	movwf	(sprintf@fval+2)^(0+128)
 10326  03E2  1283               	bcf	3,5	;RP0=0, select bank0
 10327  03E3  1303               	bcf	3,6	;RP1=0, select bank0
 10328  03E4  0867               	movf	?___flsub+1,w
 10329  03E5  1683               	bsf	3,5	;RP0=1, select bank1
 10330  03E6  1303               	bcf	3,6	;RP1=0, select bank1
 10331  03E7  00C2               	movwf	(sprintf@fval+1)^(0+128)
 10332  03E8  1283               	bcf	3,5	;RP0=0, select bank0
 10333  03E9  1303               	bcf	3,6	;RP1=0, select bank0
 10334  03EA  0866               	movf	?___flsub,w
 10335  03EB  1683               	bsf	3,5	;RP0=1, select bank1
 10336  03EC  1303               	bcf	3,6	;RP1=0, select bank1
 10337  03ED  00C1               	movwf	sprintf@fval^(0+128)
 10338  03EE                     l3429:	
 10339                           
 10340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
 10341  03EE  01BB               	clrf	sprintf@eexp^(0+128)
 10342  03EF  01BC               	clrf	(sprintf@eexp+1)^(0+128)
 10343  03F0                     l3431:	
 10344                           
 10345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10346  03F0  01C8               	clrf	sprintf@c^(0+128)
 10347  03F1  0AC8               	incf	sprintf@c^(0+128),f
 10348  03F2                     l3437:	
 10349                           
 10350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
 10351  03F2  0848               	movf	sprintf@c^(0+128),w
 10352  03F3  00A9               	movwf	??_sprintf^(0+128)
 10353  03F4  3001               	movlw	1
 10354  03F5                     u5595:	
 10355  03F5  1003               	clrc
 10356  03F6  0DA9               	rlf	??_sprintf^(0+128),f
 10357  03F7  3EFF               	addlw	-1
 10358  03F8  1D03               	skipz
 10359  03F9  2BF5               	goto	u5595
 10360  03FA  1003               	clrc
 10361  03FB  0D29               	rlf	??_sprintf^(0+128),w
 10362  03FC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10363  03FD  0084               	movwf	4
 10364  03FE  120A  158A  200A  120A  118A  	fcall	stringdir
 10365  0403  00AA               	movwf	(??_sprintf+1)^(0+128)
 10366  0404  120A  158A  200A  120A  118A  	fcall	stringdir
 10367  0409  00AB               	movwf	((??_sprintf+1)^(0+128)+1)
 10368  040A  120A  158A  200A  120A  118A  	fcall	stringdir
 10369  040F  00AC               	movwf	((??_sprintf+1)^(0+128)+2)
 10370  0410  120A  158A  200A  120A  118A  	fcall	stringdir
 10371  0415  00AD               	movwf	((??_sprintf+1)^(0+128)+3)
 10372  0416  082D               	movf	(??_sprintf+4)^(0+128),w
 10373  0417  0236               	subwf	(sprintf@val+3)^(0+128),w
 10374  0418  1D03               	skipz
 10375  0419  2C24               	goto	u5605
 10376  041A  082C               	movf	(??_sprintf+3)^(0+128),w
 10377  041B  0235               	subwf	(sprintf@val+2)^(0+128),w
 10378  041C  1D03               	skipz
 10379  041D  2C24               	goto	u5605
 10380  041E  082B               	movf	(??_sprintf+2)^(0+128),w
 10381  041F  0234               	subwf	(sprintf@val+1)^(0+128),w
 10382  0420  1D03               	skipz
 10383  0421  2C24               	goto	u5605
 10384  0422  082A               	movf	(??_sprintf+1)^(0+128),w
 10385  0423  0233               	subwf	sprintf@val^(0+128),w
 10386  0424                     u5605:	
 10387  0424  1803               	skipnc
 10388  0425  2C27               	goto	u5601
 10389  0426  2C28               	goto	u5600
 10390  0427                     u5601:	
 10391  0427  2C29               	goto	l3441
 10392  0428                     u5600:	
 10393  0428  2C33               	goto	l3443
 10394  0429                     l3441:	
 10395  0429  3001               	movlw	1
 10396  042A  00A9               	movwf	??_sprintf^(0+128)
 10397  042B  0829               	movf	??_sprintf^(0+128),w
 10398  042C  07C8               	addwf	sprintf@c^(0+128),f
 10399  042D  300A               	movlw	10
 10400  042E  0648               	xorwf	sprintf@c^(0+128),w
 10401  042F  1D03               	btfss	3,2
 10402  0430  2C32               	goto	u5611
 10403  0431  2C33               	goto	u5610
 10404  0432                     u5611:	
 10405  0432  2BF2               	goto	l3437
 10406  0433                     u5610:	
 10407  0433                     l3443:	
 10408                           
 10409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1168:     w
      +                          idth -= prec + c + eexp;
 10410  0433  0848               	movf	sprintf@c^(0+128),w
 10411  0434  0745               	addwf	sprintf@prec^(0+128),w
 10412  0435  00A9               	movwf	??_sprintf^(0+128)
 10413  0436  0846               	movf	(sprintf@prec+1)^(0+128),w
 10414  0437  1803               	skipnc
 10415  0438  0A46               	incf	(sprintf@prec+1)^(0+128),w
 10416  0439  00AA               	movwf	(??_sprintf^(0+128)+1)
 10417  043A  083B               	movf	sprintf@eexp^(0+128),w
 10418  043B  0729               	addwf	??_sprintf^(0+128),w
 10419  043C  00AB               	movwf	(??_sprintf+2)^(0+128)
 10420  043D  083C               	movf	(sprintf@eexp+1)^(0+128),w
 10421  043E  1803               	skipnc
 10422  043F  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
 10423  0440  072A               	addwf	(??_sprintf+1)^(0+128),w
 10424  0441  00AC               	movwf	(??_sprintf+3)^(0+128)
 10425  0442  082B               	movf	(??_sprintf+2)^(0+128),w
 10426  0443  02BF               	subwf	sprintf@width^(0+128),f
 10427  0444  082C               	movf	(??_sprintf+3)^(0+128),w
 10428  0445  1C03               	skipc
 10429  0446  03C0               	decf	(sprintf@width+1)^(0+128),f
 10430  0447  02C0               	subwf	(sprintf@width+1)^(0+128),f
 10431                           
 10432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1169:     i
      +                          f(
 10433  0448  0845               	movf	sprintf@prec^(0+128),w
 10434  0449  0446               	iorwf	(sprintf@prec+1)^(0+128),w
 10435  044A  1903               	btfsc	3,2
 10436  044B  2C4D               	goto	u5621
 10437  044C  2C4E               	goto	u5620
 10438  044D                     u5621:	
 10439  044D  2C54               	goto	l3447
 10440  044E                     u5620:	
 10441  044E                     l3445:	
 10442                           
 10443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1174:      
      +                          width--;
 10444  044E  30FF               	movlw	255
 10445  044F  07BF               	addwf	sprintf@width^(0+128),f
 10446  0450  1803               	skipnc
 10447  0451  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10448  0452  30FF               	movlw	255
 10449  0453  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10450  0454                     l3447:	
 10451                           
 10452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1175:     i
      +                          f(flag & 0x03)
 10453  0454  3003               	movlw	3
 10454  0455  053D               	andwf	sprintf@flag^(0+128),w
 10455  0456  00A9               	movwf	??_sprintf^(0+128)
 10456  0457  3000               	movlw	0
 10457  0458  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10458  0459  00AA               	movwf	(??_sprintf+1)^(0+128)
 10459  045A  0829               	movf	??_sprintf^(0+128),w
 10460  045B  042A               	iorwf	(??_sprintf^(0+128)+1),w
 10461  045C  1903               	btfsc	3,2
 10462  045D  2C5F               	goto	u5631
 10463  045E  2C60               	goto	u5630
 10464  045F                     u5631:	
 10465  045F  2C66               	goto	l3451
 10466  0460                     u5630:	
 10467  0460                     l3449:	
 10468                           
 10469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1176:      
      +                          width--;
 10470  0460  30FF               	movlw	255
 10471  0461  07BF               	addwf	sprintf@width^(0+128),f
 10472  0462  1803               	skipnc
 10473  0463  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10474  0464  30FF               	movlw	255
 10475  0465  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10476  0466                     l3451:	
 10477                           
 10478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1179:     i
      +                          f(flag & 0x04) {
 10479  0466  1D3D               	btfss	sprintf@flag^(0+128),2
 10480  0467  2C69               	goto	u5641
 10481  0468  2C6A               	goto	u5640
 10482  0469                     u5641:	
 10483  0469  2CB6               	goto	l3473
 10484  046A                     u5640:	
 10485  046A                     l3453:	
 10486                           
 10487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1183:      
      +                          if(flag & 0x03)
 10488  046A  3003               	movlw	3
 10489  046B  053D               	andwf	sprintf@flag^(0+128),w
 10490  046C  00A9               	movwf	??_sprintf^(0+128)
 10491  046D  3000               	movlw	0
 10492  046E  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10493  046F  00AA               	movwf	(??_sprintf+1)^(0+128)
 10494  0470  0829               	movf	??_sprintf^(0+128),w
 10495  0471  042A               	iorwf	(??_sprintf^(0+128)+1),w
 10496  0472  1903               	btfsc	3,2
 10497  0473  2C75               	goto	u5651
 10498  0474  2C76               	goto	u5650
 10499  0475                     u5651:	
 10500  0475  2C95               	goto	l3465
 10501  0476                     u5650:	
 10502  0476                     l3455:	
 10503                           
 10504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1185:      
      +                           ((*sp++ = ('-')));
 10505  0476  302D               	movlw	45
 10506  0477  00A9               	movwf	??_sprintf^(0+128)
 10507  0478  0847               	movf	sprintf@sp^(0+128),w
 10508  0479  0084               	movwf	4
 10509  047A  0829               	movf	??_sprintf^(0+128),w
 10510  047B  1383               	bcf	3,7	;select IRP bank0
 10511  047C  0080               	movwf	0
 10512  047D                     l3457:	
 10513  047D  3001               	movlw	1
 10514  047E  00A9               	movwf	??_sprintf^(0+128)
 10515  047F  0829               	movf	??_sprintf^(0+128),w
 10516  0480  07C7               	addwf	sprintf@sp^(0+128),f
 10517  0481  2C95               	goto	l3465
 10518  0482                     l3459:	
 10519                           
 10520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1195:      
      +                           ((*sp++ = ('0')));
 10521  0482  3030               	movlw	48
 10522  0483  1683               	bsf	3,5	;RP0=1, select bank1
 10523  0484  1303               	bcf	3,6	;RP1=0, select bank1
 10524  0485  00A9               	movwf	??_sprintf^(0+128)
 10525  0486  0847               	movf	sprintf@sp^(0+128),w
 10526  0487  0084               	movwf	4
 10527  0488  0829               	movf	??_sprintf^(0+128),w
 10528  0489  1383               	bcf	3,7	;select IRP bank0
 10529  048A  0080               	movwf	0
 10530  048B                     l3461:	
 10531  048B  3001               	movlw	1
 10532  048C  00A9               	movwf	??_sprintf^(0+128)
 10533  048D  0829               	movf	??_sprintf^(0+128),w
 10534  048E  07C7               	addwf	sprintf@sp^(0+128),f
 10535  048F                     l3463:	
 10536                           
 10537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1196:      
      +                           width--;
 10538  048F  30FF               	movlw	255
 10539  0490  07BF               	addwf	sprintf@width^(0+128),f
 10540  0491  1803               	skipnc
 10541  0492  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10542  0493  30FF               	movlw	255
 10543  0494  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10544  0495                     l3465:	
 10545                           
 10546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1194:      
      +                          while(width > 0) {
 10547  0495  0840               	movf	(sprintf@width+1)^(0+128),w
 10548  0496  3A80               	xorlw	128
 10549  0497  00FF               	movwf	btemp+1
 10550  0498  3080               	movlw	128
 10551  0499  027F               	subwf	btemp+1,w
 10552  049A  1D03               	skipz
 10553  049B  2C9E               	goto	u5665
 10554  049C  3001               	movlw	1
 10555  049D  023F               	subwf	sprintf@width^(0+128),w
 10556  049E                     u5665:	
 10557  049E  1803               	skipnc
 10558  049F  2CA1               	goto	u5661
 10559  04A0  2CA2               	goto	u5660
 10560  04A1                     u5661:	
 10561  04A1  2C82               	goto	l3459
 10562  04A2                     u5660:	
 10563  04A2  2D43               	goto	l298
 10564  04A3                     l3467:	
 10565                           
 10566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1207:      
      +                           ((*sp++ = (' ')));
 10567  04A3  3020               	movlw	32
 10568  04A4  1683               	bsf	3,5	;RP0=1, select bank1
 10569  04A5  1303               	bcf	3,6	;RP1=0, select bank1
 10570  04A6  00A9               	movwf	??_sprintf^(0+128)
 10571  04A7  0847               	movf	sprintf@sp^(0+128),w
 10572  04A8  0084               	movwf	4
 10573  04A9  0829               	movf	??_sprintf^(0+128),w
 10574  04AA  1383               	bcf	3,7	;select IRP bank0
 10575  04AB  0080               	movwf	0
 10576  04AC                     l3469:	
 10577  04AC  3001               	movlw	1
 10578  04AD  00A9               	movwf	??_sprintf^(0+128)
 10579  04AE  0829               	movf	??_sprintf^(0+128),w
 10580  04AF  07C7               	addwf	sprintf@sp^(0+128),f
 10581  04B0                     l3471:	
 10582                           
 10583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1208:      
      +                           width--;
 10584  04B0  30FF               	movlw	255
 10585  04B1  07BF               	addwf	sprintf@width^(0+128),f
 10586  04B2  1803               	skipnc
 10587  04B3  0AC0               	incf	(sprintf@width+1)^(0+128),f
 10588  04B4  30FF               	movlw	255
 10589  04B5  07C0               	addwf	(sprintf@width+1)^(0+128),f
 10590  04B6                     l3473:	
 10591                           
 10592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1206:      
      +                          while(width > 0) {
 10593  04B6  0840               	movf	(sprintf@width+1)^(0+128),w
 10594  04B7  3A80               	xorlw	128
 10595  04B8  00FF               	movwf	btemp+1
 10596  04B9  3080               	movlw	128
 10597  04BA  027F               	subwf	btemp+1,w
 10598  04BB  1D03               	skipz
 10599  04BC  2CBF               	goto	u5675
 10600  04BD  3001               	movlw	1
 10601  04BE  023F               	subwf	sprintf@width^(0+128),w
 10602  04BF                     u5675:	
 10603  04BF  1803               	skipnc
 10604  04C0  2CC2               	goto	u5671
 10605  04C1  2CC3               	goto	u5670
 10606  04C2                     u5671:	
 10607  04C2  2CA3               	goto	l3467
 10608  04C3                     u5670:	
 10609  04C3                     l3475:	
 10610                           
 10611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
 10612  04C3  3003               	movlw	3
 10613  04C4  1683               	bsf	3,5	;RP0=1, select bank1
 10614  04C5  1303               	bcf	3,6	;RP1=0, select bank1
 10615  04C6  053D               	andwf	sprintf@flag^(0+128),w
 10616  04C7  00A9               	movwf	??_sprintf^(0+128)
 10617  04C8  3000               	movlw	0
 10618  04C9  053E               	andwf	(sprintf@flag+1)^(0+128),w
 10619  04CA  00AA               	movwf	(??_sprintf+1)^(0+128)
 10620  04CB  0829               	movf	??_sprintf^(0+128),w
 10621  04CC  042A               	iorwf	(??_sprintf^(0+128)+1),w
 10622  04CD  1903               	btfsc	3,2
 10623  04CE  2CD0               	goto	u5681
 10624  04CF  2CD1               	goto	u5680
 10625  04D0                     u5681:	
 10626  04D0  2D43               	goto	l298
 10627  04D1                     u5680:	
 10628  04D1                     l3477:	
 10629                           
 10630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
 10631  04D1  302D               	movlw	45
 10632  04D2  00A9               	movwf	??_sprintf^(0+128)
 10633  04D3  0847               	movf	sprintf@sp^(0+128),w
 10634  04D4  0084               	movwf	4
 10635  04D5  0829               	movf	??_sprintf^(0+128),w
 10636  04D6  1383               	bcf	3,7	;select IRP bank0
 10637  04D7  0080               	movwf	0
 10638  04D8                     l3479:	
 10639  04D8  3001               	movlw	1
 10640  04D9  00A9               	movwf	??_sprintf^(0+128)
 10641  04DA  0829               	movf	??_sprintf^(0+128),w
 10642  04DB  07C7               	addwf	sprintf@sp^(0+128),f
 10643  04DC  2D43               	goto	l298
 10644  04DD                     l3481:	
 10645                           
 10646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
 10647  04DD  0848               	movf	sprintf@c^(0+128),w
 10648  04DE  00A9               	movwf	??_sprintf^(0+128)
 10649  04DF  3001               	movlw	1
 10650  04E0                     u5695:	
 10651  04E0  1003               	clrc
 10652  04E1  0DA9               	rlf	??_sprintf^(0+128),f
 10653  04E2  3EFF               	addlw	-1
 10654  04E3  1D03               	skipz
 10655  04E4  2CE0               	goto	u5695
 10656  04E5  1003               	clrc
 10657  04E6  0D29               	rlf	??_sprintf^(0+128),w
 10658  04E7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10659  04E8  0084               	movwf	4
 10660  04E9  120A  158A  200A  120A  118A  	fcall	stringdir
 10661  04EE  00F0               	movwf	___lldiv@divisor
 10662  04EF  120A  158A  200A  120A  118A  	fcall	stringdir
 10663  04F4  00F1               	movwf	___lldiv@divisor+1
 10664  04F5  120A  158A  200A  120A  118A  	fcall	stringdir
 10665  04FA  00F2               	movwf	___lldiv@divisor+2
 10666  04FB  120A  158A  200A  120A  118A  	fcall	stringdir
 10667  0500  00F3               	movwf	___lldiv@divisor+3
 10668  0501  0836               	movf	(sprintf@val+3)^(0+128),w
 10669  0502  00F7               	movwf	___lldiv@dividend+3
 10670  0503  0835               	movf	(sprintf@val+2)^(0+128),w
 10671  0504  00F6               	movwf	___lldiv@dividend+2
 10672  0505  0834               	movf	(sprintf@val+1)^(0+128),w
 10673  0506  00F5               	movwf	___lldiv@dividend+1
 10674  0507  0833               	movf	sprintf@val^(0+128),w
 10675  0508  00F4               	movwf	___lldiv@dividend
 10676  0509  160A  158A  23CB  120A  118A  	fcall	___lldiv
 10677  050E  0873               	movf	?___lldiv+3,w
 10678  050F  1683               	bsf	3,5	;RP0=1, select bank1
 10679  0510  1303               	bcf	3,6	;RP1=0, select bank1
 10680  0511  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10681  0512  0872               	movf	?___lldiv+2,w
 10682  0513  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10683  0514  0871               	movf	?___lldiv+1,w
 10684  0515  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10685  0516  0870               	movf	?___lldiv,w
 10686  0517  00B7               	movwf	sprintf@tmpval^(0+128)
 10687  0518                     l3483:	
 10688                           
 10689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
 10690  0518  3000               	movlw	0
 10691  0519  00F3               	movwf	___llmod@divisor+3
 10692  051A  3000               	movlw	0
 10693  051B  00F2               	movwf	___llmod@divisor+2
 10694  051C  3000               	movlw	0
 10695  051D  00F1               	movwf	___llmod@divisor+1
 10696  051E  300A               	movlw	10
 10697  051F  00F0               	movwf	___llmod@divisor
 10698  0520  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 10699  0521  00F7               	movwf	___llmod@dividend+3
 10700  0522  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 10701  0523  00F6               	movwf	___llmod@dividend+2
 10702  0524  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 10703  0525  00F5               	movwf	___llmod@dividend+1
 10704  0526  0837               	movf	sprintf@tmpval^(0+128),w
 10705  0527  00F4               	movwf	___llmod@dividend
 10706  0528  160A  158A  231E  120A  118A  	fcall	___llmod
 10707  052D  0873               	movf	?___llmod+3,w
 10708  052E  1683               	bsf	3,5	;RP0=1, select bank1
 10709  052F  1303               	bcf	3,6	;RP1=0, select bank1
 10710  0530  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10711  0531  0872               	movf	?___llmod+2,w
 10712  0532  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10713  0533  0871               	movf	?___llmod+1,w
 10714  0534  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10715  0535  0870               	movf	?___llmod,w
 10716  0536  00B7               	movwf	sprintf@tmpval^(0+128)
 10717  0537                     l3485:	
 10718                           
 10719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
 10720  0537  0837               	movf	sprintf@tmpval^(0+128),w
 10721  0538  3E30               	addlw	48
 10722  0539  00A9               	movwf	??_sprintf^(0+128)
 10723  053A  0847               	movf	sprintf@sp^(0+128),w
 10724  053B  0084               	movwf	4
 10725  053C  0829               	movf	??_sprintf^(0+128),w
 10726  053D  1383               	bcf	3,7	;select IRP bank0
 10727  053E  0080               	movwf	0
 10728  053F  3001               	movlw	1
 10729  0540  00A9               	movwf	??_sprintf^(0+128)
 10730  0541  0829               	movf	??_sprintf^(0+128),w
 10731  0542  07C7               	addwf	sprintf@sp^(0+128),f
 10732  0543                     l298:	
 10733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
 10734                           
 10735                           
 10736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
 10737  0543  3001               	movlw	1
 10738  0544  1683               	bsf	3,5	;RP0=1, select bank1
 10739  0545  1303               	bcf	3,6	;RP1=0, select bank1
 10740  0546  02C8               	subwf	sprintf@c^(0+128),f
 10741  0547  0A48               	incf	sprintf@c^(0+128),w
 10742  0548  1D03               	btfss	3,2
 10743  0549  2D4B               	goto	u5701
 10744  054A  2D4C               	goto	u5700
 10745  054B                     u5701:	
 10746  054B  2CDD               	goto	l3481
 10747  054C                     u5700:	
 10748  054C  2D60               	goto	l3493
 10749  054D                     l3487:	
 10750                           
 10751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
 10752  054D  3030               	movlw	48
 10753  054E  1683               	bsf	3,5	;RP0=1, select bank1
 10754  054F  1303               	bcf	3,6	;RP1=0, select bank1
 10755  0550  00A9               	movwf	??_sprintf^(0+128)
 10756  0551  0847               	movf	sprintf@sp^(0+128),w
 10757  0552  0084               	movwf	4
 10758  0553  0829               	movf	??_sprintf^(0+128),w
 10759  0554  1383               	bcf	3,7	;select IRP bank0
 10760  0555  0080               	movwf	0
 10761  0556                     l3489:	
 10762  0556  3001               	movlw	1
 10763  0557  00A9               	movwf	??_sprintf^(0+128)
 10764  0558  0829               	movf	??_sprintf^(0+128),w
 10765  0559  07C7               	addwf	sprintf@sp^(0+128),f
 10766  055A                     l3491:	
 10767                           
 10768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
 10769  055A  30FF               	movlw	255
 10770  055B  07BB               	addwf	sprintf@eexp^(0+128),f
 10771  055C  1803               	skipnc
 10772  055D  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
 10773  055E  30FF               	movlw	255
 10774  055F  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
 10775  0560                     l3493:	
 10776                           
 10777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
 10778  0560  083C               	movf	(sprintf@eexp+1)^(0+128),w
 10779  0561  3A80               	xorlw	128
 10780  0562  00FF               	movwf	btemp+1
 10781  0563  3080               	movlw	128
 10782  0564  027F               	subwf	btemp+1,w
 10783  0565  1D03               	skipz
 10784  0566  2D69               	goto	u5715
 10785  0567  3001               	movlw	1
 10786  0568  023B               	subwf	sprintf@eexp^(0+128),w
 10787  0569                     u5715:	
 10788  0569  1803               	skipnc
 10789  056A  2D6C               	goto	u5711
 10790  056B  2D6D               	goto	u5710
 10791  056C                     u5711:	
 10792  056C  2D4D               	goto	l3487
 10793  056D                     u5710:	
 10794  056D                     l3495:	
 10795                           
 10796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10797  056D  1683               	bsf	3,5	;RP0=1, select bank1
 10798  056E  1303               	bcf	3,6	;RP1=0, select bank1
 10799  056F  0846               	movf	(sprintf@prec+1)^(0+128),w
 10800  0570  3A80               	xorlw	128
 10801  0571  00FF               	movwf	btemp+1
 10802  0572  3080               	movlw	128
 10803  0573  027F               	subwf	btemp+1,w
 10804  0574  1D03               	skipz
 10805  0575  2D78               	goto	u5725
 10806  0576  3009               	movlw	9
 10807  0577  0245               	subwf	sprintf@prec^(0+128),w
 10808  0578                     u5725:	
 10809  0578  1C03               	skipc
 10810  0579  2D7B               	goto	u5721
 10811  057A  2D7C               	goto	u5720
 10812  057B                     u5721:	
 10813  057B  2D83               	goto	l3499
 10814  057C                     u5720:	
 10815  057C                     l3497:	
 10816                           
 10817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
 10818  057C  3008               	movlw	8
 10819  057D  1683               	bsf	3,5	;RP0=1, select bank1
 10820  057E  1303               	bcf	3,6	;RP1=0, select bank1
 10821  057F  00A9               	movwf	??_sprintf^(0+128)
 10822  0580  0829               	movf	??_sprintf^(0+128),w
 10823  0581  00C8               	movwf	sprintf@c^(0+128)
 10824  0582  2D89               	goto	l305
 10825  0583                     l3499:	
 10826                           
 10827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
 10828  0583  1683               	bsf	3,5	;RP0=1, select bank1
 10829  0584  1303               	bcf	3,6	;RP1=0, select bank1
 10830  0585  0845               	movf	sprintf@prec^(0+128),w
 10831  0586  00A9               	movwf	??_sprintf^(0+128)
 10832  0587  0829               	movf	??_sprintf^(0+128),w
 10833  0588  00C8               	movwf	sprintf@c^(0+128)
 10834  0589                     l305:	
 10835                           
 10836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
 10837  0589  0848               	movf	sprintf@c^(0+128),w
 10838  058A  00A9               	movwf	??_sprintf^(0+128)
 10839  058B  01AA               	clrf	(??_sprintf^(0+128)+1)
 10840  058C  0829               	movf	??_sprintf^(0+128),w
 10841  058D  02C5               	subwf	sprintf@prec^(0+128),f
 10842  058E  082A               	movf	(??_sprintf+1)^(0+128),w
 10843  058F  1C03               	skipc
 10844  0590  03C6               	decf	(sprintf@prec+1)^(0+128),f
 10845  0591  02C6               	subwf	(sprintf@prec+1)^(0+128),f
 10846  0592                     l3501:	
 10847                           
 10848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
 10849  0592  0848               	movf	sprintf@c^(0+128),w
 10850  0593  1903               	btfsc	3,2
 10851  0594  2D96               	goto	u5731
 10852  0595  2D97               	goto	u5730
 10853  0596                     u5731:	
 10854  0596  2DA2               	goto	l3507
 10855  0597                     u5730:	
 10856  0597                     l3503:	
 10857                           
 10858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
 10859  0597  302E               	movlw	46
 10860  0598  00A9               	movwf	??_sprintf^(0+128)
 10861  0599  0847               	movf	sprintf@sp^(0+128),w
 10862  059A  0084               	movwf	4
 10863  059B  0829               	movf	??_sprintf^(0+128),w
 10864  059C  1383               	bcf	3,7	;select IRP bank0
 10865  059D  0080               	movwf	0
 10866  059E                     l3505:	
 10867  059E  3001               	movlw	1
 10868  059F  00A9               	movwf	??_sprintf^(0+128)
 10869  05A0  0829               	movf	??_sprintf^(0+128),w
 10870  05A1  07C7               	addwf	sprintf@sp^(0+128),f
 10871  05A2                     l3507:	
 10872                           
 10873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
 10874  05A2  0848               	movf	sprintf@c^(0+128),w
 10875  05A3  120A  158A  2140  120A  118A  	fcall	_scale
 10876  05A8  1283               	bcf	3,5	;RP0=0, select bank0
 10877  05A9  1303               	bcf	3,6	;RP1=0, select bank0
 10878  05AA  0841               	movf	?_scale+3,w
 10879  05AB  1683               	bsf	3,5	;RP0=1, select bank1
 10880  05AC  1303               	bcf	3,6	;RP1=0, select bank1
 10881  05AD  00B1               	movwf	(_sprintf$977+3)^(0+128)
 10882  05AE  1283               	bcf	3,5	;RP0=0, select bank0
 10883  05AF  1303               	bcf	3,6	;RP1=0, select bank0
 10884  05B0  0840               	movf	?_scale+2,w
 10885  05B1  1683               	bsf	3,5	;RP0=1, select bank1
 10886  05B2  1303               	bcf	3,6	;RP1=0, select bank1
 10887  05B3  00B0               	movwf	(_sprintf$977+2)^(0+128)
 10888  05B4  1283               	bcf	3,5	;RP0=0, select bank0
 10889  05B5  1303               	bcf	3,6	;RP1=0, select bank0
 10890  05B6  083F               	movf	?_scale+1,w
 10891  05B7  1683               	bsf	3,5	;RP0=1, select bank1
 10892  05B8  1303               	bcf	3,6	;RP1=0, select bank1
 10893  05B9  00AF               	movwf	(_sprintf$977+1)^(0+128)
 10894  05BA  1283               	bcf	3,5	;RP0=0, select bank0
 10895  05BB  1303               	bcf	3,6	;RP1=0, select bank0
 10896  05BC  083E               	movf	?_scale,w
 10897  05BD  1683               	bsf	3,5	;RP0=1, select bank1
 10898  05BE  1303               	bcf	3,6	;RP1=0, select bank1
 10899  05BF  00AE               	movwf	_sprintf$977^(0+128)
 10900  05C0                     l3509:	
 10901                           
 10902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
 10903  05C0  0831               	movf	(_sprintf$977+3)^(0+128),w
 10904  05C1  1283               	bcf	3,5	;RP0=0, select bank0
 10905  05C2  1303               	bcf	3,6	;RP1=0, select bank0
 10906  05C3  00AB               	movwf	___flmul@a+3
 10907  05C4  1683               	bsf	3,5	;RP0=1, select bank1
 10908  05C5  1303               	bcf	3,6	;RP1=0, select bank1
 10909  05C6  0830               	movf	(_sprintf$977+2)^(0+128),w
 10910  05C7  1283               	bcf	3,5	;RP0=0, select bank0
 10911  05C8  1303               	bcf	3,6	;RP1=0, select bank0
 10912  05C9  00AA               	movwf	___flmul@a+2
 10913  05CA  1683               	bsf	3,5	;RP0=1, select bank1
 10914  05CB  1303               	bcf	3,6	;RP1=0, select bank1
 10915  05CC  082F               	movf	(_sprintf$977+1)^(0+128),w
 10916  05CD  1283               	bcf	3,5	;RP0=0, select bank0
 10917  05CE  1303               	bcf	3,6	;RP1=0, select bank0
 10918  05CF  00A9               	movwf	___flmul@a+1
 10919  05D0  1683               	bsf	3,5	;RP0=1, select bank1
 10920  05D1  1303               	bcf	3,6	;RP1=0, select bank1
 10921  05D2  082E               	movf	_sprintf$977^(0+128),w
 10922  05D3  1283               	bcf	3,5	;RP0=0, select bank0
 10923  05D4  1303               	bcf	3,6	;RP1=0, select bank0
 10924  05D5  00A8               	movwf	___flmul@a
 10925  05D6  1683               	bsf	3,5	;RP0=1, select bank1
 10926  05D7  1303               	bcf	3,6	;RP1=0, select bank1
 10927  05D8  0844               	movf	(sprintf@fval+3)^(0+128),w
 10928  05D9  1283               	bcf	3,5	;RP0=0, select bank0
 10929  05DA  1303               	bcf	3,6	;RP1=0, select bank0
 10930  05DB  00A7               	movwf	___flmul@b+3
 10931  05DC  1683               	bsf	3,5	;RP0=1, select bank1
 10932  05DD  1303               	bcf	3,6	;RP1=0, select bank1
 10933  05DE  0843               	movf	(sprintf@fval+2)^(0+128),w
 10934  05DF  1283               	bcf	3,5	;RP0=0, select bank0
 10935  05E0  1303               	bcf	3,6	;RP1=0, select bank0
 10936  05E1  00A6               	movwf	___flmul@b+2
 10937  05E2  1683               	bsf	3,5	;RP0=1, select bank1
 10938  05E3  1303               	bcf	3,6	;RP1=0, select bank1
 10939  05E4  0842               	movf	(sprintf@fval+1)^(0+128),w
 10940  05E5  1283               	bcf	3,5	;RP0=0, select bank0
 10941  05E6  1303               	bcf	3,6	;RP1=0, select bank0
 10942  05E7  00A5               	movwf	___flmul@b+1
 10943  05E8  1683               	bsf	3,5	;RP0=1, select bank1
 10944  05E9  1303               	bcf	3,6	;RP1=0, select bank1
 10945  05EA  0841               	movf	sprintf@fval^(0+128),w
 10946  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 10947  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 10948  05ED  00A4               	movwf	___flmul@b
 10949  05EE  120A  158A  249F  120A  118A  	fcall	___flmul
 10950  05F3  1283               	bcf	3,5	;RP0=0, select bank0
 10951  05F4  1303               	bcf	3,6	;RP1=0, select bank0
 10952  05F5  0827               	movf	?___flmul+3,w
 10953  05F6  00D4               	movwf	___fltol@f1+3
 10954  05F7  0826               	movf	?___flmul+2,w
 10955  05F8  00D3               	movwf	___fltol@f1+2
 10956  05F9  0825               	movf	?___flmul+1,w
 10957  05FA  00D2               	movwf	___fltol@f1+1
 10958  05FB  0824               	movf	?___flmul,w
 10959  05FC  00D1               	movwf	___fltol@f1
 10960  05FD  160A  118A  2003  120A  118A  	fcall	___fltol
 10961  0602  1283               	bcf	3,5	;RP0=0, select bank0
 10962  0603  1303               	bcf	3,6	;RP1=0, select bank0
 10963  0604  0854               	movf	?___fltol+3,w
 10964  0605  1683               	bsf	3,5	;RP0=1, select bank1
 10965  0606  1303               	bcf	3,6	;RP1=0, select bank1
 10966  0607  00B6               	movwf	(sprintf@val+3)^(0+128)
 10967  0608  1283               	bcf	3,5	;RP0=0, select bank0
 10968  0609  1303               	bcf	3,6	;RP1=0, select bank0
 10969  060A  0853               	movf	?___fltol+2,w
 10970  060B  1683               	bsf	3,5	;RP0=1, select bank1
 10971  060C  1303               	bcf	3,6	;RP1=0, select bank1
 10972  060D  00B5               	movwf	(sprintf@val+2)^(0+128)
 10973  060E  1283               	bcf	3,5	;RP0=0, select bank0
 10974  060F  1303               	bcf	3,6	;RP1=0, select bank0
 10975  0610  0852               	movf	?___fltol+1,w
 10976  0611  1683               	bsf	3,5	;RP0=1, select bank1
 10977  0612  1303               	bcf	3,6	;RP1=0, select bank1
 10978  0613  00B4               	movwf	(sprintf@val+1)^(0+128)
 10979  0614  1283               	bcf	3,5	;RP0=0, select bank0
 10980  0615  1303               	bcf	3,6	;RP1=0, select bank0
 10981  0616  0851               	movf	?___fltol,w
 10982  0617  1683               	bsf	3,5	;RP0=1, select bank1
 10983  0618  1303               	bcf	3,6	;RP1=0, select bank1
 10984  0619  00B3               	movwf	sprintf@val^(0+128)
 10985                           
 10986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
 10987  061A  2EBC               	goto	l3519
 10988  061B                     l3511:	
 10989                           
 10990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
 10991  061B  0848               	movf	sprintf@c^(0+128),w
 10992  061C  00A9               	movwf	??_sprintf^(0+128)
 10993  061D  3001               	movlw	1
 10994  061E                     u5745:	
 10995  061E  1003               	clrc
 10996  061F  0DA9               	rlf	??_sprintf^(0+128),f
 10997  0620  3EFF               	addlw	-1
 10998  0621  1D03               	skipz
 10999  0622  2E1E               	goto	u5745
 11000  0623  1003               	clrc
 11001  0624  0D29               	rlf	??_sprintf^(0+128),w
 11002  0625  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11003  0626  0084               	movwf	4
 11004  0627  120A  158A  200A  120A  118A  	fcall	stringdir
 11005  062C  00F0               	movwf	___lldiv@divisor
 11006  062D  120A  158A  200A  120A  118A  	fcall	stringdir
 11007  0632  00F1               	movwf	___lldiv@divisor+1
 11008  0633  120A  158A  200A  120A  118A  	fcall	stringdir
 11009  0638  00F2               	movwf	___lldiv@divisor+2
 11010  0639  120A  158A  200A  120A  118A  	fcall	stringdir
 11011  063E  00F3               	movwf	___lldiv@divisor+3
 11012  063F  0836               	movf	(sprintf@val+3)^(0+128),w
 11013  0640  00F7               	movwf	___lldiv@dividend+3
 11014  0641  0835               	movf	(sprintf@val+2)^(0+128),w
 11015  0642  00F6               	movwf	___lldiv@dividend+2
 11016  0643  0834               	movf	(sprintf@val+1)^(0+128),w
 11017  0644  00F5               	movwf	___lldiv@dividend+1
 11018  0645  0833               	movf	sprintf@val^(0+128),w
 11019  0646  00F4               	movwf	___lldiv@dividend
 11020  0647  160A  158A  23CB  120A  118A  	fcall	___lldiv
 11021  064C  0873               	movf	?___lldiv+3,w
 11022  064D  1683               	bsf	3,5	;RP0=1, select bank1
 11023  064E  1303               	bcf	3,6	;RP1=0, select bank1
 11024  064F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 11025  0650  0872               	movf	?___lldiv+2,w
 11026  0651  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 11027  0652  0871               	movf	?___lldiv+1,w
 11028  0653  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 11029  0654  0870               	movf	?___lldiv,w
 11030  0655  00B7               	movwf	sprintf@tmpval^(0+128)
 11031  0656                     l3513:	
 11032                           
 11033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
 11034  0656  3000               	movlw	0
 11035  0657  00F3               	movwf	___llmod@divisor+3
 11036  0658  3000               	movlw	0
 11037  0659  00F2               	movwf	___llmod@divisor+2
 11038  065A  3000               	movlw	0
 11039  065B  00F1               	movwf	___llmod@divisor+1
 11040  065C  300A               	movlw	10
 11041  065D  00F0               	movwf	___llmod@divisor
 11042  065E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 11043  065F  00F7               	movwf	___llmod@dividend+3
 11044  0660  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 11045  0661  00F6               	movwf	___llmod@dividend+2
 11046  0662  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 11047  0663  00F5               	movwf	___llmod@dividend+1
 11048  0664  0837               	movf	sprintf@tmpval^(0+128),w
 11049  0665  00F4               	movwf	___llmod@dividend
 11050  0666  160A  158A  231E  120A  118A  	fcall	___llmod
 11051  066B  0873               	movf	?___llmod+3,w
 11052  066C  1683               	bsf	3,5	;RP0=1, select bank1
 11053  066D  1303               	bcf	3,6	;RP1=0, select bank1
 11054  066E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 11055  066F  0872               	movf	?___llmod+2,w
 11056  0670  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 11057  0671  0871               	movf	?___llmod+1,w
 11058  0672  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 11059  0673  0870               	movf	?___llmod,w
 11060  0674  00B7               	movwf	sprintf@tmpval^(0+128)
 11061  0675                     l3515:	
 11062                           
 11063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
 11064  0675  0837               	movf	sprintf@tmpval^(0+128),w
 11065  0676  3E30               	addlw	48
 11066  0677  00A9               	movwf	??_sprintf^(0+128)
 11067  0678  0847               	movf	sprintf@sp^(0+128),w
 11068  0679  0084               	movwf	4
 11069  067A  0829               	movf	??_sprintf^(0+128),w
 11070  067B  1383               	bcf	3,7	;select IRP bank0
 11071  067C  0080               	movwf	0
 11072  067D  3001               	movlw	1
 11073  067E  00A9               	movwf	??_sprintf^(0+128)
 11074  067F  0829               	movf	??_sprintf^(0+128),w
 11075  0680  07C7               	addwf	sprintf@sp^(0+128),f
 11076  0681                     l3517:	
 11077                           
 11078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
 11079  0681  0848               	movf	sprintf@c^(0+128),w
 11080  0682  00A9               	movwf	??_sprintf^(0+128)
 11081  0683  3001               	movlw	1
 11082  0684                     u5755:	
 11083  0684  1003               	clrc
 11084  0685  0DA9               	rlf	??_sprintf^(0+128),f
 11085  0686  3EFF               	addlw	-1
 11086  0687  1D03               	skipz
 11087  0688  2E84               	goto	u5755
 11088  0689  1003               	clrc
 11089  068A  0D29               	rlf	??_sprintf^(0+128),w
 11090  068B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11091  068C  0084               	movwf	4
 11092  068D  120A  158A  200A  120A  118A  	fcall	stringdir
 11093  0692  00F0               	movwf	___llmod@divisor
 11094  0693  120A  158A  200A  120A  118A  	fcall	stringdir
 11095  0698  00F1               	movwf	___llmod@divisor+1
 11096  0699  120A  158A  200A  120A  118A  	fcall	stringdir
 11097  069E  00F2               	movwf	___llmod@divisor+2
 11098  069F  120A  158A  200A  120A  118A  	fcall	stringdir
 11099  06A4  00F3               	movwf	___llmod@divisor+3
 11100  06A5  0836               	movf	(sprintf@val+3)^(0+128),w
 11101  06A6  00F7               	movwf	___llmod@dividend+3
 11102  06A7  0835               	movf	(sprintf@val+2)^(0+128),w
 11103  06A8  00F6               	movwf	___llmod@dividend+2
 11104  06A9  0834               	movf	(sprintf@val+1)^(0+128),w
 11105  06AA  00F5               	movwf	___llmod@dividend+1
 11106  06AB  0833               	movf	sprintf@val^(0+128),w
 11107  06AC  00F4               	movwf	___llmod@dividend
 11108  06AD  160A  158A  231E  120A  118A  	fcall	___llmod
 11109  06B2  0873               	movf	?___llmod+3,w
 11110  06B3  1683               	bsf	3,5	;RP0=1, select bank1
 11111  06B4  1303               	bcf	3,6	;RP1=0, select bank1
 11112  06B5  00B6               	movwf	(sprintf@val+3)^(0+128)
 11113  06B6  0872               	movf	?___llmod+2,w
 11114  06B7  00B5               	movwf	(sprintf@val+2)^(0+128)
 11115  06B8  0871               	movf	?___llmod+1,w
 11116  06B9  00B4               	movwf	(sprintf@val+1)^(0+128)
 11117  06BA  0870               	movf	?___llmod,w
 11118  06BB  00B3               	movwf	sprintf@val^(0+128)
 11119  06BC                     l3519:	
 11120                           
 11121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
 11122  06BC  3001               	movlw	1
 11123  06BD  02C8               	subwf	sprintf@c^(0+128),f
 11124  06BE  0A48               	incf	sprintf@c^(0+128),w
 11125  06BF  1D03               	btfss	3,2
 11126  06C0  2EC2               	goto	u5761
 11127  06C1  2EC3               	goto	u5760
 11128  06C2                     u5761:	
 11129  06C2  2E1B               	goto	l3511
 11130  06C3                     u5760:	
 11131  06C3  2ED5               	goto	l3527
 11132  06C4                     l3521:	
 11133                           
 11134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
 11135  06C4  3030               	movlw	48
 11136  06C5  00A9               	movwf	??_sprintf^(0+128)
 11137  06C6  0847               	movf	sprintf@sp^(0+128),w
 11138  06C7  0084               	movwf	4
 11139  06C8  0829               	movf	??_sprintf^(0+128),w
 11140  06C9  1383               	bcf	3,7	;select IRP bank0
 11141  06CA  0080               	movwf	0
 11142  06CB                     l3523:	
 11143  06CB  3001               	movlw	1
 11144  06CC  00A9               	movwf	??_sprintf^(0+128)
 11145  06CD  0829               	movf	??_sprintf^(0+128),w
 11146  06CE  07C7               	addwf	sprintf@sp^(0+128),f
 11147  06CF                     l3525:	
 11148                           
 11149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
 11150  06CF  30FF               	movlw	255
 11151  06D0  07C5               	addwf	sprintf@prec^(0+128),f
 11152  06D1  1803               	skipnc
 11153  06D2  0AC6               	incf	(sprintf@prec+1)^(0+128),f
 11154  06D3  30FF               	movlw	255
 11155  06D4  07C6               	addwf	(sprintf@prec+1)^(0+128),f
 11156  06D5                     l3527:	
 11157                           
 11158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
 11159  06D5  0845               	movf	sprintf@prec^(0+128),w
 11160  06D6  0446               	iorwf	(sprintf@prec+1)^(0+128),w
 11161  06D7  1D03               	btfss	3,2
 11162  06D8  2EDA               	goto	u5771
 11163  06D9  2EDB               	goto	u5770
 11164  06DA                     u5771:	
 11165  06DA  2EC4               	goto	l3521
 11166  06DB                     u5770:	
 11167  06DB  2FDA               	goto	l3591
 11168  06DC                     l3529:	
 11169                           
 11170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
 11171  06DC  0845               	movf	sprintf@prec^(0+128),w
 11172  06DD  0446               	iorwf	(sprintf@prec+1)^(0+128),w
 11173  06DE  1D03               	btfss	3,2
 11174  06DF  2EE1               	goto	u5781
 11175  06E0  2EE2               	goto	u5780
 11176  06E1                     u5781:	
 11177  06E1  2EF0               	goto	l313
 11178  06E2                     u5780:	
 11179  06E2                     l3531:	
 11180  06E2  0836               	movf	(sprintf@val+3)^(0+128),w
 11181  06E3  0435               	iorwf	(sprintf@val+2)^(0+128),w
 11182  06E4  0434               	iorwf	(sprintf@val+1)^(0+128),w
 11183  06E5  0433               	iorwf	sprintf@val^(0+128),w
 11184  06E6  1D03               	skipz
 11185  06E7  2EE9               	goto	u5791
 11186  06E8  2EEA               	goto	u5790
 11187  06E9                     u5791:	
 11188  06E9  2EF0               	goto	l313
 11189  06EA                     u5790:	
 11190  06EA                     l3533:	
 11191                           
 11192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
 11193  06EA  3001               	movlw	1
 11194  06EB  07C5               	addwf	sprintf@prec^(0+128),f
 11195  06EC  1803               	skipnc
 11196  06ED  0AC6               	incf	(sprintf@prec+1)^(0+128),f
 11197  06EE  3000               	movlw	0
 11198  06EF  07C6               	addwf	(sprintf@prec+1)^(0+128),f
 11199  06F0                     l313:	
 11200                           
 11201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
 11202  06F0  0846               	movf	(sprintf@prec+1)^(0+128),w
 11203  06F1  3A80               	xorlw	128
 11204  06F2  3C80               	sublw	128
 11205  06F3  1D03               	skipz
 11206  06F4  2EF7               	goto	u5805
 11207  06F5  0845               	movf	sprintf@prec^(0+128),w
 11208  06F6  0248               	subwf	sprintf@c^(0+128),w
 11209  06F7                     u5805:	
 11210  06F7  1803               	skipnc
 11211  06F8  2EFA               	goto	u5801
 11212  06F9  2EFB               	goto	u5800
 11213  06FA                     u5801:	
 11214  06FA  2F02               	goto	l3537
 11215  06FB                     u5800:	
 11216  06FB                     l3535:	
 11217                           
 11218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1366:    c 
      +                          = (char)prec;
 11219  06FB  1683               	bsf	3,5	;RP0=1, select bank1
 11220  06FC  1303               	bcf	3,6	;RP1=0, select bank1
 11221  06FD  0845               	movf	sprintf@prec^(0+128),w
 11222  06FE  00A9               	movwf	??_sprintf^(0+128)
 11223  06FF  0829               	movf	??_sprintf^(0+128),w
 11224  0700  00C8               	movwf	sprintf@c^(0+128)
 11225  0701  2F1A               	goto	l3541
 11226  0702                     l3537:	
 11227  0702  1683               	bsf	3,5	;RP0=1, select bank1
 11228  0703  1303               	bcf	3,6	;RP1=0, select bank1
 11229  0704  0846               	movf	(sprintf@prec+1)^(0+128),w
 11230  0705  3A80               	xorlw	128
 11231  0706  00A9               	movwf	??_sprintf^(0+128)
 11232  0707  3080               	movlw	128
 11233  0708  0229               	subwf	??_sprintf^(0+128),w
 11234  0709  1D03               	skipz
 11235  070A  2F0D               	goto	u5815
 11236  070B  0848               	movf	sprintf@c^(0+128),w
 11237  070C  0245               	subwf	sprintf@prec^(0+128),w
 11238  070D                     u5815:	
 11239  070D  1803               	skipnc
 11240  070E  2F10               	goto	u5811
 11241  070F  2F11               	goto	u5810
 11242  0710                     u5811:	
 11243  0710  2F1A               	goto	l3541
 11244  0711                     u5810:	
 11245  0711                     l3539:	
 11246                           
 11247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
 11248  0711  1683               	bsf	3,5	;RP0=1, select bank1
 11249  0712  1303               	bcf	3,6	;RP1=0, select bank1
 11250  0713  0848               	movf	sprintf@c^(0+128),w
 11251  0714  00A9               	movwf	??_sprintf^(0+128)
 11252  0715  01AA               	clrf	(??_sprintf^(0+128)+1)
 11253  0716  0829               	movf	??_sprintf^(0+128),w
 11254  0717  00C5               	movwf	sprintf@prec^(0+128)
 11255  0718  082A               	movf	(??_sprintf+1)^(0+128),w
 11256  0719  00C6               	movwf	(sprintf@prec+1)^(0+128)
 11257  071A                     l3541:	
 11258                           
 11259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
 11260  071A  1683               	bsf	3,5	;RP0=1, select bank1
 11261  071B  1303               	bcf	3,6	;RP1=0, select bank1
 11262  071C  083F               	movf	sprintf@width^(0+128),w
 11263  071D  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11264  071E  1903               	btfsc	3,2
 11265  071F  2F21               	goto	u5821
 11266  0720  2F22               	goto	u5820
 11267  0721                     u5821:	
 11268  0721  2F34               	goto	l3547
 11269  0722                     u5820:	
 11270  0722                     l3543:	
 11271  0722  3003               	movlw	3
 11272  0723  053D               	andwf	sprintf@flag^(0+128),w
 11273  0724  00A9               	movwf	??_sprintf^(0+128)
 11274  0725  3000               	movlw	0
 11275  0726  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11276  0727  00AA               	movwf	(??_sprintf+1)^(0+128)
 11277  0728  0829               	movf	??_sprintf^(0+128),w
 11278  0729  042A               	iorwf	(??_sprintf^(0+128)+1),w
 11279  072A  1903               	btfsc	3,2
 11280  072B  2F2D               	goto	u5831
 11281  072C  2F2E               	goto	u5830
 11282  072D                     u5831:	
 11283  072D  2F34               	goto	l3547
 11284  072E                     u5830:	
 11285  072E                     l3545:	
 11286                           
 11287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
 11288  072E  30FF               	movlw	255
 11289  072F  07BF               	addwf	sprintf@width^(0+128),f
 11290  0730  1803               	skipnc
 11291  0731  0AC0               	incf	(sprintf@width+1)^(0+128),f
 11292  0732  30FF               	movlw	255
 11293  0733  07C0               	addwf	(sprintf@width+1)^(0+128),f
 11294  0734                     l3547:	
 11295                           
 11296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1374:   if(
      +                          flag & 0x4000) {
 11297  0734  1F3E               	btfss	(sprintf@flag+1)^(0+128),6
 11298  0735  2F37               	goto	u5841
 11299  0736  2F38               	goto	u5840
 11300  0737                     u5841:	
 11301  0737  2F53               	goto	l3555
 11302  0738                     u5840:	
 11303  0738                     l3549:	
 11304                           
 11305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1375:    if
      +                          (width > prec)
 11306  0738  0846               	movf	(sprintf@prec+1)^(0+128),w
 11307  0739  3A80               	xorlw	128
 11308  073A  00A9               	movwf	??_sprintf^(0+128)
 11309  073B  0840               	movf	(sprintf@width+1)^(0+128),w
 11310  073C  3A80               	xorlw	128
 11311  073D  0229               	subwf	??_sprintf^(0+128),w
 11312  073E  1D03               	skipz
 11313  073F  2F42               	goto	u5855
 11314  0740  083F               	movf	sprintf@width^(0+128),w
 11315  0741  0245               	subwf	sprintf@prec^(0+128),w
 11316  0742                     u5855:	
 11317  0742  1803               	skipnc
 11318  0743  2F45               	goto	u5851
 11319  0744  2F46               	goto	u5850
 11320  0745                     u5851:	
 11321  0745  2F4F               	goto	l3553
 11322  0746                     u5850:	
 11323  0746                     l3551:	
 11324                           
 11325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1376:     w
      +                          idth -= prec;
 11326  0746  1683               	bsf	3,5	;RP0=1, select bank1
 11327  0747  1303               	bcf	3,6	;RP1=0, select bank1
 11328  0748  0845               	movf	sprintf@prec^(0+128),w
 11329  0749  02BF               	subwf	sprintf@width^(0+128),f
 11330  074A  0846               	movf	(sprintf@prec+1)^(0+128),w
 11331  074B  1C03               	skipc
 11332  074C  03C0               	decf	(sprintf@width+1)^(0+128),f
 11333  074D  02C0               	subwf	(sprintf@width+1)^(0+128),f
 11334  074E  2F53               	goto	l3555
 11335  074F                     l3553:	
 11336                           
 11337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1378:     w
      +                          idth = 0;
 11338  074F  1683               	bsf	3,5	;RP0=1, select bank1
 11339  0750  1303               	bcf	3,6	;RP1=0, select bank1
 11340  0751  01BF               	clrf	sprintf@width^(0+128)
 11341  0752  01C0               	clrf	(sprintf@width+1)^(0+128)
 11342  0753                     l3555:	
 11343                           
 11344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
 11345  0753  0840               	movf	(sprintf@width+1)^(0+128),w
 11346  0754  3A80               	xorlw	128
 11347  0755  3C80               	sublw	128
 11348  0756  1D03               	skipz
 11349  0757  2F5A               	goto	u5865
 11350  0758  083F               	movf	sprintf@width^(0+128),w
 11351  0759  0248               	subwf	sprintf@c^(0+128),w
 11352  075A                     u5865:	
 11353  075A  1803               	skipnc
 11354  075B  2F5D               	goto	u5861
 11355  075C  2F5E               	goto	u5860
 11356  075D                     u5861:	
 11357  075D  2F6A               	goto	l3559
 11358  075E                     u5860:	
 11359  075E                     l3557:	
 11360                           
 11361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
 11362  075E  1683               	bsf	3,5	;RP0=1, select bank1
 11363  075F  1303               	bcf	3,6	;RP1=0, select bank1
 11364  0760  0848               	movf	sprintf@c^(0+128),w
 11365  0761  00A9               	movwf	??_sprintf^(0+128)
 11366  0762  01AA               	clrf	(??_sprintf^(0+128)+1)
 11367  0763  0829               	movf	??_sprintf^(0+128),w
 11368  0764  02BF               	subwf	sprintf@width^(0+128),f
 11369  0765  082A               	movf	(??_sprintf+1)^(0+128),w
 11370  0766  1C03               	skipc
 11371  0767  03C0               	decf	(sprintf@width+1)^(0+128),f
 11372  0768  02C0               	subwf	(sprintf@width+1)^(0+128),f
 11373  0769  2F6E               	goto	l3561
 11374  076A                     l3559:	
 11375                           
 11376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
 11377  076A  1683               	bsf	3,5	;RP0=1, select bank1
 11378  076B  1303               	bcf	3,6	;RP1=0, select bank1
 11379  076C  01BF               	clrf	sprintf@width^(0+128)
 11380  076D  01C0               	clrf	(sprintf@width+1)^(0+128)
 11381  076E                     l3561:	
 11382                           
 11383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1413:   if(
      +                          flag & 0x04) {
 11384  076E  1D3D               	btfss	sprintf@flag^(0+128),2
 11385  076F  2F71               	goto	u5871
 11386  0770  2F72               	goto	u5870
 11387  0771                     u5871:	
 11388  0771  2FA7               	goto	l3577
 11389  0772                     u5870:	
 11390  0772                     l3563:	
 11391                           
 11392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1418:    if
      +                          (flag & 0x03)
 11393  0772  3003               	movlw	3
 11394  0773  053D               	andwf	sprintf@flag^(0+128),w
 11395  0774  00A9               	movwf	??_sprintf^(0+128)
 11396  0775  3000               	movlw	0
 11397  0776  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11398  0777  00AA               	movwf	(??_sprintf+1)^(0+128)
 11399  0778  0829               	movf	??_sprintf^(0+128),w
 11400  0779  042A               	iorwf	(??_sprintf^(0+128)+1),w
 11401  077A  1903               	btfsc	3,2
 11402  077B  2F7D               	goto	u5881
 11403  077C  2F7E               	goto	u5880
 11404  077D                     u5881:	
 11405  077D  2F89               	goto	l3569
 11406  077E                     u5880:	
 11407  077E                     l3565:	
 11408                           
 11409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1419:     (
      +                          (*sp++ = ('-')));
 11410  077E  302D               	movlw	45
 11411  077F  00A9               	movwf	??_sprintf^(0+128)
 11412  0780  0847               	movf	sprintf@sp^(0+128),w
 11413  0781  0084               	movwf	4
 11414  0782  0829               	movf	??_sprintf^(0+128),w
 11415  0783  1383               	bcf	3,7	;select IRP bank0
 11416  0784  0080               	movwf	0
 11417  0785                     l3567:	
 11418  0785  3001               	movlw	1
 11419  0786  00A9               	movwf	??_sprintf^(0+128)
 11420  0787  0829               	movf	??_sprintf^(0+128),w
 11421  0788  07C7               	addwf	sprintf@sp^(0+128),f
 11422  0789                     l3569:	
 11423                           
 11424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1441:    if
      +                          (width)
 11425  0789  083F               	movf	sprintf@width^(0+128),w
 11426  078A  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11427  078B  1903               	btfsc	3,2
 11428  078C  2F8E               	goto	u5891
 11429  078D  2F8F               	goto	u5890
 11430  078E                     u5891:	
 11431  078E  2FDA               	goto	l3591
 11432  078F                     u5890:	
 11433  078F                     l3571:	
 11434                           
 11435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1443:      
      +                          ((*sp++ = ('0')));
 11436  078F  3030               	movlw	48
 11437  0790  00A9               	movwf	??_sprintf^(0+128)
 11438  0791  0847               	movf	sprintf@sp^(0+128),w
 11439  0792  0084               	movwf	4
 11440  0793  0829               	movf	??_sprintf^(0+128),w
 11441  0794  1383               	bcf	3,7	;select IRP bank0
 11442  0795  0080               	movwf	0
 11443  0796                     l3573:	
 11444  0796  3001               	movlw	1
 11445  0797  00A9               	movwf	??_sprintf^(0+128)
 11446  0798  0829               	movf	??_sprintf^(0+128),w
 11447  0799  07C7               	addwf	sprintf@sp^(0+128),f
 11448  079A                     l3575:	
 11449  079A  30FF               	movlw	255
 11450  079B  07BF               	addwf	sprintf@width^(0+128),f
 11451  079C  1803               	skipnc
 11452  079D  0AC0               	incf	(sprintf@width+1)^(0+128),f
 11453  079E  30FF               	movlw	255
 11454  079F  07C0               	addwf	(sprintf@width+1)^(0+128),f
 11455  07A0  083F               	movf	sprintf@width^(0+128),w
 11456  07A1  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11457  07A2  1D03               	btfss	3,2
 11458  07A3  2FA5               	goto	u5901
 11459  07A4  2FA6               	goto	u5900
 11460  07A5                     u5901:	
 11461  07A5  2F8F               	goto	l3571
 11462  07A6                     u5900:	
 11463  07A6  2FDA               	goto	l3591
 11464  07A7                     l3577:	
 11465                           
 11466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
 11467  07A7  083F               	movf	sprintf@width^(0+128),w
 11468  07A8  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11469  07A9  1903               	btfsc	3,2
 11470  07AA  2FAC               	goto	u5911
 11471  07AB  2FAD               	goto	u5910
 11472  07AC                     u5911:	
 11473  07AC  2FC4               	goto	l3585
 11474  07AD                     u5910:	
 11475  07AD                     l3579:	
 11476                           
 11477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
 11478  07AD  3020               	movlw	32
 11479  07AE  00A9               	movwf	??_sprintf^(0+128)
 11480  07AF  0847               	movf	sprintf@sp^(0+128),w
 11481  07B0  0084               	movwf	4
 11482  07B1  0829               	movf	??_sprintf^(0+128),w
 11483  07B2  1383               	bcf	3,7	;select IRP bank0
 11484  07B3  0080               	movwf	0
 11485  07B4                     l3581:	
 11486  07B4  3001               	movlw	1
 11487  07B5  00A9               	movwf	??_sprintf^(0+128)
 11488  07B6  0829               	movf	??_sprintf^(0+128),w
 11489  07B7  07C7               	addwf	sprintf@sp^(0+128),f
 11490  07B8                     l3583:	
 11491  07B8  30FF               	movlw	255
 11492  07B9  07BF               	addwf	sprintf@width^(0+128),f
 11493  07BA  1803               	skipnc
 11494  07BB  0AC0               	incf	(sprintf@width+1)^(0+128),f
 11495  07BC  30FF               	movlw	255
 11496  07BD  07C0               	addwf	(sprintf@width+1)^(0+128),f
 11497  07BE  083F               	movf	sprintf@width^(0+128),w
 11498  07BF  0440               	iorwf	(sprintf@width+1)^(0+128),w
 11499  07C0  1D03               	btfss	3,2
 11500  07C1  2FC3               	goto	u5921
 11501  07C2  2FC4               	goto	u5920
 11502  07C3                     u5921:	
 11503  07C3  2FAD               	goto	l3579
 11504  07C4                     u5920:	
 11505  07C4                     l3585:	
 11506                           
 11507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
 11508  07C4  3003               	movlw	3
 11509  07C5  053D               	andwf	sprintf@flag^(0+128),w
 11510  07C6  00A9               	movwf	??_sprintf^(0+128)
 11511  07C7  3000               	movlw	0
 11512  07C8  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11513  07C9  00AA               	movwf	(??_sprintf+1)^(0+128)
 11514  07CA  0829               	movf	??_sprintf^(0+128),w
 11515  07CB  042A               	iorwf	(??_sprintf^(0+128)+1),w
 11516  07CC  1903               	btfsc	3,2
 11517  07CD  2FCF               	goto	u5931
 11518  07CE  2FD0               	goto	u5930
 11519  07CF                     u5931:	
 11520  07CF  2FDA               	goto	l3591
 11521  07D0                     u5930:	
 11522  07D0                     l3587:	
 11523                           
 11524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
 11525  07D0  302D               	movlw	45
 11526  07D1  00A9               	movwf	??_sprintf^(0+128)
 11527  07D2  0847               	movf	sprintf@sp^(0+128),w
 11528  07D3  0084               	movwf	4
 11529  07D4  0829               	movf	??_sprintf^(0+128),w
 11530  07D5  1383               	bcf	3,7	;select IRP bank0
 11531  07D6  0080               	movwf	0
 11532  07D7  160A  118A  2D42   	goto	l3309
 11533  07DA                     l3591:	
 11534                           
 11535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
 11536  07DA  3001               	movlw	1
 11537  07DB  07A0               	addwf	sprintf@f^(0+128),f
 11538  07DC  30FF               	movlw	-1
 11539  07DD  0720               	addwf	sprintf@f^(0+128),w
 11540  07DE  0084               	movwf	4
 11541  07DF  120A  158A  200A  120A  118A  	fcall	stringdir
 11542  07E4  00A9               	movwf	??_sprintf^(0+128)
 11543  07E5  0829               	movf	??_sprintf^(0+128),w
 11544  07E6  00C8               	movwf	sprintf@c^(0+128)
 11545  07E7  0848               	movf	sprintf@c^(0+128),w
 11546  07E8  1D03               	btfss	3,2
 11547  07E9  2FEB               	goto	u5941
 11548  07EA  2FEE               	goto	u5940
 11549  07EB                     u5941:	
 11550  07EB  160A  118A  2D35   	goto	l3305
 11551  07EE                     u5940:	
 11552  07EE                     l3593:	
 11553                           
 11554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
 11555  07EE  0847               	movf	sprintf@sp^(0+128),w
 11556  07EF  0084               	movwf	4
 11557  07F0  1383               	bcf	3,7	;select IRP bank0
 11558  07F1  0180               	clrf	0
 11559  07F2                     l334:	
 11560  07F2  0008               	return
 11561  07F3                     __end_of_sprintf:	


Data Sizes:
    Strings     38
    Constant    144
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     41      78
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> BUFFER(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    WRITE@a	PTR unsigned char  size(2) Largest target is 22
		 -> STR_4(CODE[2]), STR_3(CODE[2]), BUFFER(BANK1[16]), STR_1(CODE[22]), 


Critical Paths under _main in COMMON

    _main->_WRITE
    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _WRITE->_CHAR
    _CHAR->_delay
    _LCD_PROG->_LCD_INIT
    _LCD_CURSOR->_LCD_INIT
    _LCD_CLR->_LCD_INIT
    _LCD_INIT->_delay

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   39997
                                             78 BANK0      2     2      0
                                _ADC
                               _ADC1
                     _INTERRUPCIONES
                            _LCD_CLR
                         _LCD_CURSOR
                           _LCD_PROG
                              _SETUP
                              _WRITE
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   32431
                                              0 BANK1     41    32      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _WRITE                                                7     5      2     420
                                              9 COMMON     5     3      2
                                              0 BANK0      2     2      0
                               _CHAR
 ---------------------------------------------------------------------------------
 (2) _CHAR                                                 3     3      0      26
                                              6 COMMON     3     3      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_PROG                                             0     0      0      30
                           _LCD_INIT
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_CURSOR                                           3     2      1     418
                                              9 COMMON     3     2      1
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (1) _LCD_CLR                                              0     0      0      26
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             3     3      0      26
                                              6 COMMON     3     3      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                6     4      2       4
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _INTERRUPCIONES                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _ADC1
   _INTERRUPCIONES
   _LCD_CLR
     _LCD_INIT
       _delay
   _LCD_CURSOR
     _LCD_INIT
       _delay
   _LCD_PROG
     _LCD_INIT
       _delay
     _delay
   _SETUP
   _WRITE
     _CHAR
       _delay
   ___fldiv
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AC      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 13 23:04:51 2020

             LCD_CURSOR@a 007B               LCD_CURSOR@b 0079              ___fldiv@aexp 002C  
            ___fldiv@bexp 002B                         pc 0002              ___fldiv@sign 0024  
             __CFG_CP$OFF 0000                        l80 1906                        l57 0020  
                      l83 08D6                        l91 1ACF                        _EN 00D7  
                      l94 1928                        l88 1998                        _RS 00D5  
                      _RW 00D3              ___awdiv@sign 0021                        fsr 0004  
     ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076                       l100 1A83  
                     l121 18A6                       l124 18D4                       l118 18AE  
                     l233 0C9E                       l313 06F0                       l305 0589  
                     l226 152A                       l340 1971                       l261 160B  
                     l334 07F2                       l246 154C                       _ADC 18A7  
                     l512 10FF                       l504 1BCA                       l338 1959  
                     l524 1AEC                       l532 1CB9                       l508 113C  
                     l525 1B08                       l533 1CD2                       l541 107E  
                     l509 10A1                       l526 1B1D                       l374 1C30  
                     l711 194C                       l551 107E                       l519 112F  
                     l721 1199                       l529 1C4D                       l537 000D  
                     l801 1D8C                       l298 0543                       l723 131F  
                     l707 029C                       l555 1E49                       l491 093F  
                     l708 02A8                       l548 1069                       l812 1D56  
                     l556 1DBB                       l644 1A3D                       l813 1D62  
                     l805 1D3A                       l566 1E3C                       l654 19F9  
                     l743 1303                       l671 0102                       l559 1E0C  
                     l745 1313                       l737 1291                       l665 0084  
                     l761 0FFF                       l690 021A                       l594 1B71  
                     l827 19AD                       l819 18E6                       l669 012B  
                     l829 19BF                       l773 0FF3                       l686 01F6  
                     l678 02A8                       l767 0F6B                       l696 023C  
                     l699 027A                       l799 1CF5              __CFG_CPD$OFF 0000  
                     fsr0 0004                       indf 0000              ___awmod@sign 0076  
            ___flmul@aexp 0036              ___flmul@bexp 0037               _sprintf$977 00AE  
            ___flmul@sign 0031              ___flmul@temp 003C              ___flmul@prod 0038  
         __end_of_LCD_CLR 08D7                      ?_ADC 0070              __CFG_LVP$OFF 0000  
            ___fltol@exp1 005B                      l3001 1DFD                      l3003 1DFE  
                    l3101 1BEF                      l3021 1E31                      l3013 1E18  
                    l3005 1E06                      l3111 1C22                      l3103 1BF8  
                    l3023 1E41                      l3007 1E10                      l3015 1E2A  
                    l3121 1B00                      l3105 1C0A                      l3113 1C28  
                    l3201 1B3A                      l3041 10AA                      l3033 1095  
                    l2401 19B6                      l2411 18B7                      l3123 1B1A  
                    l3131 1C45                      l3107 1C18                      l3203 1B4C  
                    l3051 10E1                      l3043 10BB                      l3027 107F  
                    l2403 19BB                      l3301 18A0                      l3125 1B1C  
                    l3117 1AD0                      l3141 1C95                      l3133 1C61  
                    l3213 1929                      l3109 1C19                      l3205 1B5A  
                    l3221 1CD9                      l3053 10EF                      l3045 10BD  
                    l3029 108C                      l2501 19FA                      l2421 08DA  
                    l2415 18BB                      l2407 18B7                      l3119 1AE4  
                    l3143 1CCF                      l3135 1C69                      l3151 000B  
                    l3215 192D                      l3207 1B63                      l3231 1D06  
                    l3223 1CDD                      l3055 10F0                      l3047 10C6  
                    l3039 10A2                      l2511 1A10                      l2503 19FC  
                    l2431 08EE                      l2423 08DE                      l3311 1547  
                    l3303 152E                      l3145 1CD1                      l3137 1C6D  
                    l3129 1C31                      l3153 000D                      l2601 009A  
                    l3209 1B69                      l3081 194F                      l3241 1D31  
                    l3233 1D0B                      l3225 1CED                      l3073 1124  
                    l3065 110B                      l3057 10F9                      l3049 10CF  
                    l2521 1A33                      l2513 1A14                      l2505 1A02  
                    l2441 0904                      l2433 08F2                      l2425 08E3  
                    l3401 17A3                      l3321 1574                      l3313 154D  
                    l3305 1535                      l3139 1C91                      l2611 00AE  
                    l2603 009E                      l3171 1039                      l3163 1019  
                    l3083 1953                      l3251 1D64                      l3243 1D41  
                    l3235 1D18                      l3227 1CFD                      l3219 1CD4  
                    l3075 1134                      l3059 1103                      l3067 111D  
                    l2515 1A25                      l2507 1A05                      l2523 1A39  
                    l2531 19C9                      l2451 0924                      l2443 0908  
                    l2435 08F4                      l2427 08E5                      l2419 08D7  
                    l3411 02FA                      l3403 17EA                      l3323 1578  
                    l3331 15B4                      l3307 153B                      l3149 0003  
                    l2701 0228                      l2621 00C2                      l2613 00B2  
                    l2605 00A2                      l3173 103D                      l3181 1057  
                    l3165 102E                      l3157 1003                      l3093 1BCB  
                    l3085 1960                      l3253 1D7A                      l3245 1D4C  
                    l3237 1D1F                      l2517 1A2B                      l2509 1A0C  
                    l2541 19E8                      l2533 19D0                      l2453 092B  
                    l2445 090C                      l2437 08FA                      l2429 08E9  
                    l3501 0592                      l3413 0315                      l3405 02A9  
                    l3341 15DF                      l3333 15C2                      l3325 158D  
                    l3317 1551                      l3309 1542                      l3271 001B  
                    l3263 000E                      l2711 0239                      l2703 022A  
                    l2631 00E6                      l2623 00C6                      l2615 00B6  
                    l2607 00A6                      l2551 0028                      l3191 1073  
                    l3167 102F                      l3159 1010                      l3095 1BDB  
                    l3087 1967                      l3079 194D                      l3255 1D7F  
                    l3247 1D50                      l3239 1D23                      l2519 1A2C  
                    l2543 19EF                      l2535 19D4                      l2527 19C0  
                    l2447 091D                      l2439 08FD                      l2455 0931  
                    l2471 1B7E                      l2463 1B72                      l3511 061B  
                    l3503 0597                      l3431 03F0                      l3423 0363  
                    l3415 031E                      l3407 02C4                      l3343 15F2  
                    l3335 15C3                      l3327 15A0                      l3319 1564  
                    _ADC1 18A0                      l3281 1978                      l3273 1A84  
                    l3265 0017                      l2721 0258                      l2705 022E  
                    l2641 0116                      l2633 0106                      l2625 00CA  
                    l2617 00BA                      l2609 00AA                      l2561 003D  
                    l2553 002E                      l3169 1037                      l3097 1BDE  
                    l3193 1B1E                      l3089 196D                      l3257 1D83  
                    l3249 1D5A                      l2393 199A                      l2801 0DC6  
                    l2537 19D8                      l2529 19C6                      l2545 19F5  
                    l2457 0936                      l2449 0923                      l2481 1B97  
                    l2473 1B82                      l2465 1B73                      l3521 06C4  
                    l3513 0656                      l3505 059E                      l3441 0429  
                    l3417 0326                      l3409 02EB                      l3425 036C  
                    l3361 163F                      l3353 160D                      l3345 15F6  
                    l3337 15C7                      l3329 15A4                      l3275 18C3  
                    l3283 197F                      l3267 0019                      l3291 1A3E  
                    l3611 1144                      l2731 0291                      l2723 0276  
                    l2715 0241                      l2707 022F                      l2643 011F  
                    l2635 010F                      l2619 00BE                      l2627 00CE  
                    l2571 0055                      l2563 0045                      l2555 0032  
                    l3187 105E                      l3179 1045                      l3099 1BEB  
                    l3195 1B26                      l3259 1D84                      l2395 199C  
                    l2811 0E29                      l2803 0DCF                      l2539 19E2  
                    l2459 093B                      l2491 1BB6                      l2483 1B9B  
                    l2475 1B87                      l2467 1B77                      l3531 06E2  
                    l3523 06CB                      l3515 0675                      l3507 05A2  
                    l3451 0466                      l3443 0433                      l3427 03A1  
                    l3419 0344                      l3371 1687                      l3363 164D  
                    l3355 1629                      l3339 15CA                      l3347 1607  
                    l3277 08CA                      l3285 1985                      l3269 001A  
                    l2901 191B                      l3293 1A43                      l3701 1261  
                    l3621 1159                      l3613 114A                      l2741 02A7  
                    l2733 0292                      l2725 027F                      l2717 0246  
                    l2709 0233                      l2661 0165                      l2653 013D  
                    l2637 0111                      l2645 0123                      l2629 00CF  
                    l2581 0067                      l2573 005B                      l2565 0046  
                    l2557 0033                      l2549 0021                      l3189 106E  
                    l3197 1B29                      l2397 19A3                      l2821 0EC9  
                    l2813 0E42                      l2805 0DDF                      l2485 1B9F  
                    l2477 1B8D                      l2493 1BBC                      l2469 1B7C  
                    l3541 071A                      l3533 06EA                      l3525 06CF  
                    l3517 0681                      l3509 05C0                      l3461 048B  
                    l3453 046A                      l3445 044E                      l3437 03F2  
                    l3429 03EE                      l3381 16C8                      l3373 168B  
                    l3365 1651                      l3357 1637                      l3349 1609  
                    l3287 198B                      l3279 1973                      l2903 1924  
                    l3295 1A5F                      l3711 1276                      l3703 1262  
                    l3631 1171                      l3623 1161                      l3615 114E  
                    l2735 0296                      l2727 0284                      l2719 0254  
                    l2663 0167                      l2655 0154                      l2647 012F  
                    l2671 017A                      l2639 0115                      l2583 006C  
                    l2591 007C                      l2575 005C                      l2559 0038  
                    l2567 0048                      l3199 1B36                      l2399 19A7  
                    l2831 0F37                      l2823 0EEF                      l2815 0E5F  
                    l2807 0DFC                      l2751 0CB1                      l2743 0C9F  
                    l2495 1BC1                      l2487 1BA9                      l2479 1B90  
                    l3551 0746                      l3543 0722                      l3535 06FB  
                    l3527 06D5                      l3519 06BC                      l3471 04B0  
                    l3463 048F                      l3455 0476                      l3447 0454  
                    l3391 174F                      l3383 16DB                      l3375 16A4  
                    l3367 166A                      l3359 163B                      l3289 1992  
                    l3297 1A67                      l3721 129B                      l3713 127A  
                    l3705 126B                      l3641 1186                      l3633 1177  
                    l3625 1162                      l3617 114F                      l3609 113D  
                    l2737 0298                      l2729 028C                      l2673 0190  
                    l2681 01E8                      l2665 016B                      l2657 0158  
                    l2649 0134                      l2593 008A                      l2585 0071  
                    l2577 0062                      l2569 0050                      l2841 0F4F  
                    l2833 0F3B                      l2825 0F17                      l2817 0E8C  
                    l2809 0E0C                      l2761 0CCD                      l2753 0CB6  
                    l2745 0CA6                      l2913 1436                      l2905 1323  
                    l2497 1BC6                      l2489 1BAF                      l3561 076E  
                    l3553 074F                      l3545 072E                      l3537 0702  
                    l3481 04DD                      l3457 047D                      l3465 0495  
                    l3473 04B6                      l3449 0460                      l3393 1768  
                    l3385 16DF                      l3377 16AF                      l3369 1683  
                    l3529 06DC                      l3801 1FDE                      l3299 18A7  
                    l3731 12D9                      l3723 12A9                      l3715 128E  
                    l3707 1271                      l3651 11AD                      l3643 118E  
                    l3635 117B                      l3619 1154                      l3627 1164  
                    l2739 02A3                      l2691 0215                      l2683 01FE  
                    l2675 01CE                      l2667 016C                      l2659 015C  
                    l2595 008E                      l2587 0079                      l2579 0066  
                    l2851 0F70                      l2843 0F50                      l2835 0F3C  
                    l2827 0F20                      l2819 0E9C                      l2771 0CE2  
                    l2763 0CD2                      l2755 0CBB                      l2747 0CAC  
                    l2915 143C                      l2907 1329                      l2923 0943  
                    l3571 078F                      l3563 0772                      l3555 0753  
                    l3547 0734                      l3539 0711                      l3491 055A  
                    l3483 0518                      l3475 04C3                      l3467 04A3  
                    l3459 0482                      l3395 1771                      l3387 16E5  
                    l3379 16B5                      l3803 1FE7                      l3741 1309  
                    l3733 12E7                      l3725 12AD                      l3709 1275  
                    l3653 11B1                      l3645 118F                      l3637 117C  
                    l3629 116C                      l2693 0219                      l2685 0203  
                    l2677 01D4                      l2669 0175                      l2597 0092  
                    l2589 007A                      l2853 0F75                      l2861 0FA6  
                    l2845 0F54                      l2837 0F45                      l2829 0F2E  
                    l2781 0CFE                      l2773 0CE7                      l2765 0CD8  
                    l2757 0CC3                      l2749 0CB0                      l2941 0AC7  
                    l2925 0947                      l3581 07B4                      l3573 0796  
                    l3565 077E                      l3557 075E                      l3549 0738  
                    l3493 0560                      l3485 0537                      l3477 04D1  
                    l3469 04AC                      l3397 178C                      l3389 1704  
                    l3805 1FF3                      l3743 130D                      l3735 12F6  
                    l3727 12C6                      l3719 1296                      l3671 11F2  
                    l3663 11C8                      l3639 1181                      l3647 1191  
                    l2695 021E                      l2679 01D9                      l2599 0096  
                    l2871 0FD9                      l2863 0FB3                      l2855 0F83  
                    l2847 0F68                      l2839 0F4B                      l2791 0D29  
                    l2783 0D03                      l2775 0CEF                      l2767 0CDC  
                    l2759 0CC5                      l2919 14E7                      l2935 0A38  
                    l2927 0949                      l3583 07B8                      l3575 079A  
                    l3567 0785                      l3559 076A                      l3495 056D  
                    l3487 054D                      l3479 04D8                      l3399 1794  
                    l3591 07DA                      l3751 1E4A                      l3745 130F  
                    l3737 12FA                      l3729 12CC                      l3681 1210  
                    l3673 11F4                      l3665 11DA                      l3649 11A1  
                    l3657 11BA                      l2697 0221                      l2689 020C  
                    l2873 0FE7                      l2865 0FBE                      l2857 0F87  
                    l2793 0D46                      l2777 0CF1                      l2769 0CDD  
                    l2953 0BE3                      l2937 0A3F                      l2929 0950  
                    l2945 0AF4                      l3585 07C4                      l3569 0789  
                    l3577 07A7                      l3497 057C                      l3489 0556  
                    l3593 07EE                      l3761 1E6F                      l3753 1E54  
                    l2891 1902                      l2883 18E8                      l3739 1302  
                    l3675 11F9                      l3683 1219                      l3691 1244  
                    l3667 11E2                      l3659 11BF                      l2699 0223  
                    l2875 0FEB                      l2867 0FCD                      l2859 0FA0  
                    l2795 0D62                      l2787 0D0C                      l2779 0CF9  
                    l2971 18E5                      l2963 18D6                      l2955 0BEA  
                    l2947 0AFB                      l3587 07D0                      l3579 07AD  
                    l3499 0583                      l3771 1E94                      l3763 1E74  
                    l3755 1E59                      l2885 18F5                      l2893 1908  
                    l3693 124A                      l3685 122B                      l3677 120B  
                    l3669 11EA                      l2981 1DA9                      l2877 0FEC  
                    l2869 0FD7                      l2797 0D8E                      l2789 0D1C  
                    l2965 18D7                      l3781 1F11                      l3773 1EAB  
                    l3765 1E77                      l3757 1E5E                      l2887 18F7  
                    l2895 190E                      l3695 1252                      l3687 122C  
                    l3679 120F                      l2991 1DD1                      l2975 1D8D  
                    l2879 0FF7                      l2799 0DAA                      l2967 18DD  
                    l2959 0C72                      l3791 1F84                      l3783 1F12  
                    l3775 1EEA                      l3767 1E78                      l3759 1E66  
                    l2889 18F9                      l2897 1915                      l3697 1254  
                    l3689 1240                      l2993 1DD3                      l2977 1DA0  
                    l2969 18E3                      l3793 1FA3                      l3785 1F1F  
                    l3777 1F09                      l3769 1E85                      l2899 1917  
                    l3699 125D                      l2995 1DDC                      l2987 1DBC  
                    l3867 155F                      l3795 1FC1                      l3787 1F2E  
                    l3779 1F0E                      l2997 1DE5                      l2989 1DC2  
                    l3869 1621                      l3797 1FC9                      l3789 1F45  
                    l2999 1DF3                      l3799 1FD2                      _CHAR 1907  
                    STR_1 08A0                      STR_2 08B6                      STR_3 08C4  
                    STR_4 08C4                      u4000 0CFE                      u3200 090C  
                    u4001 0CFD                      u3201 090B                      u3130 19A7  
                    u4010 0D03                      u3131 19A6                      u4011 0D02  
                    u3220 091D                      u3300 1B9F                      u4101 0E51  
                    u4021 0D54                      u3221 091C                      u3301 1B9E  
                    u3150 19BB                      u4102 0E58                      u4022 0D5B  
                    u3310 1BA9                      u3151 19BA                      u4111 0E7E  
                    u4103 0E5F                      u4031 0D70                      u4023 0D62  
                    u3215 090D                      u3311 1BA8                      u5000 1C6D  
                    u4112 0E85                      u4032 0D77                      u3240 0931  
                    u3160 08DE                      u5001 1C6C                      u3145 19AE  
                    u4121 0EAB                      u4113 0E8C                      u4041 0D9C  
                    u4033 0D7E                      u3241 0930                      u3225 0919  
                    u3161 08DD                      u4210 0F4F                      u4130 0ED5  
                    u4122 0EB2                      u4042 0DA3                      u3410 1A39  
                    u3250 0936                      u3170 08E9                      u3330 1BBC  
                    u5011 1C7C                      u4211 0F4E                      u4123 0EB9  
                    u4051 0DB8                      u4043 0DAA                      u3411 1A38  
                    u3251 0935                      u3235 0925                      u3171 08E8  
                    u3331 1BBB                      u3315 1BA5                      u5020 1C95  
                    u5012 1C7D                      u3500 003D                      u4300 0FEB  
                    u4220 0F54                      u4052 0DBF                      u3420 19C6  
                    u3180 08FA                      u3340 1BC1                      u3260 1B77  
                    u5021 1C94                      u5013 1C82                      u3501 003C  
                    u4301 0FEA                      u4221 0F53                      u4205 0F3E  
                    u4141 0EE1                      u4053 0DC6                      u3405 1A2D  
                    u3421 19C5                      u3181 08F9                      u3341 1BC0  
                    u3325 1BB0                      u3261 1B76                      u5014 1C83  
                    u3510 005B                      u5110 1056                      u4230 0F68  
                    u4150 0EFD                      u4142 0EE8                      u3350 1A02  
                    u4310 1329                      u3270 1B82                      u5031 1CA4  
                    u5015 1C88                      u3511 005A                      u5111 1055  
                    u4231 0F67                      u4143 0EEF                      u4135 0ED0  
                    u4071 0DEE                      u3351 1A01                      u4311 1328  
                    u3271 1B81                      u6000 1186                      u5040 1CCF  
                    u5032 1CA5                      u5016 1C89                      u3600 0106  
                    u3520 0066                      u5120 105D                      u4240 0F6F  
                    u4072 0DF5                      u3440 19D8                      u3280 1B8D  
                    u4400 0950                      u6001 1185                      u5041 1CCE  
                    u5033 1CAA                      u3601 0105                      u3521 0065  
                    u5121 105C                      u5105 1046                      u4241 0F6E  
                    u4161 0F09                      u4081 0E1B                      u4073 0DFC  
                    u4065 0DC8                      u3441 19D7                      u3281 1B8C  
                    u4401 094F                      u6010 11A1                      u5034 1CAB  
                    u5050 000B                      u3610 0115                      u3530 006C  
                    u5210 1B69                      u4250 0F75                      u4162 0F10  
                    u4082 0E22                      u3370 1A14                      u3450 19E2  
                    u6011 11A0                      u5035 1CB0                      u5051 000A  
                    u3611 0114                      u3531 006B                      u5211 1B68  
                    u4251 0F74                      u4163 0F17                      u4155 0EF8  
                    u4083 0E29                      u3371 1A13                      u3451 19E1  
                    u3435 19CA                      u3195 08FE                      u6100 124A  
                    u6020 11BF                      u5036 1CB1                      u3540 0071  
                    u5140 106E                      u5060 1010                      u5300 1D50  
                    u5220 1CD9                      u4260 0F87                      u6101 1249  
                    u6021 11BE                      u5045 1CCB                      u3541 0070  
                    u5141 106D                      u5061 100F                      u5205 1B5B  
                    u5301 1D4F                      u5221 1CD8                      u4261 0F86  
                    u3365 1A06                      u4325 1346                      u6110 1252  
                    u6030 11F9                      u3710 0190                      u3630 012B  
                    u3550 008A                      u5150 1073                      u5070 1027  
                    u5310 1D56                      u5230 1CDD                      u4270 0F96  
                    u4190 0F3B                      u3390 1A25                      u3470 19F5  
                    u4350 143C                      u6111 1251                      u6031 11F8  
                    u3711 018F                      u3631 012A                      u3551 0089  
                    u5151 1072                      u5135 1060                      u5311 1D55  
                    u5231 1CDC                      u4191 0F3A                      u4175 0F19  
                    u4095 0E2B                      u3391 1A24                      u3471 19F4  
                    u3455 19DE                      u4351 143B                      u4335 13A0  
                    u3295 1B91                      u4415 0970                      u5400 1A83  
                    u6200 12AD                      u3800 0228                      u3640 012F  
                    u3560 008E                      u3480 0032                      u5080 103D  
                    u5160 1B26                      u5320 1D5A                      u5240 1CFD  
                    u4280 0FB3                      u4520 0BEA                      u4440 0A3F  
                    u5401 1A82                      u6201 12AC                      u3801 0227  
                    u3721 01A7                      u3713 018C                      u3705 016E  
                    u3641 012E                      u3625 0118                      u3561 008D  
                    u3481 0031                      u5081 103C                      u5161 1B25  
                    u5321 1D59                      u5241 1CFC                      u4281 0FB2  
                    u4185 0F30                      u3385 1A15                      u3465 19E9  
                    u4345 13F5                      u4521 0BE9                      u4505 0B57  
                    u4441 0A3E                      u4425 09AC                      u6210 12BC  
                    u6130 1261                      u3810 022E                      u3730 01BB  
                    u3722 01A8                      u3650 0134                      u3570 00E6  
                    u3490 0038                      u5090 1044                      u5330 1D6F  
                    u4610 1DF3                      u4290 0FCD                      u5410 153B  
                    u6131 1260                      u3811 022D                      u3731 01BC  
                    u3723 01AD                      u3651 0133                      u3571 00E5  
                    u3491 0037                      u5091 1043                      u5075 1022  
                    u4611 1DF2                      u4291 0FCC                      u4275 0F91  
                    u3395 1A21                      u4515 0BA2                      u4435 09F7  
                    u5411 153A                      u6220 12D9                      u6060 120F  
                    u3900 0284                      u3820 0233                      u3740 01D9  
                    u3732 01C1                      u3724 01AE                      u3580 00F1  
                    u5180 1B3A                      u5340 1D7F                      u5260 1D1E  
                    u4700 1E41                      u5500 16DF                      u5420 1574  
                    u6221 12D8                      u6125 1256                      u6061 120E  
                    u6045 11FB                      u3901 0283                      u3821 0232  
                    u3741 01D8                      u3733 01C2                      u3725 01B3  
                    u3661 0146                      u3581 00EF                      u5181 1B39  
                    u5341 1D7E                      u5261 1D1D                      u4701 1E40  
                    u4605 1DDE                      u4285 0FAF                      u4365 1459  
                    u5501 16DE                      u5421 1573                      u6230 12F6  
                    u6150 1275                      u3910 0291                      u3830 0239  
                    u3750 01FE                      u3726 01B4                      u3670 0158  
                    u3662 014D                      u3590 00F2                      u5190 1B4C  
                    u5350 1D83                      u4710 108C                      u4630 1E0C  
                    u4390 0947                      u5510 1768                      u5430 15B4  
                    u6231 12F5                      u6215 12B7                      u6151 1274  
                    u6055 1204                      u3911 0290                      u3831 0238  
                    u3751 01FD                      u3671 0157                      u3663 0154  
                    u3575 00E2                      u5191 1B4B                      u5175 1B2B  
                    u5351 1D82                      u5335 1D6A                      u5255 1D10  
                    u4711 108B                      u4631 1E0B                      u4615 1DEF  
                    u4295 0FC9                      u4375 14A6                      u4535 0BFD  
                    u4455 0A52                      u4391 0946                      u5511 1767  
                    u5431 15B3                      u5360 1978                      u6240 130D  
                    u6160 127A                      u6080 122B                      u3920 0296  
                    u3840 0240                      u3760 0203                      u3680 015C  
                    u5280 1D40                      u4800 111C                      u4720 10A0  
                    u4640 1E10                      u4560 18DD                      u4480 0AFB  
                    u5600 0428                      u5520 178C                      u5440 15C2  
                    u5361 1977                      u6241 130C                      u6225 12D5  
                    u6161 1279                      u6145 1264                      u6081 122A  
                    u3921 0295                      u3841 023F                      u3761 0202  
                    u3681 015B                      u5281 1D3F                      u4801 111B  
                    u4721 109F                      u4641 1E0F                      u4625 1DFF  
                    u4385 14F2                      u4561 18DC                      u4545 0C39  
                    u4481 0AFA                      u4465 0A8E                      u5601 0427  
                    u5521 178B                      u5441 15C1                      u5370 198B  
                    u6170 128E                      u6090 1240                      u3930 02A7  
                    u3850 0246                      u3690 016B                      u4810 1123  
                    u4650 1E17                      u4570 18E3                      u5610 0433  
                    u5530 17A3                      u5450 1606                      u5371 198A  
                    u6235 12F2                      u6171 128D                      u6075 1212  
                    u3931 02A6                      u3851 0245                      u3691 016A  
                    u5195 1B48                      u5275 1D32                      u4811 1122  
                    u4651 1E16                      u4571 18E2                      u4555 0C75  
                    u4475 0ACA                      u5611 0432                      u5531 17A2  
                    u5451 1605                      u5380 1A4D                      u6180 1295  
                    u3860 0258                      u3780 0219                      u4900 1BEF  
                    u4740 10E1                      u4580 1DA0                      u3940 0CB0  
                    u5700 054C                      u5620 044E                      u5540 02A9  
                    u5460 1637                      u6181 1294                      u6085 1227  
                    u3861 0257                      u3781 0218                      u4901 1BEE  
                    u4741 10E0                      u4581 1D9F                      u3941 0CAF  
                    u5701 054B                      u5621 044D                      u5605 0424  
                    u5541 17FA                      u5461 1634                      u5390 1A71  
                    u6190 129B                      u3870 0267                      u3790 021E  
                    u4830 1134                      u4670 1E29                      u4590 1DBA  
                    u3950 0CB6                      u5710 056D                      u5630 0460  
                    u5550 02C4                      u5470 163B                      u6191 129A  
                    u6095 1233                      u3791 021D                      u3775 020E  
                    u5295 1D45                      u4831 1133                      u4735 10C8  
                    u4671 1E28                      u4591 1DB9                      u3951 0CB5  
                    u4495 0B1B                      u5711 056C                      u5631 045F  
                    u5551 02C3                      u5535 179F                      u5471 163A  
                    u6096 1234                      u3880 0276                      u4920 1C0A  
                    u4840 1953                      u4760 10FF                      u4680 1E30  
                    u3960 0CBB                      u5800 06FB                      u5720 057C  
                    u5640 046A                      u5560 02EB                      u5480 166A  
                    u6097 1239                      u3881 0275                      u4921 1C09  
                    u4841 1952                      u4825 1126                      u4761 10FE  
                    u4745 10DD                      u4681 1E2F                      u4665 1E19  
                    u3961 0CBA                      u5801 06FA                      u5721 057B  
                    u5641 0469                      u5561 02EA                      u5545 17F5  
                    u5481 1669                      u6098 123A                      u3890 027F  
                    u4770 1103                      u3970 0CDC                      u5810 0711  
                    u5730 0597                      u5650 0476                      u5570 02FA  
                    u5490 16A4                      u6099 123F                      u3891 027E  
                    u3875 0262                      u4915 1BF1                      u4771 1102  
                    u4755 10F2                      u3971 0CDB                      u5811 0710  
                    u5731 0596                      u5715 0569                      u5651 0475  
                    u5571 02F9                      u5491 16A3                      u4940 1C28  
                    u4780 110A                      u3980 0CE2                      u5900 07A6  
                    u5820 0722                      u5660 04A2                      u5580 0315  
                    u4941 1C27                      u4925 1C06                      u4781 1109  
                    u3981 0CE1                      u5901 07A5                      u5821 0721  
                    u5805 06F7                      u5725 0578                      u5661 04A1  
                    u5581 0314                      u4950 1AE4                      u4870 196D  
                    u3990 0CE7                      u5910 07AD                      u5830 072E  
                    u5670 04C3                      u4951 1AE3                      u4935 1C1A  
                    u4871 196C                      u4855 195A                      u4695 1E33  
                    u3991 0CE6                      u5911 07AC                      u5831 072D  
                    u5815 070D                      u5671 04C2                      u5575 02F6  
                    u4960 1B00                      u4880 1BDB                      u5920 07C4  
                    u5840 0738                      u5760 06C3                      u5680 04D1  
                    u4961 1AFF                      u4881 1BDA                      u4865 1961  
                    u5921 07C3                      u5841 0737                      u5761 06C2  
                    u5745 061E                      u5681 04D0                      u5665 049E  
                    u4970 1B1A                      u5930 07D0                      u5850 0746  
                    u5770 06DB                      u4971 1B19                      u4795 110C  
                    u5931 07CF                      u5851 0745                      u5771 06DA  
                    u5755 0684                      u5675 04BF                      u5595 03F5  
                    u4980 1C45                      u5940 07EE                      u5860 075E  
                    u5780 06E2                      u4981 1C44                      u5941 07EB  
                    u5861 075D                      u5781 06E1                      u5950 114E  
                    u4990 1C61                      u5870 0772                      u5790 06EA  
                    u5951 114D                      u4975 1B16                      u4991 1C60  
                    u4895 1BE0                      u5871 0771                      u5855 0742  
                    u5791 06E9                      u5695 04E0                      u5960 1154  
                    u5880 077E                      u5961 1153                      u5881 077D  
                    u5865 075A                      u5970 1159                      u5890 078F  
                    u5971 1158                      u5891 078E                      u5980 117B  
                    u5981 117A                      u5990 1181                      u5991 1180  
                    _POT1 00CD                      _POT2 00C9              __CFG_WRT$OFF 0000  
                    _main 1E4A                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000           ___fldiv@new_exp 0025                     ??_ADC 0070  
                   CHAR@a 0078          __end_of_LCD_INIT 1907                     ?_ADC1 0070  
        __end_of_LCD_PROG 1AD0                     ?_CHAR 0070             ___fltol@sign1 005A  
         __end_of___fladd 02A9                     ?_main 0070           __end_of___fldiv 1320  
         __end_of___awdiv 0940           __end_of___flneg 000E             __CFG_WDTE$OFF 0000  
         __end_of___awmod 1BCB           __end_of___flmul 1000           __end_of___flsub 194D  
         __end_of___fltol 107F                     _ANSEL 0188           __end_of___lldiv 1C31  
         ___awdiv@divisor 0077           __end_of___llmod 1B72           __end_of___lwdiv 1A3E  
         __end_of___lwmod 19FA           ___awdiv@counter 0020                     _SETUP 000E  
 __size_of_INTERRUPCIONES 0012                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _WRITE 1A3E       __size_of_LCD_CURSOR 0027            __CFG_FCMEN$OFF 0000  
                   _delay 18B7           __end_of_dpowers 08A0                     _scale 0940  
         __end_of_isdigit 18E7            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 07F3  
            __end_of_ADC1 18A7              __end_of_CHAR 1929            __CFG_MCLRE$OFF 0000  
         __initialization 07F3              __end_of_main 2000                    ??_ADC1 0070  
                  ??_CHAR 0076                    ??_main 006E                 ??_LCD_CLR 0079  
                  ?_SETUP 0070      __size_of__tdiv_to_l_ 00BD                    ?_WRITE 0079  
                  ?_delay 0070          ___llmod@dividend 0074                    ?_scale 003E  
                  _ADRESH 001E                    _ADRESL 009E          ___awdiv@dividend 0079  
                  WRITE@a 0079                    WRITE@b 0020                    _ANSELH 0189  
                  _BUFFER 00DE          __end_of___xxtofl 1D8D            __CFG_PWRTE$OFF 0000  
        __end_of__powers_ 0844                    ___flge 1C31                    ___fleq 1AD0  
               ??___fladd 005A                    ___wmul 194D                 ??___fldiv 0078  
               ??___awdiv 007B                 ??___flneg 0074                 ??___awmod 0074  
               ??___flmul 002C                 ??___flsub 007E                 ??___fltol 0055  
               ??___lldiv 0078                 ??___llmod 0078                 ??___lwdiv 007A  
               ??___lwmod 0074                    _cursor 00DD                    _fround 1320  
                  delay@d 0074          ___awdiv@quotient 0022           ___awmod@divisor 0070  
         ___awmod@counter 0075                 ??_isdigit 0070        __size_of__Umul8_16 0027  
               ??_sprintf 00A9                ___flge@ff1 0070                ___flge@ff2 0074  
            ___xxtofl@arg 007A                 ?_LCD_INIT 0070              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
               ?_LCD_PROG 0070   __end_of__initialization 07FC                 LCD_INIT@a 0078  
              ___flneg@f1 0070              ??_LCD_CURSOR 007A                ___fltol@f1 0051  
           __end_of_SETUP 0021             __end_of_WRITE 1A84            __pcstackCOMMON 0070  
           __end_of_delay 18C3             __end_of_scale 0C9F            _INTERRUPCIONES 18C3  
              __div_to_l_ 107F                   ??_SETUP 0070                   ??_WRITE 007B  
      __end_of_LCD_CURSOR 1999                   ??_delay 0072           __div_to_l_@exp1 0025  
         __div_to_l_@cntr 0024                   ??_scale 0042           __div_to_l_@quot 0020  
            sprintf@width 00BF                __pbssBANK1 00C9                ??_LCD_INIT 0076  
              ??_LCD_PROG 0079             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
       __end_of__Umul8_16 19C0                __pmaintext 1E4A                   ?___flge 0070  
                 ?___fleq 0070                   ?___wmul 0070                   ?_fround 003E  
  __end_of_INTERRUPCIONES 18D5                   _LCD_CLR 08CA                 ?___xxtofl 0070  
                 _VAL_ADC 00DB                   _VAR_LCD 00D1                __stringtab 0800  
       __end_of__npowers_ 0878           __size_of___flge 00A2           __size_of___fleq 004E  
                 ___fladd 0021                   ___fldiv 113D                   ___awdiv 08D7  
                 ___flneg 0003                   ___awmod 1B72                   ___flmul 0C9F  
                 ___flsub 1929                   ___fltol 1003                   ___lldiv 1BCB  
         __size_of___wmul 0025                   ___llmod 1B1E                   ___lwdiv 19FA  
              _fround$974 004D                _fround$975 0049                   ___lwmod 19C0  
         ?_INTERRUPCIONES 0070           __size_of_fround 020B                   __ptext1 152B  
                 __ptext2 0940                   __ptext3 1B72                   __ptext4 08D7  
                 __ptext5 18D5                   __ptext6 1320                   __ptext7 19C0  
                 __ptext8 19FA                   __ptext9 0C9F              __size_of_ADC 0008  
             ?__div_to_l_ 0070                   _dpowers 0878                   _isdigit 18D5  
              ??___xxtofl 0074          ___awmod@dividend 0072                   _sprintf 152B  
                 clrloop0 18B0      end_of_initialization 07FC           ___lldiv@divisor 0070  
         ___lldiv@counter 007D                   psplit$0 A002C            __tdiv_to_l_@f1 0070  
          __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078               ___fladd@grs 0065  
           ___xxtofl@sign 0078               ___fldiv@grs 0027               ___fldiv@rem 0020  
             ___flmul@grs 0032         __size_of_LCD_INIT 0020         __size_of_LCD_PROG 004C  
     __size_of__div_to_l_ 00BE            __end_of___flge 1CD3            __end_of___fleq 1B1E  
          __end_of___wmul 1972         pnum$text1_split_1 002C            __end_of_fround 152B  
     start_initialization 07F3               __end_of_ADC 18AF       __end_of__tdiv_to_l_ 1E4A  
         ___llmod@divisor 0070           ___llmod@counter 0079  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??___flge 0078                  ??___fleq 0078                  ??___wmul 0074  
               __Umul8_16 1999                  ??_fround 0042             sprintf@tmpval 00B7  
               ___fladd@a 0056                 ___fladd@b 0052                fround@prec 0051  
                ?_LCD_CLR 0070                 ___fldiv@a 0070                 ___fldiv@b 0074  
               ___flmul@a 0028                 ___flmul@b 0024                 ___flsub@a 0066  
               ___flsub@b 006A                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0         __size_of___xxtofl 00BA               sprintf@flag 00BD  
             sprintf@eexp 00BB               sprintf@fval 00C1               sprintf@prec 00C5  
        ___lwdiv@dividend 0078          ??_INTERRUPCIONES 0070                  ?___fladd 0052  
                ?___fldiv 0070                  ?___awdiv 0077                  ?___flneg 0070  
                ?___awmod 0070                  ?___flmul 0024                  ?___flsub 0066  
                ?___fltol 0051                  ?___lldiv 0070                  ?___llmod 0070  
               __npowers_ 0844                ?__Umul8_16 0070                  ?___lwdiv 0076  
                ?___lwmod 0070                 __pstrings 0800               __tdiv_to_l_ 1D8D  
            ??__div_to_l_ 0078                  ?_isdigit 0070            __size_of_SETUP 0013  
          __size_of_WRITE 0046                 _scale$976 004C          ___lwdiv@quotient 007B  
          __size_of_delay 000C                  ?_sprintf 00A0            __size_of_scale 035F  
                _LCD_INIT 18E7                  _LCD_PROG 1A84            ___wmul@product 0074  
               clear_ram0 18AF                  _PIE1bits 008C                  _PIR1bits 000C  
      __end_of__div_to_l_ 113D                  _VAL_ADC2 00D9                _ADCON0bits 001F  
             __stringbase 080F                _ADCON1bits 009F         ___wmul@multiplier 0070  
        __size_of_LCD_CLR 000D               ??__Umul8_16 0072          __size_of___fladd 0288  
        __size_of___fldiv 01E3          __size_of___awdiv 0069          __size_of___flneg 000B  
        __size_of___awmod 0059          __size_of___flmul 0361          __size_of___flsub 0024  
        __size_of___fltol 007C          __size_of___lldiv 0066          __size_of___llmod 0054  
        __size_of___lwdiv 0044          __size_of___lwmod 003A        __end_of__stringtab 0810  
             _isdigit$797 0070                sprintf@val 00B3                  ___xxtofl 1CD3  
        __size_of_isdigit 0012           ___lwdiv@divisor 0076           ___lwdiv@counter 007D  
                __ptext10 1999                  __ptext11 1D8D                  __ptext20 0003  
                __ptext12 107F                  __ptext21 1C31                  __ptext13 1CD3  
                __ptext30 18E7                  __ptext22 1AD0                  __ptext14 194D  
                __ptext31 18B7                  __ptext23 113D                  __ptext15 1B1E  
                __ptext32 18C3                  __ptext24 1A3E                  __ptext16 1BCB  
                __ptext33 18A0                  __ptext25 1907                  __ptext17 1003  
                __ptext34 18A7                  __ptext26 000E                  __ptext18 1929  
                __ptext27 1A84                  __ptext19 0021                  __ptext28 1972  
                __ptext29 08CA         __CFG_BOR4V$BOR40V 0000                  __powers_ 0810  
           __size_of_ADC1 0007             __size_of_CHAR 0022          __size_of_sprintf F2C8  
           __size_of_main 01B6                 pnum$text1 000A                _LCD_CURSOR 1972  
              _INTCONbits 000B                  isdigit@c 0071                  scale@scl 0050  
               sprintf@ap 00B2          __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024  
               sprintf@sp 00C7          __tdiv_to_l_@quot 0020          ___lwmod@dividend 0072  
        ___lldiv@dividend 0074                 stringcode 080A              ?__tdiv_to_l_ 0070  
  __Umul8_16@multiplicand 0070                  sprintf@c 00C8                  sprintf@f 00A0  
        ___lldiv@quotient 0079           ___lwmod@divisor 0070           ___lwmod@counter 0075  
                stringdir 080A                  stringtab 0800             ___fladd@signs 0062  
            ___fladd@aexp 0063              ___fladd@bexp 0064      __Umul8_16@multiplier 0078  
             ?_LCD_CURSOR 0079         __Umul8_16@product 0074  
